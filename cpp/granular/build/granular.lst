ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 2
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"granular.cpp"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text._ZN5daisy12SdmmcHandlerD2Ev,"axG",%progbits,_ZN5daisy12SdmmcHandlerD5Ev,comdat
  19              		.align	1
  20              		.p2align 2,,3
  21              		.weak	_ZN5daisy12SdmmcHandlerD2Ev
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	_ZN5daisy12SdmmcHandlerD2Ev:
  27              	.LVL0:
  28              	.LFB1738:
  29              		.file 1 "../../libDaisy//src/per/sdmmc.h"
   1:../../libDaisy//src/per/sdmmc.h **** /*
   2:../../libDaisy//src/per/sdmmc.h **** TODO: 
   3:../../libDaisy//src/per/sdmmc.h **** - Implement configuration (currently all settings are fixed).
   4:../../libDaisy//src/per/sdmmc.h **** */
   5:../../libDaisy//src/per/sdmmc.h **** #pragma once
   6:../../libDaisy//src/per/sdmmc.h **** #ifndef DSY_SDMMC_H
   7:../../libDaisy//src/per/sdmmc.h **** #define DSY_SDMMC_H /**< macro */
   8:../../libDaisy//src/per/sdmmc.h **** 
   9:../../libDaisy//src/per/sdmmc.h **** #include <stdint.h>
  10:../../libDaisy//src/per/sdmmc.h **** 
  11:../../libDaisy//src/per/sdmmc.h **** 
  12:../../libDaisy//src/per/sdmmc.h **** namespace daisy
  13:../../libDaisy//src/per/sdmmc.h **** {
  14:../../libDaisy//src/per/sdmmc.h **** /** @ingroup peripheral
  15:../../libDaisy//src/per/sdmmc.h ****     @{
  16:../../libDaisy//src/per/sdmmc.h ****     */
  17:../../libDaisy//src/per/sdmmc.h **** 
  18:../../libDaisy//src/per/sdmmc.h **** /** Configuration for interfacing with SD cards.
  19:../../libDaisy//src/per/sdmmc.h ****  *  Currently only supports operation using FatFS filesystem
  20:../../libDaisy//src/per/sdmmc.h ****  * 
  21:../../libDaisy//src/per/sdmmc.h ****  *  Only SDMMC1 is supported at this time.
  22:../../libDaisy//src/per/sdmmc.h ****  *
  23:../../libDaisy//src/per/sdmmc.h ****  *  Pins are fixed to the following:
  24:../../libDaisy//src/per/sdmmc.h ****  *  PC12 - SDMMC1 CK
  25:../../libDaisy//src/per/sdmmc.h ****  *  PD2  - SDMMC1 CMD
  26:../../libDaisy//src/per/sdmmc.h ****  *  PC8  - SDMMC1 D0
  27:../../libDaisy//src/per/sdmmc.h ****  *  PC9  - SDMMC1 D1 (optional)
  28:../../libDaisy//src/per/sdmmc.h ****  *  PC10 - SDMMC1 D2 (optional)
  29:../../libDaisy//src/per/sdmmc.h ****  *  PC11 - SDMMC1 D3 (optional)
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 2


  30:../../libDaisy//src/per/sdmmc.h **** */
  31:../../libDaisy//src/per/sdmmc.h **** class SdmmcHandler
  32:../../libDaisy//src/per/sdmmc.h **** {
  33:../../libDaisy//src/per/sdmmc.h ****   public:
  34:../../libDaisy//src/per/sdmmc.h ****     /** Return values for the SdmmcHandler class */
  35:../../libDaisy//src/per/sdmmc.h ****     enum class Result
  36:../../libDaisy//src/per/sdmmc.h ****     {
  37:../../libDaisy//src/per/sdmmc.h ****         OK,
  38:../../libDaisy//src/per/sdmmc.h ****         ERROR,
  39:../../libDaisy//src/per/sdmmc.h ****     };
  40:../../libDaisy//src/per/sdmmc.h **** 
  41:../../libDaisy//src/per/sdmmc.h ****     /** Sets whether 4-bit mode or 1-bit mode is used for the SDMMC */
  42:../../libDaisy//src/per/sdmmc.h ****     enum class BusWidth
  43:../../libDaisy//src/per/sdmmc.h ****     {
  44:../../libDaisy//src/per/sdmmc.h ****         BITS_1, /**< Only 1 bit of data per clock is transferred */
  45:../../libDaisy//src/per/sdmmc.h ****         BITS_4, /**< 4-bits of parallel data for each clock pulse */
  46:../../libDaisy//src/per/sdmmc.h ****     };
  47:../../libDaisy//src/per/sdmmc.h **** 
  48:../../libDaisy//src/per/sdmmc.h ****     /** 
  49:../../libDaisy//src/per/sdmmc.h ****     Sets the desired clock speed of the SD card bus. \n 
  50:../../libDaisy//src/per/sdmmc.h ****     Initialization is always done at or below 400kHz, and then the user speed is set.
  51:../../libDaisy//src/per/sdmmc.h ****     */
  52:../../libDaisy//src/per/sdmmc.h ****     enum class Speed
  53:../../libDaisy//src/per/sdmmc.h ****     {
  54:../../libDaisy//src/per/sdmmc.h ****         SLOW, /**< 400kHz, initialization  performed at this rate, before moving to user value */
  55:../../libDaisy//src/per/sdmmc.h ****         MEDIUM_SLOW, /**< 12.5MHz - half of standard rate */
  56:../../libDaisy//src/per/sdmmc.h ****         STANDARD,    /**< 25MHz - DS (Default Speed for SDMMC) */
  57:../../libDaisy//src/per/sdmmc.h ****         FAST,        /**< 50MHz - HS (High Speed signaling) */
  58:../../libDaisy//src/per/sdmmc.h ****         VERY_FAST, /**< 100MHz - SDR50 Overclocked rate for maximum transfer rates */
  59:../../libDaisy//src/per/sdmmc.h ****     };
  60:../../libDaisy//src/per/sdmmc.h **** 
  61:../../libDaisy//src/per/sdmmc.h ****     struct Config
  62:../../libDaisy//src/per/sdmmc.h ****     {
  63:../../libDaisy//src/per/sdmmc.h ****         Speed    speed;
  64:../../libDaisy//src/per/sdmmc.h ****         BusWidth width;
  65:../../libDaisy//src/per/sdmmc.h ****         bool
  66:../../libDaisy//src/per/sdmmc.h ****             clock_powersave; /**< When true, the clock will stop between transfers to save power. *
  67:../../libDaisy//src/per/sdmmc.h **** 
  68:../../libDaisy//src/per/sdmmc.h ****         /** Configures settings to their default settings */
  69:../../libDaisy//src/per/sdmmc.h ****         void Defaults()
  70:../../libDaisy//src/per/sdmmc.h ****         {
  71:../../libDaisy//src/per/sdmmc.h ****             speed           = Speed::FAST;
  72:../../libDaisy//src/per/sdmmc.h ****             width           = BusWidth::BITS_4;
  73:../../libDaisy//src/per/sdmmc.h ****             clock_powersave = false;
  74:../../libDaisy//src/per/sdmmc.h ****         }
  75:../../libDaisy//src/per/sdmmc.h ****     };
  76:../../libDaisy//src/per/sdmmc.h **** 
  77:../../libDaisy//src/per/sdmmc.h ****     SdmmcHandler() {}
  78:../../libDaisy//src/per/sdmmc.h ****     ~SdmmcHandler() {}
  30              		.loc 1 78 5 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              		.loc 1 78 22 is_stmt 0 view .LVU1
  36 0000 7047     		bx	lr
  37              		.cfi_endproc
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 3


  38              	.LFE1738:
  40              		.weak	_ZN5daisy12SdmmcHandlerD1Ev
  41              		.thumb_set _ZN5daisy12SdmmcHandlerD1Ev,_ZN5daisy12SdmmcHandlerD2Ev
  42 0002 00BF     		.section	.text._ZN5daisy10TusenskonaD2Ev,"axG",%progbits,_ZN5daisy10TusenskonaD5Ev,comdat
  43              		.align	1
  44              		.p2align 2,,3
  45              		.weak	_ZN5daisy10TusenskonaD2Ev
  46              		.syntax unified
  47              		.thumb
  48              		.thumb_func
  50              	_ZN5daisy10TusenskonaD2Ev:
  51              	.LVL1:
  52              	.LFB2580:
  53              		.file 2 "../../tusenskona/src/tusenskona.h"
   1:../../tusenskona/src/tusenskona.h **** #ifndef TUSENSKONA_H
   2:../../tusenskona/src/tusenskona.h **** #define TUSENSKONA_H
   3:../../tusenskona/src/tusenskona.h **** 
   4:../../tusenskona/src/tusenskona.h **** #include "daisy_seed.h"
   5:../../tusenskona/src/tusenskona.h **** 
   6:../../tusenskona/src/tusenskona.h **** namespace daisy
   7:../../tusenskona/src/tusenskona.h **** {
   8:../../tusenskona/src/tusenskona.h **** 
   9:../../tusenskona/src/tusenskona.h **** class Tusenskona
  10:../../tusenskona/src/tusenskona.h **** {
  11:../../tusenskona/src/tusenskona.h ****   public:
  12:../../tusenskona/src/tusenskona.h ****     /** Switches */
  13:../../tusenskona/src/tusenskona.h ****     enum Sw
  14:../../tusenskona/src/tusenskona.h ****     {
  15:../../tusenskona/src/tusenskona.h ****         BUTTON_1,    /** & */
  16:../../tusenskona/src/tusenskona.h ****         BUTTON_2,    /** & */
  17:../../tusenskona/src/tusenskona.h ****         BUTTON_LAST, /** &  */
  18:../../tusenskona/src/tusenskona.h ****     };
  19:../../tusenskona/src/tusenskona.h **** 
  20:../../tusenskona/src/tusenskona.h ****     /** Knobs */
  21:../../tusenskona/src/tusenskona.h ****     enum Knob
  22:../../tusenskona/src/tusenskona.h ****     {
  23:../../tusenskona/src/tusenskona.h ****         KNOB_1,    /** &  */
  24:../../tusenskona/src/tusenskona.h ****         KNOB_2,    /** & */
  25:../../tusenskona/src/tusenskona.h ****         KNOB_3,    /** & */
  26:../../tusenskona/src/tusenskona.h ****         KNOB_4,    /** & */
  27:../../tusenskona/src/tusenskona.h ****         KNOB_LAST, /** & */
  28:../../tusenskona/src/tusenskona.h ****     };
  29:../../tusenskona/src/tusenskona.h **** 
  30:../../tusenskona/src/tusenskona.h ****     Tusenskona() {}
  31:../../tusenskona/src/tusenskona.h ****     ~Tusenskona() {}
  54              		.loc 2 31 5 is_stmt 1 view -0
  55              		.cfi_startproc
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  58              		@ link register save eliminated.
  59              	.LBB436:
  60              	.LBI436:
  61              		.file 3 "../../libDaisy//src/hid/rgb_led.h"
   1:../../libDaisy//src/hid/rgb_led.h **** #pragma once
   2:../../libDaisy//src/hid/rgb_led.h **** #ifndef DSY_RGB_LED_H
   3:../../libDaisy//src/hid/rgb_led.h **** #define DSY_RGB_LED_H
   4:../../libDaisy//src/hid/rgb_led.h **** #include "hid/led.h"
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 4


   5:../../libDaisy//src/hid/rgb_led.h **** #include "util/color.h"
   6:../../libDaisy//src/hid/rgb_led.h **** 
   7:../../libDaisy//src/hid/rgb_led.h **** namespace daisy
   8:../../libDaisy//src/hid/rgb_led.h **** {
   9:../../libDaisy//src/hid/rgb_led.h **** /** @addtogroup feedback
  10:../../libDaisy//src/hid/rgb_led.h ****     @{
  11:../../libDaisy//src/hid/rgb_led.h **** */
  12:../../libDaisy//src/hid/rgb_led.h **** 
  13:../../libDaisy//src/hid/rgb_led.h **** /** 3x LEDs configured as an RGB for ease of use. */
  14:../../libDaisy//src/hid/rgb_led.h **** class RgbLed
  15:../../libDaisy//src/hid/rgb_led.h **** {
  16:../../libDaisy//src/hid/rgb_led.h ****   public:
  17:../../libDaisy//src/hid/rgb_led.h ****     RgbLed() {}
  18:../../libDaisy//src/hid/rgb_led.h ****     ~RgbLed() {}
  62              		.loc 3 18 5 view .LVU3
  63              	.LBB437:
  64              	.LBI437:
  65              		.file 4 "../../libDaisy//src/hid/led.h"
   1:../../libDaisy//src/hid/led.h **** 
   2:../../libDaisy//src/hid/led.h **** #pragma once
   3:../../libDaisy//src/hid/led.h **** #ifndef DSY_LED_H
   4:../../libDaisy//src/hid/led.h **** #define DSY_LED_H
   5:../../libDaisy//src/hid/led.h **** #include "daisy_core.h"
   6:../../libDaisy//src/hid/led.h **** #include "per/gpio.h"
   7:../../libDaisy//src/hid/led.h **** 
   8:../../libDaisy//src/hid/led.h **** /* TODO - Get this set up to work with the dev_leddriver stuff as well
   9:../../libDaisy//src/hid/led.h **** - Setup Hardware PWM for pins that have it
  10:../../libDaisy//src/hid/led.h **** */
  11:../../libDaisy//src/hid/led.h **** 
  12:../../libDaisy//src/hid/led.h **** namespace daisy
  13:../../libDaisy//src/hid/led.h **** {
  14:../../libDaisy//src/hid/led.h **** /**
  15:../../libDaisy//src/hid/led.h ****     @brief LED Class providing simple Software PWM ability, etc \n 
  16:../../libDaisy//src/hid/led.h ****     Eventually this will work with hardware PWM, and external LED Driver devices as well.
  17:../../libDaisy//src/hid/led.h ****     @author shensley
  18:../../libDaisy//src/hid/led.h ****     @date March 2020
  19:../../libDaisy//src/hid/led.h ****     @ingroup feedback
  20:../../libDaisy//src/hid/led.h **** */
  21:../../libDaisy//src/hid/led.h **** class Led
  22:../../libDaisy//src/hid/led.h **** {
  23:../../libDaisy//src/hid/led.h ****   public:
  24:../../libDaisy//src/hid/led.h ****     Led() {}
  25:../../libDaisy//src/hid/led.h ****     ~Led() {}
  66              		.loc 4 25 5 view .LVU4
  67              		.loc 4 25 5 is_stmt 0 view .LVU5
  68              	.LBE437:
  69              	.LBB438:
  70              	.LBI438:
  71              		.loc 4 25 5 is_stmt 1 view .LVU6
  72              		.loc 4 25 5 is_stmt 0 view .LVU7
  73              	.LBE438:
  74              	.LBB439:
  75              	.LBI439:
  76              		.loc 4 25 5 is_stmt 1 view .LVU8
  77              		.loc 4 25 5 is_stmt 0 view .LVU9
  78              	.LBE439:
  79              	.LBE436:
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 5


  80              	.LBB440:
  81              	.LBI440:
  82              		.file 5 "../../libDaisy//src/hid/switch.h"
   1:../../libDaisy//src/hid/switch.h **** #pragma once
   2:../../libDaisy//src/hid/switch.h **** #ifndef DSY_SWITCH_H
   3:../../libDaisy//src/hid/switch.h **** #define DSY_SWITCH_H
   4:../../libDaisy//src/hid/switch.h **** #include "daisy_core.h"
   5:../../libDaisy//src/hid/switch.h **** #include "per/gpio.h"
   6:../../libDaisy//src/hid/switch.h **** #include "sys/system.h"
   7:../../libDaisy//src/hid/switch.h **** 
   8:../../libDaisy//src/hid/switch.h **** namespace daisy
   9:../../libDaisy//src/hid/switch.h **** {
  10:../../libDaisy//src/hid/switch.h **** /** 
  11:../../libDaisy//src/hid/switch.h ****     Generic Class for handling momentary/latching switches \n 
  12:../../libDaisy//src/hid/switch.h ****     Inspired/influenced by Mutable Instruments (pichenettes) Switch classes
  13:../../libDaisy//src/hid/switch.h ****     @author Stephen Hensley
  14:../../libDaisy//src/hid/switch.h ****     @date December 2019
  15:../../libDaisy//src/hid/switch.h ****     @ingroup controls
  16:../../libDaisy//src/hid/switch.h **** */
  17:../../libDaisy//src/hid/switch.h **** class Switch
  18:../../libDaisy//src/hid/switch.h **** {
  19:../../libDaisy//src/hid/switch.h ****   public:
  20:../../libDaisy//src/hid/switch.h ****     /** Specifies the expected behavior of the switch */
  21:../../libDaisy//src/hid/switch.h ****     enum Type
  22:../../libDaisy//src/hid/switch.h ****     {
  23:../../libDaisy//src/hid/switch.h ****         TYPE_TOGGLE,    /**< & */
  24:../../libDaisy//src/hid/switch.h ****         TYPE_MOMENTARY, /**< & */
  25:../../libDaisy//src/hid/switch.h ****     };
  26:../../libDaisy//src/hid/switch.h ****     /** Specifies whether the pressed is HIGH or LOW. */
  27:../../libDaisy//src/hid/switch.h ****     enum Polarity
  28:../../libDaisy//src/hid/switch.h ****     {
  29:../../libDaisy//src/hid/switch.h ****         POLARITY_NORMAL,   /**< & */
  30:../../libDaisy//src/hid/switch.h ****         POLARITY_INVERTED, /**< & */
  31:../../libDaisy//src/hid/switch.h ****     };
  32:../../libDaisy//src/hid/switch.h **** 
  33:../../libDaisy//src/hid/switch.h ****     /** Specifies whether to use built-in Pull Up/Down resistors to hold button at a given state wh
  34:../../libDaisy//src/hid/switch.h ****     enum Pull
  35:../../libDaisy//src/hid/switch.h ****     {
  36:../../libDaisy//src/hid/switch.h ****         PULL_UP,   /**< & */
  37:../../libDaisy//src/hid/switch.h ****         PULL_DOWN, /**< & */
  38:../../libDaisy//src/hid/switch.h ****         PULL_NONE, /**< & */
  39:../../libDaisy//src/hid/switch.h ****     };
  40:../../libDaisy//src/hid/switch.h **** 
  41:../../libDaisy//src/hid/switch.h ****     Switch() {}
  42:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
  83              		.loc 5 42 5 is_stmt 1 view .LVU10
  84              		.loc 5 42 5 is_stmt 0 view .LVU11
  85              	.LBE440:
  86              	.LBB441:
  87              	.LBI441:
  88              		.loc 5 42 5 is_stmt 1 view .LVU12
  89              		.loc 5 42 5 is_stmt 0 view .LVU13
  90              	.LBE441:
  91              	.LBB442:
  92              	.LBI442:
  93              		.file 6 "../../libDaisy//src/hid/ctrl.h"
   1:../../libDaisy//src/hid/ctrl.h **** #pragma once
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 6


   2:../../libDaisy//src/hid/ctrl.h **** #ifndef DSY_KNOB_H
   3:../../libDaisy//src/hid/ctrl.h **** #define DSY_KNOB_H /**< & */
   4:../../libDaisy//src/hid/ctrl.h **** #include <stdint.h>
   5:../../libDaisy//src/hid/ctrl.h **** 
   6:../../libDaisy//src/hid/ctrl.h **** #ifdef __cplusplus
   7:../../libDaisy//src/hid/ctrl.h **** namespace daisy
   8:../../libDaisy//src/hid/ctrl.h **** {
   9:../../libDaisy//src/hid/ctrl.h **** /**
  10:../../libDaisy//src/hid/ctrl.h ****     @brief Hardware Interface for control inputs \n 
  11:../../libDaisy//src/hid/ctrl.h ****     Primarily designed for ADC input controls such as \n 
  12:../../libDaisy//src/hid/ctrl.h ****     potentiometers, and control voltage. \n 
  13:../../libDaisy//src/hid/ctrl.h ****     @author Stephen Hensley
  14:../../libDaisy//src/hid/ctrl.h ****     @date November 2019
  15:../../libDaisy//src/hid/ctrl.h ****     @ingroup controls
  16:../../libDaisy//src/hid/ctrl.h **** */
  17:../../libDaisy//src/hid/ctrl.h **** class AnalogControl
  18:../../libDaisy//src/hid/ctrl.h **** {
  19:../../libDaisy//src/hid/ctrl.h ****   public:
  20:../../libDaisy//src/hid/ctrl.h ****     /** Constructor */
  21:../../libDaisy//src/hid/ctrl.h ****     AnalogControl() {}
  22:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
  23:../../libDaisy//src/hid/ctrl.h ****     ~AnalogControl() {}
  94              		.loc 6 23 5 is_stmt 1 view .LVU14
  95              		.loc 6 23 5 is_stmt 0 view .LVU15
  96              	.LBE442:
  97              	.LBB443:
  98              	.LBI443:
  99              		.loc 6 23 5 is_stmt 1 view .LVU16
 100              		.loc 6 23 5 is_stmt 0 view .LVU17
 101              	.LBE443:
 102              	.LBB444:
 103              	.LBI444:
 104              		.loc 6 23 5 is_stmt 1 view .LVU18
 105              		.loc 6 23 5 is_stmt 0 view .LVU19
 106              	.LBE444:
 107              	.LBB445:
 108              	.LBI445:
 109              		.loc 6 23 5 is_stmt 1 view .LVU20
 110              		.loc 6 23 5 is_stmt 0 view .LVU21
 111              	.LBE445:
 112              	.LBB446:
 113              	.LBI446:
 114              		.file 7 "../../libDaisy//src/hid/encoder.h"
   1:../../libDaisy//src/hid/encoder.h **** #pragma once
   2:../../libDaisy//src/hid/encoder.h **** #ifndef DSY_ENCODER_H
   3:../../libDaisy//src/hid/encoder.h **** #define DSY_ENCODER_H
   4:../../libDaisy//src/hid/encoder.h **** #include "daisy_core.h"
   5:../../libDaisy//src/hid/encoder.h **** #include "per/gpio.h"
   6:../../libDaisy//src/hid/encoder.h **** #include "hid/switch.h"
   7:../../libDaisy//src/hid/encoder.h **** 
   8:../../libDaisy//src/hid/encoder.h **** namespace daisy
   9:../../libDaisy//src/hid/encoder.h **** {
  10:../../libDaisy//src/hid/encoder.h **** /** 
  11:../../libDaisy//src/hid/encoder.h ****     @brief Generic Class for handling Quadrature Encoders \n 
  12:../../libDaisy//src/hid/encoder.h ****     Inspired/influenced by Mutable Instruments (pichenettes) Encoder classes
  13:../../libDaisy//src/hid/encoder.h ****     @author Stephen Hensley
  14:../../libDaisy//src/hid/encoder.h ****     @date December 2019
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 7


  15:../../libDaisy//src/hid/encoder.h ****     @ingroup controls
  16:../../libDaisy//src/hid/encoder.h **** */
  17:../../libDaisy//src/hid/encoder.h **** class Encoder
  18:../../libDaisy//src/hid/encoder.h **** {
  19:../../libDaisy//src/hid/encoder.h ****   public:
  20:../../libDaisy//src/hid/encoder.h ****     Encoder() {}
  21:../../libDaisy//src/hid/encoder.h ****     ~Encoder() {}
 115              		.loc 7 21 5 is_stmt 1 view .LVU22
 116              	.LBB447:
 117              	.LBI447:
 118              		.loc 5 42 5 view .LVU23
 119              		.loc 5 42 5 is_stmt 0 view .LVU24
 120              	.LBE447:
 121              	.LBE446:
 122              	.LBB448:
 123              	.LBI448:
 124              		.file 8 "../../libDaisy//src/daisy_seed.h"
   1:../../libDaisy//src/daisy_seed.h **** #pragma once
   2:../../libDaisy//src/daisy_seed.h **** #ifndef DSY_SEED_H
   3:../../libDaisy//src/daisy_seed.h **** #define DSY_SEED_H
   4:../../libDaisy//src/daisy_seed.h **** 
   5:../../libDaisy//src/daisy_seed.h **** #include "daisy.h"
   6:../../libDaisy//src/daisy_seed.h **** 
   7:../../libDaisy//src/daisy_seed.h **** //Uncomment this out if you're still using the rev2 hardware
   8:../../libDaisy//src/daisy_seed.h **** //#define SEED_REV2
   9:../../libDaisy//src/daisy_seed.h **** 
  10:../../libDaisy//src/daisy_seed.h **** namespace daisy
  11:../../libDaisy//src/daisy_seed.h **** {
  12:../../libDaisy//src/daisy_seed.h **** /**
  13:../../libDaisy//src/daisy_seed.h ****    @brief This is the higher-level interface for the Daisy board. \n 
  14:../../libDaisy//src/daisy_seed.h ****     All basic peripheral configuration/initialization is setup here. \n
  15:../../libDaisy//src/daisy_seed.h **** 
  16:../../libDaisy//src/daisy_seed.h ****    @ingroup boards
  17:../../libDaisy//src/daisy_seed.h **** */
  18:../../libDaisy//src/daisy_seed.h **** class DaisySeed
  19:../../libDaisy//src/daisy_seed.h **** {
  20:../../libDaisy//src/daisy_seed.h ****   public:
  21:../../libDaisy//src/daisy_seed.h ****     DaisySeed() {}
  22:../../libDaisy//src/daisy_seed.h ****     ~DaisySeed() {}
 125              		.loc 8 22 5 is_stmt 1 view .LVU25
 126              	.LBB449:
 127              	.LBI449:
 128              		.file 9 "../../libDaisy//src/sys/system.h"
   1:../../libDaisy//src/sys/system.h **** #ifndef DSY_SYSTEM_H
   2:../../libDaisy//src/sys/system.h **** #define DSY_SYSTEM_H
   3:../../libDaisy//src/sys/system.h **** 
   4:../../libDaisy//src/sys/system.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation is provided below
   5:../../libDaisy//src/sys/system.h **** 
   6:../../libDaisy//src/sys/system.h **** #include <cstdint>
   7:../../libDaisy//src/sys/system.h **** #include "per/tim.h"
   8:../../libDaisy//src/sys/system.h **** 
   9:../../libDaisy//src/sys/system.h **** namespace daisy
  10:../../libDaisy//src/sys/system.h **** {
  11:../../libDaisy//src/sys/system.h **** /** A handle for interacting with the Core System.
  12:../../libDaisy//src/sys/system.h ****  ** This includes the Clock tree, MPU, global DMA initialization,
  13:../../libDaisy//src/sys/system.h ****  ** cache handling, and any other necessary global initiailzation
  14:../../libDaisy//src/sys/system.h ****  **
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 8


  15:../../libDaisy//src/sys/system.h ****  ** @author shensley
  16:../../libDaisy//src/sys/system.h ****  ** @ingroup system
  17:../../libDaisy//src/sys/system.h ****  */
  18:../../libDaisy//src/sys/system.h **** class System
  19:../../libDaisy//src/sys/system.h **** {
  20:../../libDaisy//src/sys/system.h ****   public:
  21:../../libDaisy//src/sys/system.h ****     /** Contains settings for initializing the System */
  22:../../libDaisy//src/sys/system.h ****     struct Config
  23:../../libDaisy//src/sys/system.h ****     {
  24:../../libDaisy//src/sys/system.h ****         /** Specifies the system clock frequency that feeds APB/AHB clocks, etc. */
  25:../../libDaisy//src/sys/system.h ****         enum class SysClkFreq
  26:../../libDaisy//src/sys/system.h ****         {
  27:../../libDaisy//src/sys/system.h ****             FREQ_400MHZ,
  28:../../libDaisy//src/sys/system.h ****             FREQ_480MHZ,
  29:../../libDaisy//src/sys/system.h ****         };
  30:../../libDaisy//src/sys/system.h **** 
  31:../../libDaisy//src/sys/system.h ****         /** Method to call on the struct to set to defaults
  32:../../libDaisy//src/sys/system.h ****          ** CPU Freq set to 400MHz
  33:../../libDaisy//src/sys/system.h ****          ** Cache Enabled
  34:../../libDaisy//src/sys/system.h ****          ** */
  35:../../libDaisy//src/sys/system.h ****         void Defaults()
  36:../../libDaisy//src/sys/system.h ****         {
  37:../../libDaisy//src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_400MHZ;
  38:../../libDaisy//src/sys/system.h ****             use_dcache  = true;
  39:../../libDaisy//src/sys/system.h ****             use_icache  = true;
  40:../../libDaisy//src/sys/system.h ****             skip_clocks = false;
  41:../../libDaisy//src/sys/system.h ****         }
  42:../../libDaisy//src/sys/system.h **** 
  43:../../libDaisy//src/sys/system.h ****         /** Method to call on the struct to set to boost mode:
  44:../../libDaisy//src/sys/system.h ****          ** CPU Freq set to 480MHz
  45:../../libDaisy//src/sys/system.h ****          ** Cache Enabled
  46:../../libDaisy//src/sys/system.h ****          ** */
  47:../../libDaisy//src/sys/system.h ****         void Boost()
  48:../../libDaisy//src/sys/system.h ****         {
  49:../../libDaisy//src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_480MHZ;
  50:../../libDaisy//src/sys/system.h ****             use_dcache  = true;
  51:../../libDaisy//src/sys/system.h ****             use_icache  = true;
  52:../../libDaisy//src/sys/system.h ****             skip_clocks = false;
  53:../../libDaisy//src/sys/system.h ****         }
  54:../../libDaisy//src/sys/system.h **** 
  55:../../libDaisy//src/sys/system.h ****         SysClkFreq cpu_freq;
  56:../../libDaisy//src/sys/system.h ****         bool       use_dcache;
  57:../../libDaisy//src/sys/system.h ****         bool       use_icache;
  58:../../libDaisy//src/sys/system.h ****         bool       skip_clocks;
  59:../../libDaisy//src/sys/system.h ****     };
  60:../../libDaisy//src/sys/system.h **** 
  61:../../libDaisy//src/sys/system.h ****     /** Describes the different regions of memory available to the Daisy */
  62:../../libDaisy//src/sys/system.h ****     enum MemoryRegion
  63:../../libDaisy//src/sys/system.h ****     {
  64:../../libDaisy//src/sys/system.h ****         INTERNAL_FLASH = 0,
  65:../../libDaisy//src/sys/system.h ****         ITCMRAM,
  66:../../libDaisy//src/sys/system.h ****         DTCMRAM,
  67:../../libDaisy//src/sys/system.h ****         SRAM_D1,
  68:../../libDaisy//src/sys/system.h ****         SRAM_D2,
  69:../../libDaisy//src/sys/system.h ****         SRAM_D3,
  70:../../libDaisy//src/sys/system.h ****         SDRAM,
  71:../../libDaisy//src/sys/system.h ****         QSPI,
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 9


  72:../../libDaisy//src/sys/system.h ****         INVALID_ADDRESS,
  73:../../libDaisy//src/sys/system.h ****     };
  74:../../libDaisy//src/sys/system.h **** 
  75:../../libDaisy//src/sys/system.h ****     /** Bootloader struct for controlling bootloading parameters */
  76:../../libDaisy//src/sys/system.h ****     struct BootInfo
  77:../../libDaisy//src/sys/system.h ****     {
  78:../../libDaisy//src/sys/system.h ****         enum class Type : uint32_t
  79:../../libDaisy//src/sys/system.h ****         {
  80:../../libDaisy//src/sys/system.h ****             INVALID      = 0x00000000,
  81:../../libDaisy//src/sys/system.h ****             JUMP         = 0xDEADBEEF,
  82:../../libDaisy//src/sys/system.h ****             SKIP_TIMEOUT = 0x5AFEB007,
  83:../../libDaisy//src/sys/system.h ****             INF_TIMEOUT  = 0xB0074EFA,
  84:../../libDaisy//src/sys/system.h ****         } status;
  85:../../libDaisy//src/sys/system.h ****         uint32_t data;
  86:../../libDaisy//src/sys/system.h ****         enum class Version : uint32_t
  87:../../libDaisy//src/sys/system.h ****         {
  88:../../libDaisy//src/sys/system.h ****             LT_v6_0 = 0, // Less than v6.0
  89:../../libDaisy//src/sys/system.h ****             NONE,        // No bootloader present
  90:../../libDaisy//src/sys/system.h ****             v6_0,        // v6.0
  91:../../libDaisy//src/sys/system.h ****             v6_1,        // v6.1 or greater
  92:../../libDaisy//src/sys/system.h ****             LAST
  93:../../libDaisy//src/sys/system.h ****         } version;
  94:../../libDaisy//src/sys/system.h ****     };
  95:../../libDaisy//src/sys/system.h **** 
  96:../../libDaisy//src/sys/system.h ****     System() {}
  97:../../libDaisy//src/sys/system.h ****     ~System() {}
 129              		.loc 9 97 5 view .LVU26
 130              		.loc 9 97 5 is_stmt 0 view .LVU27
 131              	.LBE449:
 132              	.LBB450:
 133              	.LBI450:
 134              		.file 10 "../../libDaisy//src/hid/usb.h"
   1:../../libDaisy//src/hid/usb.h **** #pragma once
   2:../../libDaisy//src/hid/usb.h **** #ifndef DSY_HID_USB_H
   3:../../libDaisy//src/hid/usb.h **** #define DSY_HID_USB_H
   4:../../libDaisy//src/hid/usb.h **** #include <stdint.h>
   5:../../libDaisy//src/hid/usb.h **** #include <stdlib.h>
   6:../../libDaisy//src/hid/usb.h **** 
   7:../../libDaisy//src/hid/usb.h **** namespace daisy
   8:../../libDaisy//src/hid/usb.h **** /** @addtogroup human_interface
   9:../../libDaisy//src/hid/usb.h ****     @{
  10:../../libDaisy//src/hid/usb.h **** */
  11:../../libDaisy//src/hid/usb.h **** 
  12:../../libDaisy//src/hid/usb.h **** {
  13:../../libDaisy//src/hid/usb.h **** /** 
  14:../../libDaisy//src/hid/usb.h ****     @brief Interface for initializing and using the USB Peripherals on the daisy
  15:../../libDaisy//src/hid/usb.h ****     @author Stephen Hensley
  16:../../libDaisy//src/hid/usb.h ****     @date December 2019
  17:../../libDaisy//src/hid/usb.h **** */
  18:../../libDaisy//src/hid/usb.h **** class UsbHandle
  19:../../libDaisy//src/hid/usb.h **** {
  20:../../libDaisy//src/hid/usb.h ****   public:
  21:../../libDaisy//src/hid/usb.h ****     /** Return values for USBHandle Functions */
  22:../../libDaisy//src/hid/usb.h ****     enum class Result
  23:../../libDaisy//src/hid/usb.h ****     {
  24:../../libDaisy//src/hid/usb.h ****         OK,
  25:../../libDaisy//src/hid/usb.h ****         ERR,
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 10


  26:../../libDaisy//src/hid/usb.h ****     };
  27:../../libDaisy//src/hid/usb.h **** 
  28:../../libDaisy//src/hid/usb.h ****     /** Specified which of the two USB Peripherals to initialize. */
  29:../../libDaisy//src/hid/usb.h ****     enum UsbPeriph
  30:../../libDaisy//src/hid/usb.h ****     {
  31:../../libDaisy//src/hid/usb.h ****         FS_INTERNAL, /**< Internal pin */
  32:../../libDaisy//src/hid/usb.h ****         FS_EXTERNAL, /**< FS External D+ pin is Pin 38 (GPIO32). FS External D- pin is Pin 37 (GPIO
  33:../../libDaisy//src/hid/usb.h ****         FS_BOTH,     /**< Both */
  34:../../libDaisy//src/hid/usb.h ****     };
  35:../../libDaisy//src/hid/usb.h **** 
  36:../../libDaisy//src/hid/usb.h **** 
  37:../../libDaisy//src/hid/usb.h ****     /** Function called upon reception of a buffer */
  38:../../libDaisy//src/hid/usb.h ****     typedef void (*ReceiveCallback)(uint8_t* buff, uint32_t* len);
  39:../../libDaisy//src/hid/usb.h **** 
  40:../../libDaisy//src/hid/usb.h ****     UsbHandle() {}
  41:../../libDaisy//src/hid/usb.h **** 
  42:../../libDaisy//src/hid/usb.h ****     ~UsbHandle() {}
 135              		.loc 10 42 5 is_stmt 1 view .LVU28
 136              		.loc 10 42 5 is_stmt 0 view .LVU29
 137              	.LBE450:
 138              	.LBB451:
 139              	.LBI451:
 140              		.file 11 "../../libDaisy//src/per/adc.h"
   1:../../libDaisy//src/per/adc.h **** #pragma once
   2:../../libDaisy//src/per/adc.h **** #ifndef DSY_ADC_H
   3:../../libDaisy//src/per/adc.h **** #define DSY_ADC_H /**< Macro */
   4:../../libDaisy//src/per/adc.h **** #include <stdint.h>
   5:../../libDaisy//src/per/adc.h **** #include <stdlib.h>
   6:../../libDaisy//src/per/adc.h **** #include "daisy_core.h"
   7:../../libDaisy//src/per/adc.h **** #include "per/gpio.h"
   8:../../libDaisy//src/per/adc.h **** 
   9:../../libDaisy//src/per/adc.h **** #define DSY_ADC_MAX_CHANNELS 16 /**< Maximum number of ADC channels */
  10:../../libDaisy//src/per/adc.h **** 
  11:../../libDaisy//src/per/adc.h **** namespace daisy
  12:../../libDaisy//src/per/adc.h **** {
  13:../../libDaisy//src/per/adc.h **** /** @addtogroup per_analog
  14:../../libDaisy//src/per/adc.h ****     @{
  15:../../libDaisy//src/per/adc.h **** */
  16:../../libDaisy//src/per/adc.h **** 
  17:../../libDaisy//src/per/adc.h **** /* While there may not be many configuration options here,
  18:../../libDaisy//src/per/adc.h **** using a struct like this allows us to add more configuration
  19:../../libDaisy//src/per/adc.h **** later without breaking existing functionality.
  20:../../libDaisy//src/per/adc.h **** */
  21:../../libDaisy//src/per/adc.h **** 
  22:../../libDaisy//src/per/adc.h **** /** @brief   Configuration Structure for an ADC Channel 
  23:../../libDaisy//src/per/adc.h ****  *  @details This can be used to configure a a single input, 
  24:../../libDaisy//src/per/adc.h ****  *           or a multiplexed input, allowing up to 8 inputs on 
  25:../../libDaisy//src/per/adc.h ****  *           one channel.
  26:../../libDaisy//src/per/adc.h ****  *  @note    Sharing data lines to multiple muxes _is_ possible, but
  27:../../libDaisy//src/per/adc.h ****  *           each channel sharing data lines must be set to the maximum
  28:../../libDaisy//src/per/adc.h ****  *           number of channels, even if some multiplexers have fewer
  29:../../libDaisy//src/per/adc.h ****  *           inputs connected.
  30:../../libDaisy//src/per/adc.h **** */
  31:../../libDaisy//src/per/adc.h **** struct AdcChannelConfig
  32:../../libDaisy//src/per/adc.h **** {
  33:../../libDaisy//src/per/adc.h ****     /** Which pin to use for multiplexing */
  34:../../libDaisy//src/per/adc.h ****     enum MuxPin
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 11


  35:../../libDaisy//src/per/adc.h ****     {
  36:../../libDaisy//src/per/adc.h ****         MUX_SEL_0,    /**< & */
  37:../../libDaisy//src/per/adc.h ****         MUX_SEL_1,    /**< & */
  38:../../libDaisy//src/per/adc.h ****         MUX_SEL_2,    /**< & */
  39:../../libDaisy//src/per/adc.h ****         MUX_SEL_LAST, /**< & */
  40:../../libDaisy//src/per/adc.h ****     };
  41:../../libDaisy//src/per/adc.h **** 
  42:../../libDaisy//src/per/adc.h ****     /** \brief per channel conversion speed added to fixed time based on bitdepth, etc. */
  43:../../libDaisy//src/per/adc.h ****     enum ConversionSpeed
  44:../../libDaisy//src/per/adc.h ****     {
  45:../../libDaisy//src/per/adc.h ****         SPEED_1CYCLES_5,
  46:../../libDaisy//src/per/adc.h ****         SPEED_2CYCLES_5,
  47:../../libDaisy//src/per/adc.h ****         SPEED_8CYCLES_5,
  48:../../libDaisy//src/per/adc.h ****         SPEED_16CYCLES_5,
  49:../../libDaisy//src/per/adc.h ****         SPEED_32CYCLES_5,
  50:../../libDaisy//src/per/adc.h ****         SPEED_64CYCLES_5,
  51:../../libDaisy//src/per/adc.h ****         SPEED_387CYCLES_5,
  52:../../libDaisy//src/per/adc.h ****         SPEED_810CYCLES_5,
  53:../../libDaisy//src/per/adc.h ****     };
  54:../../libDaisy//src/per/adc.h **** 
  55:../../libDaisy//src/per/adc.h ****     /** Initializes a single ADC pin as an ADC. 
  56:../../libDaisy//src/per/adc.h ****     \param pin Pin to init.
  57:../../libDaisy//src/per/adc.h ****     \param speed conversion speed for this pin defaults to 8.5 cycles
  58:../../libDaisy//src/per/adc.h ****      */
  59:../../libDaisy//src/per/adc.h ****     void InitSingle(dsy_gpio_pin pin, ConversionSpeed speed = SPEED_8CYCLES_5);
  60:../../libDaisy//src/per/adc.h **** 
  61:../../libDaisy//src/per/adc.h ****     /** 
  62:../../libDaisy//src/per/adc.h ****     Initializes a single ADC pin as a Multiplexed ADC.
  63:../../libDaisy//src/per/adc.h ****     Requires a CD405X Multiplexer connected to the pin.
  64:../../libDaisy//src/per/adc.h ****     You only need to supply the mux pins that are required,
  65:../../libDaisy//src/per/adc.h ****     e.g. a 4052 mux would only require mux_0 and mux_1.
  66:../../libDaisy//src/per/adc.h ****     Internal Callbacks handle the pin addressing.
  67:../../libDaisy//src/per/adc.h ****     \param adc_pin &
  68:../../libDaisy//src/per/adc.h ****     \param mux_channels must be 1-8
  69:../../libDaisy//src/per/adc.h ****     \param mux_0 First mux pin
  70:../../libDaisy//src/per/adc.h ****     \param mux_1 Second mux pin
  71:../../libDaisy//src/per/adc.h ****     \param mux_2 Third mux pin
  72:../../libDaisy//src/per/adc.h ****     \param speed conversion speed for this pin defaults to 8.5 cycles
  73:../../libDaisy//src/per/adc.h ****     */
  74:../../libDaisy//src/per/adc.h ****     void InitMux(dsy_gpio_pin    adc_pin,
  75:../../libDaisy//src/per/adc.h ****                  size_t          mux_channels,
  76:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin    mux_0,
  77:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin    mux_1 = {DSY_GPIOX, 0},
  78:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin    mux_2 = {DSY_GPIOX, 0},
  79:../../libDaisy//src/per/adc.h ****                  ConversionSpeed speed = SPEED_8CYCLES_5);
  80:../../libDaisy//src/per/adc.h **** 
  81:../../libDaisy//src/per/adc.h ****     dsy_gpio        pin_;                   /**< & */
  82:../../libDaisy//src/per/adc.h ****     dsy_gpio        mux_pin_[MUX_SEL_LAST]; /**< & */
  83:../../libDaisy//src/per/adc.h ****     uint8_t         mux_channels_;          /**< & */
  84:../../libDaisy//src/per/adc.h ****     ConversionSpeed speed_;
  85:../../libDaisy//src/per/adc.h **** };
  86:../../libDaisy//src/per/adc.h **** 
  87:../../libDaisy//src/per/adc.h **** /**
  88:../../libDaisy//src/per/adc.h ****    @brief Handler for analog to digital conversion
  89:../../libDaisy//src/per/adc.h **** */
  90:../../libDaisy//src/per/adc.h **** class AdcHandle
  91:../../libDaisy//src/per/adc.h **** {
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 12


  92:../../libDaisy//src/per/adc.h ****   public:
  93:../../libDaisy//src/per/adc.h ****     /** Supported oversampling amounts */
  94:../../libDaisy//src/per/adc.h ****     enum OverSampling
  95:../../libDaisy//src/per/adc.h ****     {
  96:../../libDaisy//src/per/adc.h ****         OVS_NONE, /**< & */
  97:../../libDaisy//src/per/adc.h ****         OVS_4,    /**< & */
  98:../../libDaisy//src/per/adc.h ****         OVS_8,    /**< & */
  99:../../libDaisy//src/per/adc.h ****         OVS_16,   /**< & */
 100:../../libDaisy//src/per/adc.h ****         OVS_32,   /**< & */
 101:../../libDaisy//src/per/adc.h ****         OVS_64,   /**< & */
 102:../../libDaisy//src/per/adc.h ****         OVS_128,  /**< & */
 103:../../libDaisy//src/per/adc.h ****         OVS_256,  /**< & */
 104:../../libDaisy//src/per/adc.h ****         OVS_512,  /**< & */
 105:../../libDaisy//src/per/adc.h ****         OVS_1024, /**< & */
 106:../../libDaisy//src/per/adc.h ****         OVS_LAST, /**< & */
 107:../../libDaisy//src/per/adc.h ****     };
 108:../../libDaisy//src/per/adc.h **** 
 109:../../libDaisy//src/per/adc.h ****     AdcHandle() {}
 110:../../libDaisy//src/per/adc.h ****     ~AdcHandle() {}
 141              		.loc 11 110 5 is_stmt 1 view .LVU30
 142              		.loc 11 110 5 is_stmt 0 view .LVU31
 143              	.LBE451:
 144              	.LBB452:
 145              	.LBI452:
 146              		.file 12 "../../libDaisy//src/hid/audio.h"
   1:../../libDaisy//src/hid/audio.h **** #ifndef DSY_AUDIO_H
   2:../../libDaisy//src/hid/audio.h **** #define DSY_AUDIO_H /**< & */
   3:../../libDaisy//src/hid/audio.h **** 
   4:../../libDaisy//src/hid/audio.h **** #include "per/sai.h"
   5:../../libDaisy//src/hid/audio.h **** 
   6:../../libDaisy//src/hid/audio.h **** namespace daisy
   7:../../libDaisy//src/hid/audio.h **** {
   8:../../libDaisy//src/hid/audio.h **** /** @brief Audio Engine Handle
   9:../../libDaisy//src/hid/audio.h ****  *  @ingroup audio 
  10:../../libDaisy//src/hid/audio.h ****  *  @details This class allows for higher level access to an audio engine.
  11:../../libDaisy//src/hid/audio.h ****  *           If you're using a SOM like the DaisySeed or DaisyPatchSM (or any 
  12:../../libDaisy//src/hid/audio.h ****  *            board that includes one of those objects) then the intialization
  13:../../libDaisy//src/hid/audio.h ****  *            is already taken  care of.
  14:../../libDaisy//src/hid/audio.h ****  *           If you're setting up your own custom hardware, or need to make changes
  15:../../libDaisy//src/hid/audio.h ****  *           you will have to take the following steps:
  16:../../libDaisy//src/hid/audio.h ****  *             1. Create and Initialize an SaiHandle or two depending on your requirements
  17:../../libDaisy//src/hid/audio.h ****  *             2. Initialize the Audio Handle with the desired settings and the Initialized SaiHand
  18:../../libDaisy//src/hid/audio.h ****  *             3. If the connected codec requires special configuration or initialization, do so
  19:../../libDaisy//src/hid/audio.h ****  *             4. Write a callback method using either the AudioCallback or the InterleavingAudioCa
  20:../../libDaisy//src/hid/audio.h ****  *             5. Start the Audio using one of the StartAudio function
  21:../../libDaisy//src/hid/audio.h ****  */
  22:../../libDaisy//src/hid/audio.h **** class AudioHandle
  23:../../libDaisy//src/hid/audio.h **** {
  24:../../libDaisy//src/hid/audio.h ****   public:
  25:../../libDaisy//src/hid/audio.h ****     /** Manually configurable details about the Audio Engine */
  26:../../libDaisy//src/hid/audio.h ****     /** TODO: Figure out how to get samplerate in here. */
  27:../../libDaisy//src/hid/audio.h ****     struct Config
  28:../../libDaisy//src/hid/audio.h ****     {
  29:../../libDaisy//src/hid/audio.h ****         /** number of samples to process per callback */
  30:../../libDaisy//src/hid/audio.h ****         size_t blocksize = 48;
  31:../../libDaisy//src/hid/audio.h **** 
  32:../../libDaisy//src/hid/audio.h ****         /**< Sample rate of audio */
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 13


  33:../../libDaisy//src/hid/audio.h ****         SaiHandle::Config::SampleRate samplerate
  34:../../libDaisy//src/hid/audio.h ****             = SaiHandle::Config::SampleRate::SAI_48KHZ;
  35:../../libDaisy//src/hid/audio.h **** 
  36:../../libDaisy//src/hid/audio.h ****         /** factor for adjustment before and after callback for hardware that may have extra headro
  37:../../libDaisy//src/hid/audio.h ****         float postgain = 1.f;
  38:../../libDaisy//src/hid/audio.h **** 
  39:../../libDaisy//src/hid/audio.h ****         /** factor for additional one-sided compensation to audio path for hardware that may
  40:../../libDaisy//src/hid/audio.h ****          *  have unequal input/output ranges
  41:../../libDaisy//src/hid/audio.h ****          */
  42:../../libDaisy//src/hid/audio.h ****         float output_compensation = 1.f;
  43:../../libDaisy//src/hid/audio.h ****     };
  44:../../libDaisy//src/hid/audio.h **** 
  45:../../libDaisy//src/hid/audio.h ****     enum class Result
  46:../../libDaisy//src/hid/audio.h ****     {
  47:../../libDaisy//src/hid/audio.h ****         OK,
  48:../../libDaisy//src/hid/audio.h ****         ERR,
  49:../../libDaisy//src/hid/audio.h ****     };
  50:../../libDaisy//src/hid/audio.h **** 
  51:../../libDaisy//src/hid/audio.h ****     /** Non-Interleaving input buffer
  52:../../libDaisy//src/hid/audio.h ****      * Buffer arranged by float[chn][sample] 
  53:../../libDaisy//src/hid/audio.h ****      * const so that the user can't modify the input
  54:../../libDaisy//src/hid/audio.h ****      */
  55:../../libDaisy//src/hid/audio.h ****     typedef const float* const* InputBuffer;
  56:../../libDaisy//src/hid/audio.h **** 
  57:../../libDaisy//src/hid/audio.h ****     /** Non-Interleaving output buffer
  58:../../libDaisy//src/hid/audio.h ****      * Arranged by float[chn][sample] 
  59:../../libDaisy//src/hid/audio.h ****      */
  60:../../libDaisy//src/hid/audio.h ****     typedef float** OutputBuffer;
  61:../../libDaisy//src/hid/audio.h **** 
  62:../../libDaisy//src/hid/audio.h ****     /** Type for a Non-Interleaving audio callback 
  63:../../libDaisy//src/hid/audio.h ****      * Non-Interleaving audio callbacks in daisy will be of this type
  64:../../libDaisy//src/hid/audio.h ****      */
  65:../../libDaisy//src/hid/audio.h ****     typedef void (*AudioCallback)(InputBuffer  in,
  66:../../libDaisy//src/hid/audio.h ****                                   OutputBuffer out,
  67:../../libDaisy//src/hid/audio.h ****                                   size_t       size);
  68:../../libDaisy//src/hid/audio.h **** 
  69:../../libDaisy//src/hid/audio.h ****     /** Interleaving Input buffer
  70:../../libDaisy//src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }]
  71:../../libDaisy//src/hid/audio.h ****      ** this is const, as the user shouldn't modify it
  72:../../libDaisy//src/hid/audio.h ****     */
  73:../../libDaisy//src/hid/audio.h ****     typedef const float* InterleavingInputBuffer;
  74:../../libDaisy//src/hid/audio.h **** 
  75:../../libDaisy//src/hid/audio.h ****     /** Interleaving Output buffer 
  76:../../libDaisy//src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }
  77:../../libDaisy//src/hid/audio.h ****     */
  78:../../libDaisy//src/hid/audio.h ****     typedef float* InterleavingOutputBuffer;
  79:../../libDaisy//src/hid/audio.h **** 
  80:../../libDaisy//src/hid/audio.h ****     /** Interleaving Audio Callback 
  81:../../libDaisy//src/hid/audio.h ****      * Interleaving audio callbacks in daisy must be of this type
  82:../../libDaisy//src/hid/audio.h ****      */
  83:../../libDaisy//src/hid/audio.h ****     typedef void (*InterleavingAudioCallback)(InterleavingInputBuffer  in,
  84:../../libDaisy//src/hid/audio.h ****                                               InterleavingOutputBuffer out,
  85:../../libDaisy//src/hid/audio.h ****                                               size_t                   size);
  86:../../libDaisy//src/hid/audio.h **** 
  87:../../libDaisy//src/hid/audio.h ****     AudioHandle() : pimpl_(nullptr) {}
  88:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 147              		.loc 12 88 5 is_stmt 1 view .LVU32
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 14


 148              		.loc 12 88 5 is_stmt 0 view .LVU33
 149              	.LBE452:
 150              	.LBE448:
 151              		.loc 2 31 20 view .LVU34
 152 0000 7047     		bx	lr
 153              		.cfi_endproc
 154              	.LFE2580:
 156              		.weak	_ZN5daisy10TusenskonaD1Ev
 157              		.thumb_set _ZN5daisy10TusenskonaD1Ev,_ZN5daisy10TusenskonaD2Ev
 158 0002 00BF     		.section	.text._Z13AudioCallbackPKPKfPPfj,"ax",%progbits
 159              		.align	1
 160              		.p2align 2,,3
 161              		.global	_Z13AudioCallbackPKPKfPPfj
 162              		.syntax unified
 163              		.thumb
 164              		.thumb_func
 166              	_Z13AudioCallbackPKPKfPPfj:
 167              	.LVL2:
 168              	.LFB4760:
 169              		.file 13 "granular.cpp"
   1:granular.cpp  **** #include "../../tusenskona/src/tusenskona.h"
   2:granular.cpp  **** #include "daisysp.h"
   3:granular.cpp  **** #include "granulator.h"
   4:granular.cpp  **** 
   5:granular.cpp  **** daisy::Tusenskona hw;
   6:granular.cpp  **** dsp::Granulator gran;
   7:granular.cpp  **** 
   8:granular.cpp  **** float volume;
   9:granular.cpp  **** 
  10:granular.cpp  **** const uint32_t BUFFER_SIZE = 8*1024*1024;
  11:granular.cpp  **** 
  12:granular.cpp  **** DSY_SDRAM_BSS float buffer[BUFFER_SIZE];
  13:granular.cpp  **** 
  14:granular.cpp  **** enum view {
  15:granular.cpp  ****     GRAIN1,
  16:granular.cpp  ****     GRAIN2,
  17:granular.cpp  ****     FX
  18:granular.cpp  **** };
  19:granular.cpp  **** 
  20:granular.cpp  **** int count;
  21:granular.cpp  **** bool record = false;
  22:granular.cpp  **** bool blink = true;
  23:granular.cpp  **** uint32_t ACTUAL_DURATION = 0;
  24:granular.cpp  **** 
  25:granular.cpp  **** // LED Colors
  26:granular.cpp  **** float clrs[4][3] = {{1, 0., 0.},  // RED
  27:granular.cpp  ****                     {0., 1., 0.}, // GREEN
  28:granular.cpp  ****                     {0., 0., 1.}, // BLUE
  29:granular.cpp  ****                     {1., 0, 1.}}; // PURPLE
  30:granular.cpp  **** 
  31:granular.cpp  **** static daisy::SdmmcHandler sdcard;
  32:granular.cpp  **** daisy::FatFSInterface fsi;
  33:granular.cpp  **** FIL SDFile;
  34:granular.cpp  **** 
  35:granular.cpp  **** const int maxFiles = 1;
  36:granular.cpp  **** daisy::WavFileInfo m_file_info_[maxFiles];
  37:granular.cpp  **** int m_file_sizes[maxFiles];
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 15


  38:granular.cpp  **** 
  39:granular.cpp  **** struct waveFile {
  40:granular.cpp  ****     uint16_t format;
  41:granular.cpp  ****     uint16_t channels;
  42:granular.cpp  ****     uint32_t samplerate;
  43:granular.cpp  ****     uint16_t bitrate;
  44:granular.cpp  ****     uint32_t num_samples;
  45:granular.cpp  ****     uint16_t header_size;
  46:granular.cpp  **** };
  47:granular.cpp  **** 
  48:granular.cpp  **** waveFile parseHeader(FIL * file) {
  49:granular.cpp  ****     waveFile wf;
  50:granular.cpp  **** 
  51:granular.cpp  ****     uint32_t res;
  52:granular.cpp  ****     UINT bytesread;
  53:granular.cpp  ****     bool dataFound = false;    
  54:granular.cpp  **** 
  55:granular.cpp  ****     while (!dataFound) {
  56:granular.cpp  **** 
  57:granular.cpp  ****         f_read(file, &res, sizeof(uint32_t), &bytesread);
  58:granular.cpp  **** 
  59:granular.cpp  ****         switch (res) {
  60:granular.cpp  ****             case 0x20746D66: {
  61:granular.cpp  ****                     f_read(file, &res, 4, &bytesread);
  62:granular.cpp  ****                     f_read(file, &wf.format, sizeof(uint16_t), &bytesread);
  63:granular.cpp  ****                     f_read(file, &wf.channels, sizeof(uint16_t), &bytesread);
  64:granular.cpp  ****                     f_read(file, &wf.samplerate, sizeof(uint32_t), &bytesread);
  65:granular.cpp  ****                     f_read(file, &res, sizeof(uint32_t), &bytesread);
  66:granular.cpp  ****                     f_read(file, &res, sizeof(uint16_t), &bytesread);
  67:granular.cpp  ****                     f_read(file, &wf.bitrate, sizeof(uint16_t), &bytesread);
  68:granular.cpp  ****                     break;
  69:granular.cpp  ****                 }
  70:granular.cpp  ****             case 0x61746164: {
  71:granular.cpp  ****                     f_read(file, &wf.num_samples, sizeof(uint32_t), &bytesread);
  72:granular.cpp  ****                     wf.num_samples = wf.num_samples / wf.channels/ 4;
  73:granular.cpp  ****                     dataFound = true;
  74:granular.cpp  ****                     break;
  75:granular.cpp  ****                 }
  76:granular.cpp  ****             default:
  77:granular.cpp  ****                 break;
  78:granular.cpp  ****         }
  79:granular.cpp  **** 
  80:granular.cpp  ****     }
  81:granular.cpp  ****  
  82:granular.cpp  ****     wf.header_size = f_tell(file);
  83:granular.cpp  ****     return wf;
  84:granular.cpp  **** 
  85:granular.cpp  **** }
  86:granular.cpp  **** 
  87:granular.cpp  **** void loadWavFiles()
  88:granular.cpp  **** {
  89:granular.cpp  ****     std::string m_sd_debug_msg = "no (fat32) sdcard";
  90:granular.cpp  ****     int m_file_cnt_ = 0;
  91:granular.cpp  ****     FRESULT result = FR_OK;
  92:granular.cpp  ****     FILINFO fno;
  93:granular.cpp  ****     DIR dir;
  94:granular.cpp  ****     char *fn;
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 16


  95:granular.cpp  **** 
  96:granular.cpp  ****     FATFS &fs = fsi.GetSDFileSystem();
  97:granular.cpp  ****     f_mount(&fs, "/", 1);
  98:granular.cpp  **** 
  99:granular.cpp  ****     if (f_opendir(&dir, "/") == FR_OK)
 100:granular.cpp  ****     {
 101:granular.cpp  ****         m_sd_debug_msg = "sd: no files";
 102:granular.cpp  ****         do
 103:granular.cpp  ****         {
 104:granular.cpp  ****             result = f_readdir(&dir, &fno);
 105:granular.cpp  ****             // Exit if bad read or NULL fname
 106:granular.cpp  ****             if (result != FR_OK || fno.fname[0] == 0)
 107:granular.cpp  ****                 break;
 108:granular.cpp  ****             // Skip if its a directory or a hidden file.
 109:granular.cpp  ****             if (fno.fattrib & (AM_HID | AM_DIR))
 110:granular.cpp  ****                 continue;
 111:granular.cpp  ****             // Now we'll check if its .wav and add to the list.
 112:granular.cpp  ****             fn = fno.fname;
 113:granular.cpp  **** 
 114:granular.cpp  ****             if (m_file_cnt_ < maxFiles)
 115:granular.cpp  ****             {
 116:granular.cpp  ****                 if (strstr(fn, ".wav") || strstr(fn, ".WAV"))
 117:granular.cpp  ****                 {
 118:granular.cpp  ****                     strcpy(m_file_info_[m_file_cnt_].name, fn);
 119:granular.cpp  **** 
 120:granular.cpp  ****                     UINT bytesread;
 121:granular.cpp  ****                     if (f_open(&SDFile, m_file_info_[m_file_cnt_].name, (FA_OPEN_EXISTING | FA_READ
 122:granular.cpp  ****                     {
 123:granular.cpp  ****                         m_file_sizes[m_file_cnt_] = f_size(&SDFile);
 124:granular.cpp  **** 
 125:granular.cpp  ****                         waveFile wf = parseHeader(&SDFile);
 126:granular.cpp  **** 
 127:granular.cpp  ****                         if (wf.bitrate != 32)
 128:granular.cpp  ****                             continue;
 129:granular.cpp  ****                         if (wf.samplerate != 48000)
 130:granular.cpp  ****                             continue;
 131:granular.cpp  ****                         if (wf.channels != 2)
 132:granular.cpp  ****                             continue;
 133:granular.cpp  ****                         if (wf.format != 3)
 134:granular.cpp  ****                             continue;
 135:granular.cpp  ****                         
 136:granular.cpp  ****                         uint32_t size = m_file_sizes[m_file_cnt_] - wf.header_size;
 137:granular.cpp  ****                         ACTUAL_DURATION = size / ( wf.channels * sizeof(float));
 138:granular.cpp  **** 
 139:granular.cpp  ****                         if (&buffer[0])
 140:granular.cpp  ****                         {
 141:granular.cpp  ****                             if (f_read(&SDFile, &buffer[0], size, &bytesread) == FR_OK)
 142:granular.cpp  ****                             {
 143:granular.cpp  ****                                 gran.setNumSamples(size / 8);
 144:granular.cpp  ****                                 uint32_t mid = BUFFER_SIZE / 2;
 145:granular.cpp  ****                                 uint32_t i, j;
 146:granular.cpp  ****                                 for (i = 1; i < BUFFER_SIZE; ++i)
 147:granular.cpp  ****                                 {
 148:granular.cpp  ****                                     j = i < mid ? i * 2 : ((i - mid) * 2 + 1);
 149:granular.cpp  ****                                     while (j < i)
 150:granular.cpp  ****                                     {
 151:granular.cpp  ****                                         j = j < mid ? j * 2 : ((j - mid) * 2 + 1);
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 17


 152:granular.cpp  ****                                     }
 153:granular.cpp  ****                                     float tmp = buffer[i];
 154:granular.cpp  ****                                     buffer[i] = buffer[j];
 155:granular.cpp  ****                                     buffer[j] = tmp;
 156:granular.cpp  ****                                 }
 157:granular.cpp  **** 
 158:granular.cpp  ****                                 m_file_cnt_++;
 159:granular.cpp  ****                             }
 160:granular.cpp  ****                         }
 161:granular.cpp  ****                         f_close(&SDFile);
 162:granular.cpp  ****                     }
 163:granular.cpp  ****                 }
 164:granular.cpp  ****             }
 165:granular.cpp  ****             else
 166:granular.cpp  ****             {
 167:granular.cpp  ****                 break;
 168:granular.cpp  ****             }
 169:granular.cpp  ****         } while (result == FR_OK);
 170:granular.cpp  ****     }
 171:granular.cpp  ****     f_closedir(&dir);
 172:granular.cpp  **** }
 173:granular.cpp  **** 
 174:granular.cpp  **** void AudioCallback(daisy::AudioHandle::InputBuffer in, daisy::AudioHandle::OutputBuffer out, size_t
 175:granular.cpp  **** {
 170              		.loc 13 175 1 is_stmt 1 view -0
 171              		.cfi_startproc
 172              		@ args = 0, pretend = 0, frame = 0
 173              		@ frame_needed = 0, uses_anonymous_args = 0
 176:granular.cpp  **** 
 177:granular.cpp  ****     for (size_t i = 0; i < size; i++)
 174              		.loc 13 177 5 view .LVU36
 175              	.LBB453:
 176              		.loc 13 177 26 view .LVU37
 177 0000 32B3     		cbz	r2, .L9
 178              	.LBE453:
 175:granular.cpp  **** 
 179              		.loc 13 175 1 is_stmt 0 view .LVU38
 180 0002 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 181              		.cfi_def_cfa_offset 24
 182              		.cfi_offset 4, -24
 183              		.cfi_offset 5, -20
 184              		.cfi_offset 6, -16
 185              		.cfi_offset 7, -12
 186              		.cfi_offset 8, -8
 187              		.cfi_offset 14, -4
 188              	.LBB454:
 178:granular.cpp  ****     {
 179:granular.cpp  ****         out[0][i] = 0.f;
 180:granular.cpp  ****         out[1][i] = 0.f;
 189              		.loc 13 180 14 view .LVU39
 190 0006 D1E90003 		ldrd	r0, r3, [r1]
 191              	.LVL3:
 192              		.loc 13 180 14 view .LVU40
 193 000a 0F46     		mov	r7, r1
 194 000c 1646     		mov	r6, r2
 177:granular.cpp  ****     {
 195              		.loc 13 177 17 view .LVU41
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 18


 196 000e 0024     		movs	r4, #0
 197 0010 DFF84480 		ldr	r8, .L12+4
 198              	.LVL4:
 199              	.L7:
 179:granular.cpp  ****         out[1][i] = 0.f;
 200              		.loc 13 179 9 is_stmt 1 discriminator 2 view .LVU42
 179:granular.cpp  ****         out[1][i] = 0.f;
 201              		.loc 13 179 19 is_stmt 0 discriminator 2 view .LVU43
 202 0014 00EB840C 		add	ip, r0, r4, lsl #2
 203 0018 0022     		movs	r2, #0
 204              		.loc 13 180 19 discriminator 2 view .LVU44
 205 001a 03EB8403 		add	r3, r3, r4, lsl #2
 181:granular.cpp  **** 
 182:granular.cpp  ****         out[0][i] = volume * gran.play();
 206              		.loc 13 182 39 discriminator 2 view .LVU45
 207 001e 0D48     		ldr	r0, .L12
 179:granular.cpp  ****         out[1][i] = 0.f;
 208              		.loc 13 179 19 discriminator 2 view .LVU46
 209 0020 CCF80020 		str	r2, [ip]	@ float
 180:granular.cpp  **** 
 210              		.loc 13 180 9 is_stmt 1 discriminator 2 view .LVU47
 211 0024 A500     		lsls	r5, r4, #2
 180:granular.cpp  **** 
 212              		.loc 13 180 19 is_stmt 0 discriminator 2 view .LVU48
 213 0026 1A60     		str	r2, [r3]	@ float
 214              		.loc 13 182 9 is_stmt 1 discriminator 2 view .LVU49
 177:granular.cpp  ****     {
 215              		.loc 13 177 5 is_stmt 0 discriminator 2 view .LVU50
 216 0028 0134     		adds	r4, r4, #1
 217              	.LVL5:
 218              		.loc 13 182 39 discriminator 2 view .LVU51
 219 002a FFF7FEFF 		bl	_ZN3dsp10Granulator4playEv
 220              	.LVL6:
 221              		.loc 13 182 28 discriminator 2 view .LVU52
 222 002e D8ED007A 		vldr.32	s15, [r8]
 177:granular.cpp  ****     {
 223              		.loc 13 177 26 discriminator 2 view .LVU53
 224 0032 A642     		cmp	r6, r4
 225              		.loc 13 182 28 discriminator 2 view .LVU54
 226 0034 20EE270A 		vmul.f32	s0, s0, s15
 183:granular.cpp  ****         out[1][i] = out[0][i]; 
 227              		.loc 13 183 14 discriminator 2 view .LVU55
 228 0038 D7E90003 		ldrd	r0, r3, [r7]
 182:granular.cpp  ****         out[1][i] = out[0][i]; 
 229              		.loc 13 182 19 discriminator 2 view .LVU56
 230 003c 00EB0502 		add	r2, r0, r5
 231              		.loc 13 183 19 discriminator 2 view .LVU57
 232 0040 1D44     		add	r5, r5, r3
 182:granular.cpp  ****         out[1][i] = out[0][i]; 
 233              		.loc 13 182 19 discriminator 2 view .LVU58
 234 0042 82ED000A 		vstr.32	s0, [r2]
 235              		.loc 13 183 9 is_stmt 1 discriminator 2 view .LVU59
 236              		.loc 13 183 19 is_stmt 0 discriminator 2 view .LVU60
 237 0046 85ED000A 		vstr.32	s0, [r5]
 177:granular.cpp  ****     {
 238              		.loc 13 177 5 is_stmt 1 discriminator 2 view .LVU61
 239              	.LVL7:
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 19


 177:granular.cpp  ****     {
 240              		.loc 13 177 26 discriminator 2 view .LVU62
 241 004a E3D1     		bne	.L7
 242              	.LBE454:
 184:granular.cpp  **** 
 185:granular.cpp  ****         /*
 186:granular.cpp  ****         float revL, revR;
 187:granular.cpp  ****         rev.Process(out[0][i], out[1][i], &revL, &revR);
 188:granular.cpp  ****         out[0][i] += revL;
 189:granular.cpp  ****         out[1][i] += revR;
 190:granular.cpp  ****         */
 191:granular.cpp  ****     }
 192:granular.cpp  **** }
 243              		.loc 13 192 1 is_stmt 0 view .LVU63
 244 004c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 245              	.LVL8:
 246              	.L9:
 247              		.cfi_def_cfa_offset 0
 248              		.cfi_restore 4
 249              		.cfi_restore 5
 250              		.cfi_restore 6
 251              		.cfi_restore 7
 252              		.cfi_restore 8
 253              		.cfi_restore 14
 254              		.loc 13 192 1 view .LVU64
 255 0050 7047     		bx	lr
 256              	.L13:
 257 0052 00BF     		.align	2
 258              	.L12:
 259 0054 00000000 		.word	.LANCHOR0
 260 0058 00000000 		.word	.LANCHOR1
 261              		.cfi_endproc
 262              	.LFE4760:
 264              		.section	.text._Z11parseHeaderP3FIL,"ax",%progbits
 265              		.align	1
 266              		.p2align 2,,3
 267              		.global	_Z11parseHeaderP3FIL
 268              		.syntax unified
 269              		.thumb
 270              		.thumb_func
 272              	_Z11parseHeaderP3FIL:
 273              	.LVL9:
 274              	.LFB4758:
  48:granular.cpp  ****     waveFile wf;
 275              		.loc 13 48 34 is_stmt 1 view -0
 276              		.cfi_startproc
 277              		@ args = 0, pretend = 0, frame = 8
 278              		@ frame_needed = 0, uses_anonymous_args = 0
  49:granular.cpp  **** 
 279              		.loc 13 49 5 view .LVU66
  51:granular.cpp  ****     UINT bytesread;
 280              		.loc 13 51 5 view .LVU67
  52:granular.cpp  ****     bool dataFound = false;    
 281              		.loc 13 52 5 view .LVU68
  53:granular.cpp  **** 
 282              		.loc 13 53 5 view .LVU69
  48:granular.cpp  ****     waveFile wf;
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 20


 283              		.loc 13 48 34 is_stmt 0 view .LVU70
 284 0000 30B5     		push	{r4, r5, lr}
 285              		.cfi_def_cfa_offset 12
 286              		.cfi_offset 4, -12
 287              		.cfi_offset 5, -8
 288              		.cfi_offset 14, -4
 289 0002 0546     		mov	r5, r0
 290 0004 83B0     		sub	sp, sp, #12
 291              		.cfi_def_cfa_offset 24
  48:granular.cpp  ****     waveFile wf;
 292              		.loc 13 48 34 view .LVU71
 293 0006 0C46     		mov	r4, r1
 294              	.LVL10:
 295              	.L17:
  55:granular.cpp  **** 
 296              		.loc 13 55 5 is_stmt 1 view .LVU72
  55:granular.cpp  **** 
 297              		.loc 13 55 12 view .LVU73
  57:granular.cpp  **** 
 298              		.loc 13 57 9 view .LVU74
  57:granular.cpp  **** 
 299              		.loc 13 57 15 is_stmt 0 view .LVU75
 300 0008 01AB     		add	r3, sp, #4
 301 000a 6946     		mov	r1, sp
 302 000c 0422     		movs	r2, #4
 303 000e 2046     		mov	r0, r4
 304 0010 FFF7FEFF 		bl	f_read
 305              	.LVL11:
  59:granular.cpp  ****             case 0x20746D66: {
 306              		.loc 13 59 9 is_stmt 1 view .LVU76
 307 0014 009B     		ldr	r3, [sp]
 308 0016 2249     		ldr	r1, .L20
 309 0018 224A     		ldr	r2, .L20+4
 310 001a 8B42     		cmp	r3, r1
 311 001c 13D0     		beq	.L15
 312 001e 9342     		cmp	r3, r2
 313 0020 F2D1     		bne	.L17
  70:granular.cpp  ****                     f_read(file, &wf.num_samples, sizeof(uint32_t), &bytesread);
 314              		.loc 13 70 13 view .LVU77
  70:granular.cpp  ****                     f_read(file, &wf.num_samples, sizeof(uint32_t), &bytesread);
 315              		.loc 13 70 30 view .LVU78
  71:granular.cpp  ****                     wf.num_samples = wf.num_samples / wf.channels/ 4;
 316              		.loc 13 71 21 view .LVU79
  71:granular.cpp  ****                     wf.num_samples = wf.num_samples / wf.channels/ 4;
 317              		.loc 13 71 27 is_stmt 0 view .LVU80
 318 0022 01AB     		add	r3, sp, #4
 319 0024 05F10C01 		add	r1, r5, #12
 320 0028 0422     		movs	r2, #4
 321 002a 2046     		mov	r0, r4
 322 002c FFF7FEFF 		bl	f_read
 323              	.LVL12:
  72:granular.cpp  ****                     dataFound = true;
 324              		.loc 13 72 21 is_stmt 1 view .LVU81
  72:granular.cpp  ****                     dataFound = true;
 325              		.loc 13 72 53 is_stmt 0 view .LVU82
 326 0030 EB68     		ldr	r3, [r5, #12]
  72:granular.cpp  ****                     dataFound = true;
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 21


 327              		.loc 13 72 58 view .LVU83
 328 0032 6988     		ldrh	r1, [r5, #2]
  85:granular.cpp  **** 
 329              		.loc 13 85 1 view .LVU84
 330 0034 2846     		mov	r0, r5
  82:granular.cpp  ****     return wf;
 331              		.loc 13 82 20 view .LVU85
 332 0036 6269     		ldr	r2, [r4, #20]
  72:granular.cpp  ****                     dataFound = true;
 333              		.loc 13 72 53 view .LVU86
 334 0038 B3FBF1F3 		udiv	r3, r3, r1
  72:granular.cpp  ****                     dataFound = true;
 335              		.loc 13 72 66 view .LVU87
 336 003c 9B08     		lsrs	r3, r3, #2
  82:granular.cpp  ****     return wf;
 337              		.loc 13 82 20 view .LVU88
 338 003e 2A82     		strh	r2, [r5, #16]	@ movhi
  72:granular.cpp  ****                     dataFound = true;
 339              		.loc 13 72 36 view .LVU89
 340 0040 EB60     		str	r3, [r5, #12]
  73:granular.cpp  ****                     break;
 341              		.loc 13 73 21 is_stmt 1 view .LVU90
 342              	.LVL13:
  74:granular.cpp  ****                 }
 343              		.loc 13 74 21 view .LVU91
  55:granular.cpp  **** 
 344              		.loc 13 55 5 view .LVU92
  55:granular.cpp  **** 
 345              		.loc 13 55 12 view .LVU93
  82:granular.cpp  ****     return wf;
 346              		.loc 13 82 5 view .LVU94
  83:granular.cpp  **** 
 347              		.loc 13 83 5 view .LVU95
  85:granular.cpp  **** 
 348              		.loc 13 85 1 is_stmt 0 view .LVU96
 349 0042 03B0     		add	sp, sp, #12
 350              		.cfi_remember_state
 351              		.cfi_def_cfa_offset 12
 352              		@ sp needed
 353 0044 30BD     		pop	{r4, r5, pc}
 354              	.LVL14:
 355              	.L15:
 356              		.cfi_restore_state
  60:granular.cpp  ****                     f_read(file, &res, 4, &bytesread);
 357              		.loc 13 60 13 is_stmt 1 view .LVU97
  60:granular.cpp  ****                     f_read(file, &res, 4, &bytesread);
 358              		.loc 13 60 30 view .LVU98
  61:granular.cpp  ****                     f_read(file, &wf.format, sizeof(uint16_t), &bytesread);
 359              		.loc 13 61 21 view .LVU99
  61:granular.cpp  ****                     f_read(file, &wf.format, sizeof(uint16_t), &bytesread);
 360              		.loc 13 61 27 is_stmt 0 view .LVU100
 361 0046 01AB     		add	r3, sp, #4
 362 0048 6946     		mov	r1, sp
 363 004a 0422     		movs	r2, #4
 364 004c 2046     		mov	r0, r4
 365 004e FFF7FEFF 		bl	f_read
 366              	.LVL15:
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 22


  62:granular.cpp  ****                     f_read(file, &wf.channels, sizeof(uint16_t), &bytesread);
 367              		.loc 13 62 21 is_stmt 1 view .LVU101
  62:granular.cpp  ****                     f_read(file, &wf.channels, sizeof(uint16_t), &bytesread);
 368              		.loc 13 62 27 is_stmt 0 view .LVU102
 369 0052 01AB     		add	r3, sp, #4
 370 0054 2946     		mov	r1, r5
 371 0056 0222     		movs	r2, #2
 372 0058 2046     		mov	r0, r4
 373 005a FFF7FEFF 		bl	f_read
 374              	.LVL16:
  63:granular.cpp  ****                     f_read(file, &wf.samplerate, sizeof(uint32_t), &bytesread);
 375              		.loc 13 63 21 is_stmt 1 view .LVU103
  63:granular.cpp  ****                     f_read(file, &wf.samplerate, sizeof(uint32_t), &bytesread);
 376              		.loc 13 63 27 is_stmt 0 view .LVU104
 377 005e 0222     		movs	r2, #2
 378 0060 01AB     		add	r3, sp, #4
 379 0062 2046     		mov	r0, r4
 380 0064 A918     		adds	r1, r5, r2
 381 0066 FFF7FEFF 		bl	f_read
 382              	.LVL17:
  64:granular.cpp  ****                     f_read(file, &res, sizeof(uint32_t), &bytesread);
 383              		.loc 13 64 21 is_stmt 1 view .LVU105
  64:granular.cpp  ****                     f_read(file, &res, sizeof(uint32_t), &bytesread);
 384              		.loc 13 64 27 is_stmt 0 view .LVU106
 385 006a 0422     		movs	r2, #4
 386 006c 01AB     		add	r3, sp, #4
 387 006e 2046     		mov	r0, r4
 388 0070 A918     		adds	r1, r5, r2
 389 0072 FFF7FEFF 		bl	f_read
 390              	.LVL18:
  65:granular.cpp  ****                     f_read(file, &res, sizeof(uint16_t), &bytesread);
 391              		.loc 13 65 21 is_stmt 1 view .LVU107
  65:granular.cpp  ****                     f_read(file, &res, sizeof(uint16_t), &bytesread);
 392              		.loc 13 65 27 is_stmt 0 view .LVU108
 393 0076 01AB     		add	r3, sp, #4
 394 0078 6946     		mov	r1, sp
 395 007a 0422     		movs	r2, #4
 396 007c 2046     		mov	r0, r4
 397 007e FFF7FEFF 		bl	f_read
 398              	.LVL19:
  66:granular.cpp  ****                     f_read(file, &wf.bitrate, sizeof(uint16_t), &bytesread);
 399              		.loc 13 66 21 is_stmt 1 view .LVU109
  66:granular.cpp  ****                     f_read(file, &wf.bitrate, sizeof(uint16_t), &bytesread);
 400              		.loc 13 66 27 is_stmt 0 view .LVU110
 401 0082 01AB     		add	r3, sp, #4
 402 0084 6946     		mov	r1, sp
 403 0086 0222     		movs	r2, #2
 404 0088 2046     		mov	r0, r4
 405 008a FFF7FEFF 		bl	f_read
 406              	.LVL20:
  67:granular.cpp  ****                     break;
 407              		.loc 13 67 21 is_stmt 1 view .LVU111
  67:granular.cpp  ****                     break;
 408              		.loc 13 67 27 is_stmt 0 view .LVU112
 409 008e 01AB     		add	r3, sp, #4
 410 0090 0222     		movs	r2, #2
 411 0092 05F10801 		add	r1, r5, #8
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 23


 412 0096 2046     		mov	r0, r4
 413 0098 FFF7FEFF 		bl	f_read
 414              	.LVL21:
  68:granular.cpp  ****                 }
 415              		.loc 13 68 21 is_stmt 1 view .LVU113
 416 009c B4E7     		b	.L17
 417              	.L21:
 418 009e 00BF     		.align	2
 419              	.L20:
 420 00a0 666D7420 		.word	544501094
 421 00a4 64617461 		.word	1635017060
 422              		.cfi_endproc
 423              	.LFE4758:
 425              		.section	.rodata._Z12loadWavFilesv.str1.4,"aMS",%progbits,1
 426              		.align	2
 427              	.LC0:
 428 0000 6E6F2028 		.ascii	"no (fat32) sdcard\000"
 428      66617433 
 428      32292073 
 428      64636172 
 428      6400
 429 0012 0000     		.align	2
 430              	.LC1:
 431 0014 2F00     		.ascii	"/\000"
 432 0016 0000     		.align	2
 433              	.LC2:
 434 0018 73643A20 		.ascii	"sd: no files\000"
 434      6E6F2066 
 434      696C6573 
 434      00
 435 0025 000000   		.align	2
 436              	.LC3:
 437 0028 2E776176 		.ascii	".wav\000"
 437      00
 438 002d 000000   		.align	2
 439              	.LC4:
 440 0030 2E574156 		.ascii	".WAV\000"
 440      00
 441              		.section	.text._Z12loadWavFilesv,"ax",%progbits
 442              		.align	1
 443              		.p2align 2,,3
 444              		.global	_Z12loadWavFilesv
 445              		.syntax unified
 446              		.thumb
 447              		.thumb_func
 449              	_Z12loadWavFilesv:
 450              	.LFB4759:
  88:granular.cpp  ****     std::string m_sd_debug_msg = "no (fat32) sdcard";
 451              		.loc 13 88 1 view -0
 452              		.cfi_startproc
 453              		@ args = 0, pretend = 0, frame = 376
 454              		@ frame_needed = 0, uses_anonymous_args = 0
  89:granular.cpp  ****     int m_file_cnt_ = 0;
 455              		.loc 13 89 5 view .LVU115
 456              	.LVL22:
 457              	.LBB540:
 458              	.LBI540:
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 24


 459              		.file 14 "/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h"
   1:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** // Allocators -*- C++ -*-
   2:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 
   3:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** //
   5:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** // software; you can redistribute it and/or modify it under the
   7:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** // terms of the GNU General Public License as published by the
   8:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** // any later version.
  10:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 
  11:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** // This library is distributed in the hope that it will be useful,
  12:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** // GNU General Public License for more details.
  15:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 
  16:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** // 3.1, as published by the Free Software Foundation.
  19:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 
  20:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** // You should have received a copy of the GNU General Public License and
  21:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** // <http://www.gnu.org/licenses/>.
  24:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 
  25:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** /*
  26:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****  * Copyright (c) 1996-1997
  27:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****  * Silicon Graphics Computer Systems, Inc.
  28:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****  *
  29:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****  * Permission to use, copy, modify, distribute and sell this software
  30:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****  * and its documentation for any purpose is hereby granted without fee,
  31:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****  * provided that the above copyright notice appear in all copies and
  32:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****  * that both that copyright notice and this permission notice appear
  33:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****  * in supporting documentation.  Silicon Graphics makes no
  34:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****  * representations about the suitability of this software for any
  35:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  36:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****  */
  37:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 
  38:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** /** @file bits/allocator.h
  39:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****  *  This is an internal header file, included by other library headers.
  40:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****  *  Do not attempt to use it directly. @headername{memory}
  41:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****  */
  42:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 
  43:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** #ifndef _ALLOCATOR_H
  44:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** #define _ALLOCATOR_H 1
  45:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 
  46:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** #include <bits/c++allocator.h> // Define the base class to std::allocator.
  47:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** #include <bits/memoryfwd.h>
  48:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** #if __cplusplus >= 201103L
  49:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** #include <type_traits>
  50:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** #endif
  51:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 
  52:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** #define __cpp_lib_incomplete_container_elements 201505
  53:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 
  54:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** namespace std _GLIBCXX_VISIBILITY(default)
  55:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** {
  56:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 25


  57:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 
  58:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****   /**
  59:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****    *  @addtogroup allocators
  60:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****    *  @{
  61:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****    */
  62:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 
  63:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****   // Since C++20 the primary template should be used for allocator<void>,
  64:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****   // but then it would have a non-trivial default ctor and dtor, which
  65:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****   // would be an ABI change. So C++20 still uses the allocator<void> explicit
  66:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****   // specialization, with the historical ABI properties, but with the same
  67:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****   // members that are present in the primary template.
  68:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 
  69:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** #if ! _GLIBCXX_INLINE_VERSION
  70:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****   /// allocator<void> specialization.
  71:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****   template<>
  72:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****     class allocator<void>
  73:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****     {
  74:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****     public:
  75:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****       typedef void        value_type;
  76:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****       typedef size_t      size_type;
  77:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****       typedef ptrdiff_t   difference_type;
  78:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 
  79:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** #if __cplusplus <= 201703L
  80:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****       // These were removed for C++20.
  81:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****       typedef void*       pointer;
  82:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****       typedef const void* const_pointer;
  83:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 
  84:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****       template<typename _Tp1>
  85:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 	struct rebind
  86:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 	{ typedef allocator<_Tp1> other; };
  87:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** #endif
  88:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 
  89:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** #if __cplusplus >= 201103L
  90:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  91:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****       // 2103. std::allocator propagate_on_container_move_assignment
  92:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****       typedef true_type propagate_on_container_move_assignment;
  93:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 
  94:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****       typedef true_type is_always_equal;
  95:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 
  96:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** #if __cplusplus > 201703L
  97:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****       allocator() = default;
  98:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 
  99:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****       template<typename _Up>
 100:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 	constexpr
 101:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 	allocator(const allocator<_Up>&) noexcept { }
 102:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 
 103:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****       // No allocate member because it's ill-formed by LWG 3307.
 104:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****       // No deallocate member because it would be undefined to call it
 105:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****       // with any pointer which wasn't obtained from allocate.
 106:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 
 107:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** #else // ! C++20
 108:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****       // allocator_traits<allocator<void>> uses construct and destroy.
 109:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****       template<typename _Up, typename... _Args>
 110:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 	void
 111:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 	construct(_Up* __p, _Args&&... __args)
 112:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 113:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 26


 114:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 
 115:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****       template<typename _Up>
 116:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 	void
 117:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 	destroy(_Up* __p)
 118:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 	noexcept(std::is_nothrow_destructible<_Up>::value)
 119:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 	{ __p->~_Up(); }
 120:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** #endif // C++17
 121:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** #endif // C++11
 122:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****     };
 123:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** #endif // ! _GLIBCXX_INLINE_VERSION
 124:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 
 125:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****   /**
 126:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****    * @brief  The @a standard allocator, as per C++03 [20.4.1].
 127:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****    *
 128:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****    *  See https://gcc.gnu.org/onlinedocs/libstdc++/manual/memory.html#std.util.memory.allocator
 129:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****    *  for further details.
 130:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****    *
 131:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****    *  @tparam  _Tp  Type of allocated object.
 132:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****    */
 133:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****   template<typename _Tp>
 134:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****     class allocator : public __allocator_base<_Tp>
 135:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****     {
 136:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****     public:
 137:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****       typedef _Tp        value_type;
 138:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****       typedef size_t     size_type;
 139:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****       typedef ptrdiff_t  difference_type;
 140:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 
 141:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** #if __cplusplus <= 201703L
 142:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****       // These were removed for C++20.
 143:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****       typedef _Tp*       pointer;
 144:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****       typedef const _Tp* const_pointer;
 145:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****       typedef _Tp&       reference;
 146:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****       typedef const _Tp& const_reference;
 147:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 
 148:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****       template<typename _Tp1>
 149:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 	struct rebind
 150:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 	{ typedef allocator<_Tp1> other; };
 151:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** #endif
 152:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 
 153:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** #if __cplusplus >= 201103L
 154:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 155:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****       // 2103. std::allocator propagate_on_container_move_assignment
 156:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****       typedef true_type propagate_on_container_move_assignment;
 157:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 
 158:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****       typedef true_type is_always_equal;
 159:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** #endif
 160:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 
 161:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 162:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****       // 3035. std::allocator's constructors should be constexpr
 163:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****       _GLIBCXX20_CONSTEXPR
 164:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****       allocator() _GLIBCXX_NOTHROW { }
 460              		.loc 14 164 7 view .LVU116
 461              	.LBB541:
 462              	.LBI541:
 463              		.file 15 "/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h"
   1:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** // Allocator that wraps operator new -*- C++ -*-
   2:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 27


   3:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** //
   5:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** // software; you can redistribute it and/or modify it under the
   7:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** // terms of the GNU General Public License as published by the
   8:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** // any later version.
  10:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 
  11:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** // This library is distributed in the hope that it will be useful,
  12:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** // GNU General Public License for more details.
  15:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 
  16:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** // 3.1, as published by the Free Software Foundation.
  19:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 
  20:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** // You should have received a copy of the GNU General Public License and
  21:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** // <http://www.gnu.org/licenses/>.
  24:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 
  25:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** /** @file ext/new_allocator.h
  26:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h ****  *  This file is a GNU extension to the Standard C++ Library.
  27:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h ****  */
  28:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 
  29:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** #ifndef _NEW_ALLOCATOR_H
  30:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** #define _NEW_ALLOCATOR_H 1
  31:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 
  32:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** #include <bits/c++config.h>
  33:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** #include <new>
  34:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** #include <bits/functexcept.h>
  35:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** #include <bits/move.h>
  36:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** #if __cplusplus >= 201103L
  37:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** #include <type_traits>
  38:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** #endif
  39:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 
  40:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  41:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** {
  42:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  43:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 
  44:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h ****   /**
  45:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h ****    *  @brief  An allocator that uses global new, as per C++03 [20.4.1].
  46:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h ****    *  @ingroup allocators
  47:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h ****    *
  48:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h ****    *  This is precisely the allocator defined in the C++ Standard.
  49:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h ****    *    - all allocation calls operator new
  50:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h ****    *    - all deallocation calls operator delete
  51:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h ****    *
  52:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h ****    *  @tparam  _Tp  Type of allocated object.
  53:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h ****    */
  54:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h ****   template<typename _Tp>
  55:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h ****     class new_allocator
  56:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h ****     {
  57:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h ****     public:
  58:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h ****       typedef _Tp        value_type;
  59:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h ****       typedef std::size_t     size_type;
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 28


  60:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h ****       typedef std::ptrdiff_t  difference_type;
  61:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** #if __cplusplus <= 201703L
  62:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h ****       typedef _Tp*       pointer;
  63:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h ****       typedef const _Tp* const_pointer;
  64:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h ****       typedef _Tp&       reference;
  65:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h ****       typedef const _Tp& const_reference;
  66:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 
  67:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h ****       template<typename _Tp1>
  68:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 	struct rebind
  69:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 	{ typedef new_allocator<_Tp1> other; };
  70:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** #endif
  71:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 
  72:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** #if __cplusplus >= 201103L
  73:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  74:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h ****       // 2103. propagate_on_container_move_assignment
  75:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h ****       typedef std::true_type propagate_on_container_move_assignment;
  76:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** #endif
  77:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 
  78:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h ****       _GLIBCXX20_CONSTEXPR
  79:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h ****       new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 464              		.loc 15 79 7 view .LVU117
 465              		.loc 15 79 7 is_stmt 0 view .LVU118
 466              	.LBE541:
 467              	.LBE540:
  88:granular.cpp  ****     std::string m_sd_debug_msg = "no (fat32) sdcard";
 468              		.loc 13 88 1 view .LVU119
 469 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 470              		.cfi_def_cfa_offset 20
 471              		.cfi_offset 4, -20
 472              		.cfi_offset 5, -16
 473              		.cfi_offset 6, -12
 474              		.cfi_offset 7, -8
 475              		.cfi_offset 14, -4
 476 0002 E1B0     		sub	sp, sp, #388
 477              		.cfi_def_cfa_offset 408
 478              	.LVL23:
 479              	.LBB542:
 480              	.LBI542:
 481              		.file 16 "/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h"
   1:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** // Components for manipulating sequences of characters -*- C++ -*-
   2:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
   3:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** // Copyright (C) 1997-2020 Free Software Foundation, Inc.
   4:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** //
   5:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** // software; you can redistribute it and/or modify it under the
   7:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** // terms of the GNU General Public License as published by the
   8:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** // any later version.
  10:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
  11:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** // This library is distributed in the hope that it will be useful,
  12:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** // GNU General Public License for more details.
  15:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
  16:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** // 3.1, as published by the Free Software Foundation.
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 29


  19:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
  20:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** // You should have received a copy of the GNU General Public License and
  21:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** // <http://www.gnu.org/licenses/>.
  24:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
  25:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** /** @file bits/basic_string.h
  26:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****  *  This is an internal header file, included by other library headers.
  27:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****  *  Do not attempt to use it directly. @headername{string}
  28:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****  */
  29:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
  30:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** //
  31:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** // ISO C++ 14882: 21 Strings library
  32:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** //
  33:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
  34:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #ifndef _BASIC_STRING_H
  35:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #define _BASIC_STRING_H 1
  36:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
  37:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #pragma GCC system_header
  38:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
  39:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #include <ext/atomicity.h>
  40:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #include <ext/alloc_traits.h>
  41:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #include <debug/debug.h>
  42:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
  43:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #if __cplusplus >= 201103L
  44:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #include <initializer_list>
  45:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #endif
  46:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
  47:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #if __cplusplus >= 201703L
  48:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** # include <string_view>
  49:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #endif
  50:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
  51:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** namespace std _GLIBCXX_VISIBILITY(default)
  52:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** {
  53:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  54:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
  55:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #ifdef __cpp_lib_is_constant_evaluated
  56:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** // Support P1032R1 in C++20 (but not P0980R1 yet).
  57:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** # define __cpp_lib_constexpr_string 201811L
  58:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #elif __cplusplus >= 201703L
  59:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** // Support P0426R1 changes to char_traits in C++17.
  60:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** # define __cpp_lib_constexpr_string 201611L
  61:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #elif __cplusplus > 201703L
  62:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #endif
  63:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
  64:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #if _GLIBCXX_USE_CXX11_ABI
  65:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_CXX11
  66:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****   /**
  67:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****    *  @class basic_string basic_string.h <string>
  68:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****    *  @brief  Managing sequences of characters and character-like objects.
  69:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****    *
  70:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****    *  @ingroup strings
  71:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****    *  @ingroup sequences
  72:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****    *
  73:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****    *  @tparam _CharT  Type of character
  74:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****    *  @tparam _Traits  Traits for character type, defaults to
  75:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****    *                   char_traits<_CharT>.
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 30


  76:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_CharT>.
  77:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****    *
  78:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
  79:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****    *  <a href="tables.html#66">reversible container</a>, and a
  80:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****    *  <a href="tables.html#67">sequence</a>.  Of the
  81:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****    *  <a href="tables.html#68">optional sequence requirements</a>, only
  82:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****    *  @c push_back, @c at, and @c %array access are supported.
  83:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****    */
  84:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
  85:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****     class basic_string
  86:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****     {
  87:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
  88:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	rebind<_CharT>::other _Char_alloc_type;
  89:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       typedef __gnu_cxx::__alloc_traits<_Char_alloc_type> _Alloc_traits;
  90:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
  91:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       // Types:
  92:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****     public:
  93:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       typedef _Traits					traits_type;
  94:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       typedef typename _Traits::char_type		value_type;
  95:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       typedef _Char_alloc_type				allocator_type;
  96:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       typedef typename _Alloc_traits::size_type		size_type;
  97:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       typedef typename _Alloc_traits::difference_type	difference_type;
  98:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       typedef typename _Alloc_traits::reference		reference;
  99:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       typedef typename _Alloc_traits::const_reference	const_reference;
 100:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       typedef typename _Alloc_traits::pointer		pointer;
 101:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       typedef typename _Alloc_traits::const_pointer	const_pointer;
 102:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       typedef __gnu_cxx::__normal_iterator<pointer, basic_string>  iterator;
 103:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string>
 104:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 							const_iterator;
 105:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;
 106:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       typedef std::reverse_iterator<iterator>		reverse_iterator;
 107:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 108:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       ///  Value returned by various member functions when they fail.
 109:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       static const size_type	npos = static_cast<size_type>(-1);
 110:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 111:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****     protected:
 112:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       // type used for positions in insert, erase etc.
 113:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #if __cplusplus < 201103L
 114:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       typedef iterator __const_iterator;
 115:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #else
 116:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       typedef const_iterator __const_iterator;
 117:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #endif
 118:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 119:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****     private:
 120:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #if __cplusplus >= 201703L
 121:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       // A helper type for avoiding boiler-plate.
 122:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       typedef basic_string_view<_CharT, _Traits> __sv_type;
 123:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 124:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       template<typename _Tp, typename _Res>
 125:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	using _If_sv = enable_if_t<
 126:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	  __and_<is_convertible<const _Tp&, __sv_type>,
 127:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 		 __not_<is_convertible<const _Tp*, const basic_string*>>,
 128:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 		 __not_<is_convertible<const _Tp&, const _CharT*>>>::value,
 129:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	  _Res>;
 130:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 131:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       // Allows an implicit conversion to __sv_type.
 132:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       static __sv_type
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 31


 133:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       _S_to_string_view(__sv_type __svt) noexcept
 134:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { return __svt; }
 135:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 136:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       // Wraps a string_view by explicit conversion and thus
 137:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       // allows to add an internal constructor that does not
 138:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       // participate in overload resolution when a string_view
 139:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       // is provided.
 140:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       struct __sv_wrapper
 141:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
 142:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	explicit __sv_wrapper(__sv_type __sv) noexcept : _M_sv(__sv) { }
 143:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	__sv_type _M_sv;
 144:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       };
 145:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 146:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
 147:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @brief  Only internally used: Construct string from a string view
 148:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *          wrapper.
 149:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param  __svw  string view wrapper.
 150:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param  __a  Allocator to use.
 151:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
 152:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       explicit
 153:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       basic_string(__sv_wrapper __svw, const _Alloc& __a)
 154:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       : basic_string(__svw._M_sv.data(), __svw._M_sv.size(), __a) { }
 155:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #endif
 156:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 157:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       // Use empty-base optimization: http://www.cantrip.org/emptyopt.html
 158:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       struct _Alloc_hider : allocator_type // TODO check __is_final
 159:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
 160:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #if __cplusplus < 201103L
 161:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	_Alloc_hider(pointer __dat, const _Alloc& __a = _Alloc())
 162:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 163:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #else
 164:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	_Alloc_hider(pointer __dat, const _Alloc& __a)
 165:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 166:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 167:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	_Alloc_hider(pointer __dat, _Alloc&& __a = _Alloc())
 168:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 169:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #endif
 170:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 171:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	pointer _M_p; // The actual data.
 172:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       };
 173:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 174:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       _Alloc_hider	_M_dataplus;
 175:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       size_type		_M_string_length;
 176:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 177:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       enum { _S_local_capacity = 15 / sizeof(_CharT) };
 178:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 179:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       union
 180:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
 181:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	_CharT           _M_local_buf[_S_local_capacity + 1];
 182:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	size_type        _M_allocated_capacity;
 183:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       };
 184:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 185:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       void
 186:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       _M_data(pointer __p)
 187:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 188:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 189:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       void
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 32


 190:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       _M_length(size_type __length)
 191:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 192:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 193:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       pointer
 194:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       _M_data() const
 195:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 196:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 197:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       pointer
 198:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       _M_local_data()
 199:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
 200:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #if __cplusplus >= 201103L
 201:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	return std::pointer_traits<pointer>::pointer_to(*_M_local_buf);
 202:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #else
 203:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	return pointer(_M_local_buf);
 204:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #endif
 205:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       }
 206:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 207:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       const_pointer
 208:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       _M_local_data() const
 209:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
 210:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #if __cplusplus >= 201103L
 211:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	return std::pointer_traits<const_pointer>::pointer_to(*_M_local_buf);
 212:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #else
 213:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	return const_pointer(_M_local_buf);
 214:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #endif
 215:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       }
 216:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 217:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       void
 218:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       _M_capacity(size_type __capacity)
 219:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 220:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 221:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       void
 222:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       _M_set_length(size_type __n)
 223:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
 224:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	_M_length(__n);
 225:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	traits_type::assign(_M_data()[__n], _CharT());
 226:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       }
 227:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 228:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       bool
 229:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       _M_is_local() const
 230:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 231:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 232:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       // Create & Destroy
 233:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       pointer
 234:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       _M_create(size_type&, size_type);
 235:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 236:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       void
 237:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       _M_dispose()
 238:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
 239:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	if (!_M_is_local())
 240:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 241:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       }
 242:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 243:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       void
 244:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       _M_destroy(size_type __size) throw()
 245:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 246:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 33


 247:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       // _M_construct_aux is used to implement the 21.3.1 para 15 which
 248:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       // requires special behaviour if _InIterator is an integral type
 249:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       template<typename _InIterator>
 250:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****         void
 251:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****         _M_construct_aux(_InIterator __beg, _InIterator __end,
 252:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 			 std::__false_type)
 253:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	{
 254:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****           typedef typename iterator_traits<_InIterator>::iterator_category _Tag;
 255:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****           _M_construct(__beg, __end, _Tag());
 256:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	}
 257:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 258:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 259:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       // 438. Ambiguity in the "do the right thing" clause
 260:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       template<typename _Integer>
 261:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****         void
 262:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****         _M_construct_aux(_Integer __beg, _Integer __end, std::__true_type)
 263:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	{ _M_construct_aux_2(static_cast<size_type>(__beg), __end); }
 264:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 265:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       void
 266:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       _M_construct_aux_2(size_type __req, _CharT __c)
 267:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { _M_construct(__req, __c); }
 268:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 269:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       template<typename _InIterator>
 270:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****         void
 271:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****         _M_construct(_InIterator __beg, _InIterator __end)
 272:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	{
 273:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	  typedef typename std::__is_integer<_InIterator>::__type _Integral;
 274:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	  _M_construct_aux(__beg, __end, _Integral());
 275:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****         }
 276:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 277:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       // For Input Iterators, used in istreambuf_iterators, etc.
 278:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       template<typename _InIterator>
 279:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****         void
 280:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****         _M_construct(_InIterator __beg, _InIterator __end,
 281:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 		     std::input_iterator_tag);
 282:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 283:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       // For forward_iterators up to random_access_iterators, used for
 284:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       // string::iterator, _CharT*, etc.
 285:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       template<typename _FwdIterator>
 286:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****         void
 287:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****         _M_construct(_FwdIterator __beg, _FwdIterator __end,
 288:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 		     std::forward_iterator_tag);
 289:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 290:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       void
 291:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       _M_construct(size_type __req, _CharT __c);
 292:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 293:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       allocator_type&
 294:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       _M_get_allocator()
 295:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 296:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 297:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       const allocator_type&
 298:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       _M_get_allocator() const
 299:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 300:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 301:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****     private:
 302:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 303:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #ifdef _GLIBCXX_DISAMBIGUATE_REPLACE_INST
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 34


 304:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       // The explicit instantiations in misc-inst.cc require this due to
 305:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       // https://gcc.gnu.org/bugzilla/show_bug.cgi?id=64063
 306:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       template<typename _Tp, bool _Requires =
 307:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	       !__are_same<_Tp, _CharT*>::__value
 308:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	       && !__are_same<_Tp, const _CharT*>::__value
 309:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	       && !__are_same<_Tp, iterator>::__value
 310:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	       && !__are_same<_Tp, const_iterator>::__value>
 311:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	struct __enable_if_not_native_iterator
 312:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	{ typedef basic_string& __type; };
 313:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       template<typename _Tp>
 314:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	struct __enable_if_not_native_iterator<_Tp, false> { };
 315:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #endif
 316:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 317:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       size_type
 318:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       _M_check(size_type __pos, const char* __s) const
 319:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
 320:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	if (__pos > this->size())
 321:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("%s: __pos (which is %zu) > "
 322:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 				       "this->size() (which is %zu)"),
 323:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 				   __s, __pos, this->size());
 324:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	return __pos;
 325:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       }
 326:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 327:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       void
 328:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       _M_check_length(size_type __n1, size_type __n2, const char* __s) const
 329:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
 330:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	if (this->max_size() - (this->size() - __n1) < __n2)
 331:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 332:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       }
 333:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 334:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 335:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       // NB: _M_limit doesn't check for a bad __pos value.
 336:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       size_type
 337:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       _M_limit(size_type __pos, size_type __off) const _GLIBCXX_NOEXCEPT
 338:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
 339:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	const bool __testoff =  __off < this->size() - __pos;
 340:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	return __testoff ? __off : this->size() - __pos;
 341:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       }
 342:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 343:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       // True if _Rep and source do not overlap.
 344:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       bool
 345:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       _M_disjunct(const _CharT* __s) const _GLIBCXX_NOEXCEPT
 346:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
 347:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	return (less<const _CharT*>()(__s, _M_data())
 348:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 		|| less<const _CharT*>()(_M_data() + this->size(), __s));
 349:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       }
 350:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 351:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       // When __n = 1 way faster than the general multichar
 352:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       // traits_type::copy/move/assign.
 353:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       static void
 354:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       _S_copy(_CharT* __d, const _CharT* __s, size_type __n)
 355:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
 356:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	if (__n == 1)
 357:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
 358:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	else
 359:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	  traits_type::copy(__d, __s, __n);
 360:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       }
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 35


 361:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 362:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       static void
 363:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       _S_move(_CharT* __d, const _CharT* __s, size_type __n)
 364:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
 365:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	if (__n == 1)
 366:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
 367:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	else
 368:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	  traits_type::move(__d, __s, __n);
 369:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       }
 370:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 371:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       static void
 372:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       _S_assign(_CharT* __d, size_type __n, _CharT __c)
 373:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
 374:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	if (__n == 1)
 375:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	  traits_type::assign(*__d, __c);
 376:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	else
 377:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	  traits_type::assign(__d, __n, __c);
 378:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       }
 379:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 380:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       // _S_copy_chars is a separate template to permit specialization
 381:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       // to optimize for the common case of pointers as iterators.
 382:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       template<class _Iterator>
 383:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****         static void
 384:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****         _S_copy_chars(_CharT* __p, _Iterator __k1, _Iterator __k2)
 385:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****         {
 386:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	  for (; __k1 != __k2; ++__k1, (void)++__p)
 387:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	    traits_type::assign(*__p, *__k1); // These types are off.
 388:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	}
 389:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 390:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       static void
 391:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, iterator __k1, iterator __k2) _GLIBCXX_NOEXCEPT
 392:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
 393:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 394:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       static void
 395:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, const_iterator __k1, const_iterator __k2)
 396:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
 397:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
 398:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 399:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       static void
 400:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, _CharT* __k1, _CharT* __k2) _GLIBCXX_NOEXCEPT
 401:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 402:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 403:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       static void
 404:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, const _CharT* __k1, const _CharT* __k2)
 405:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
 406:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 407:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 408:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       static int
 409:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       _S_compare(size_type __n1, size_type __n2) _GLIBCXX_NOEXCEPT
 410:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
 411:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	const difference_type __d = difference_type(__n1 - __n2);
 412:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 413:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	if (__d > __gnu_cxx::__numeric_traits<int>::__max)
 414:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__max;
 415:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	else if (__d < __gnu_cxx::__numeric_traits<int>::__min)
 416:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__min;
 417:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	else
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 36


 418:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	  return int(__d);
 419:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       }
 420:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 421:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       void
 422:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       _M_assign(const basic_string&);
 423:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 424:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       void
 425:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       _M_mutate(size_type __pos, size_type __len1, const _CharT* __s,
 426:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 		size_type __len2);
 427:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 428:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       void
 429:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       _M_erase(size_type __pos, size_type __n);
 430:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 431:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****     public:
 432:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       // Construct/copy/destroy:
 433:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       // NB: We overload ctors in some cases instead of using default
 434:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       // arguments, per 17.4.4.4 para. 2 item 2.
 435:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 436:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
 437:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @brief  Default constructor creates an empty string.
 438:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
 439:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       basic_string()
 440:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT_IF(is_nothrow_default_constructible<_Alloc>::value)
 441:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data())
 442:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { _M_set_length(0); }
 443:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 444:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
 445:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @brief  Construct an empty string using allocator @a a.
 446:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
 447:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       explicit
 448:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       basic_string(const _Alloc& __a) _GLIBCXX_NOEXCEPT
 449:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 450:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { _M_set_length(0); }
 451:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 452:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
 453:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @brief  Construct string with copy of value of @a __str.
 454:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param  __str  Source string.
 455:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
 456:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       basic_string(const basic_string& __str)
 457:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 458:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 		    _Alloc_traits::_S_select_on_copy(__str._M_get_allocator()))
 459:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { _M_construct(__str._M_data(), __str._M_data() + __str.length()); }
 460:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 461:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 462:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       // 2583. no way to supply an allocator for basic_string(str, pos)
 463:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
 464:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
 465:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param  __str  Source string.
 466:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
 467:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param  __a  Allocator to use.
 468:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
 469:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
 470:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 		   const _Alloc& __a = _Alloc())
 471:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 472:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
 473:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	const _CharT* __start = __str._M_data()
 474:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	  + __str._M_check(__pos, "basic_string::basic_string");
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 37


 475:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	_M_construct(__start, __start + __str._M_limit(__pos, npos));
 476:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       }
 477:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 478:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
 479:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
 480:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param  __str  Source string.
 481:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
 482:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param  __n  Number of characters to copy.
 483:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
 484:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
 485:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 		   size_type __n)
 486:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data())
 487:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
 488:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	const _CharT* __start = __str._M_data()
 489:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	  + __str._M_check(__pos, "basic_string::basic_string");
 490:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	_M_construct(__start, __start + __str._M_limit(__pos, __n));
 491:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       }
 492:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 493:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
 494:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
 495:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param  __str  Source string.
 496:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
 497:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param  __n  Number of characters to copy.
 498:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param  __a  Allocator to use.
 499:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
 500:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
 501:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 		   size_type __n, const _Alloc& __a)
 502:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 503:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
 504:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	const _CharT* __start
 505:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	  = __str._M_data() + __str._M_check(__pos, "string::string");
 506:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	_M_construct(__start, __start + __str._M_limit(__pos, __n));
 507:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       }
 508:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 509:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
 510:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @brief  Construct string initialized by a character %array.
 511:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param  __s  Source character %array.
 512:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param  __n  Number of characters to copy.
 513:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 514:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *
 515:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  NB: @a __s must have at least @a __n characters, &apos;\\0&apos;
 516:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  has no special meaning.
 517:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
 518:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       basic_string(const _CharT* __s, size_type __n,
 519:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 		   const _Alloc& __a = _Alloc())
 520:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 521:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { _M_construct(__s, __s + __n); }
 522:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 523:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
 524:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @brief  Construct string as copy of a C string.
 525:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param  __s  Source C string.
 526:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 527:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
 528:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #if __cpp_deduction_guides && ! defined _GLIBCXX_DEFINING_STRING_INSTANTIATIONS
 529:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 530:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       // 3076. basic_string CTAD ambiguity
 531:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       template<typename = _RequireAllocator<_Alloc>>
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 38


 532:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #endif
 533:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
 482              		.loc 16 533 7 is_stmt 1 view .LVU120
 483              	.LBB543:
 484              	.LBB544:
 485              	.LBI544:
 198:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
 486              		.loc 16 198 7 view .LVU121
 198:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
 487              		.loc 16 198 7 is_stmt 0 view .LVU122
 488              	.LBE544:
 489              	.LBB545:
 490              	.LBI545:
 164:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 491              		.loc 16 164 2 is_stmt 1 view .LVU123
 492              	.LBB546:
 493              	.LBB547:
 494              	.LBB548:
 495              	.LBI548:
 165:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 
 166:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****       _GLIBCXX20_CONSTEXPR
 167:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****       allocator(const allocator& __a) _GLIBCXX_NOTHROW
 496              		.loc 14 167 7 view .LVU124
 497              	.LBB549:
 498              	.LBI549:
  80:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 
  81:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h ****       _GLIBCXX20_CONSTEXPR
  82:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h ****       new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
 499              		.loc 15 82 7 view .LVU125
 500              		.loc 15 82 7 is_stmt 0 view .LVU126
 501              	.LBE549:
 502              	.LBE548:
 503              	.LBE547:
 504              	.LBE546:
 505              	.LBE545:
 506              	.LBB554:
 507              	.LBB555:
 508              	.LBB556:
 509              		.file 17 "/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc"
   1:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** // Components for manipulating sequences of characters -*- C++ -*-
   2:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 
   3:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** // Copyright (C) 1997-2020 Free Software Foundation, Inc.
   4:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** //
   5:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** // software; you can redistribute it and/or modify it under the
   7:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** // terms of the GNU General Public License as published by the
   8:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** // Free Software Foundation; either version 3, or (at your option)
   9:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** // any later version.
  10:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 
  11:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** // This library is distributed in the hope that it will be useful,
  12:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** // GNU General Public License for more details.
  15:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 
  16:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** // Under Section 7 of GPL version 3, you are granted additional
  17:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** // permissions described in the GCC Runtime Library Exception, version
  18:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** // 3.1, as published by the Free Software Foundation.
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 39


  19:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 
  20:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** // You should have received a copy of the GNU General Public License and
  21:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** // <http://www.gnu.org/licenses/>.
  24:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 
  25:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** /** @file bits/basic_string.tcc
  26:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****  *  This is an internal header file, included by other library headers.
  27:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****  *  Do not attempt to use it directly. @headername{string}
  28:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****  */
  29:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 
  30:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** //
  31:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** // ISO C++ 14882: 21  Strings library
  32:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** //
  33:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 
  34:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** // Written by Jason Merrill based upon the specification by Takanori Adachi
  35:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** // in ANSI X3J16/94-0013R2.  Rewritten by Nathan Myers to ISO-14882.
  36:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** // Non-reference-counted implementation written by Paolo Carlini and
  37:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** // updated by Jonathan Wakely for ISO-14882-2011.
  38:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 
  39:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** #ifndef _BASIC_STRING_TCC
  40:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** #define _BASIC_STRING_TCC 1
  41:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 
  42:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** #pragma GCC system_header
  43:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 
  44:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** #include <bits/cxxabi_forced.h>
  45:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 
  46:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** namespace std _GLIBCXX_VISIBILITY(default)
  47:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** {
  48:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  49:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 
  50:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** #if _GLIBCXX_USE_CXX11_ABI
  51:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 
  52:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
  53:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****     const typename basic_string<_CharT, _Traits, _Alloc>::size_type
  54:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::npos;
  55:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 
  56:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
  57:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****     void
  58:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
  59:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****     swap(basic_string& __s) _GLIBCXX_NOEXCEPT
  60:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****     {
  61:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****       if (this == &__s)
  62:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	return;
  63:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 
  64:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****       _Alloc_traits::_S_on_swap(_M_get_allocator(), __s._M_get_allocator());
  65:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 
  66:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****       if (_M_is_local())
  67:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	if (__s._M_is_local())
  68:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	  {
  69:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	    if (length() && __s.length())
  70:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	      {
  71:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 		_CharT __tmp_data[_S_local_capacity + 1];
  72:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 		traits_type::copy(__tmp_data, __s._M_local_buf,
  73:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 				  _S_local_capacity + 1);
  74:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 		traits_type::copy(__s._M_local_buf, _M_local_buf,
  75:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 				  _S_local_capacity + 1);
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 40


  76:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 		traits_type::copy(_M_local_buf, __tmp_data,
  77:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 				  _S_local_capacity + 1);
  78:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	      }
  79:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	    else if (__s.length())
  80:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	      {
  81:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 		traits_type::copy(_M_local_buf, __s._M_local_buf,
  82:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 				  _S_local_capacity + 1);
  83:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 		_M_length(__s.length());
  84:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 		__s._M_set_length(0);
  85:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 		return;
  86:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	      }
  87:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	    else if (length())
  88:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	      {
  89:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 		traits_type::copy(__s._M_local_buf, _M_local_buf,
  90:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 				  _S_local_capacity + 1);
  91:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 		__s._M_length(length());
  92:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 		_M_set_length(0);
  93:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 		return;
  94:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	      }
  95:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	  }
  96:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	else
  97:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	  {
  98:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	    const size_type __tmp_capacity = __s._M_allocated_capacity;
  99:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	    traits_type::copy(__s._M_local_buf, _M_local_buf,
 100:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 			      _S_local_capacity + 1);
 101:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	    _M_data(__s._M_data());
 102:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	    __s._M_data(__s._M_local_buf);
 103:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	    _M_capacity(__tmp_capacity);
 104:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	  }
 105:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****       else
 106:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	{
 107:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	  const size_type __tmp_capacity = _M_allocated_capacity;
 108:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	  if (__s._M_is_local())
 109:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	    {
 110:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	      traits_type::copy(_M_local_buf, __s._M_local_buf,
 111:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 				_S_local_capacity + 1);
 112:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	      __s._M_data(_M_data());
 113:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	      _M_data(_M_local_buf);
 114:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	    }
 115:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	  else
 116:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	    {
 117:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	      pointer __tmp_ptr = _M_data();
 118:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	      _M_data(__s._M_data());
 119:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	      __s._M_data(__tmp_ptr);
 120:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	      _M_capacity(__s._M_allocated_capacity);
 121:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	    }
 122:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	  __s._M_capacity(__tmp_capacity);
 123:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	}
 124:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 
 125:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****       const size_type __tmp_length = length();
 126:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****       _M_length(__s.length());
 127:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****       __s._M_length(__tmp_length);
 128:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****     }
 129:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 
 130:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 131:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****     typename basic_string<_CharT, _Traits, _Alloc>::pointer
 132:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 41


 133:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****     _M_create(size_type& __capacity, size_type __old_capacity)
 134:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****     {
 135:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 136:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****       // 83.  String::npos vs. string::max_size()
 137:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****       if (__capacity > max_size())
 138:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	std::__throw_length_error(__N("basic_string::_M_create"));
 139:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 
 140:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****       // The below implements an exponential growth policy, necessary to
 141:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****       // meet amortized linear time requirements of the library: see
 142:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****       // http://gcc.gnu.org/ml/libstdc++/2001-07/msg00085.html.
 143:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****       if (__capacity > __old_capacity && __capacity < 2 * __old_capacity)
 144:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	{
 145:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	  __capacity = 2 * __old_capacity;
 146:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	  // Never allocate a string bigger than max_size.
 147:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	  if (__capacity > max_size())
 148:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	    __capacity = max_size();
 149:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	}
 150:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 
 151:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****       // NB: Need an array of char_type[__capacity], plus a terminating
 152:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****       // null char_type() element.
 153:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****       return _Alloc_traits::allocate(_M_get_allocator(), __capacity + 1);
 154:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****     }
 155:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 
 156:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****   // NB: This is the special case for Input Iterators, used in
 157:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****   // istreambuf_iterators, etc.
 158:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****   // Input Iterators have a cost structure very different from
 159:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****   // pointers, calling for a different coding style.
 160:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 161:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****     template<typename _InIterator>
 162:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****       void
 163:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****       basic_string<_CharT, _Traits, _Alloc>::
 164:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 165:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 		   std::input_iterator_tag)
 166:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****       {
 167:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	size_type __len = 0;
 168:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	size_type __capacity = size_type(_S_local_capacity);
 169:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 
 170:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	while (__beg != __end && __len < __capacity)
 171:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	  {
 172:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	    _M_data()[__len++] = *__beg;
 173:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	    ++__beg;
 174:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	  }
 175:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 
 176:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	__try
 177:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	  {
 178:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	    while (__beg != __end)
 179:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	      {
 180:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 		if (__len == __capacity)
 181:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 		  {
 182:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 		    // Allocate more space.
 183:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 		    __capacity = __len + 1;
 184:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 		    pointer __another = _M_create(__capacity, __len);
 185:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 		    this->_S_copy(__another, _M_data(), __len);
 186:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 		    _M_dispose();
 187:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 		    _M_data(__another);
 188:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 		    _M_capacity(__capacity);
 189:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 		  }
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 42


 190:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 		_M_data()[__len++] = *__beg;
 191:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 		++__beg;
 192:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	      }
 193:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	  }
 194:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	__catch(...)
 195:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	  {
 196:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	    _M_dispose();
 197:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	    __throw_exception_again;
 198:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	  }
 199:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 
 200:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	_M_set_length(__len);
 201:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****       }
 202:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 
 203:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 204:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****     template<typename _InIterator>
 205:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****       void
 206:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****       basic_string<_CharT, _Traits, _Alloc>::
 207:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 208:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 		   std::forward_iterator_tag)
 209:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****       {
 210:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	// NB: Not required, but considered best practice.
 211:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	if (__gnu_cxx::__is_null_pointer(__beg) && __beg != __end)
 212:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	  std::__throw_logic_error(__N("basic_string::"
 213:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 				       "_M_construct null not valid"));
 214:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 
 215:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
 510              		.loc 17 215 12 view .LVU127
 511 0004 1123     		movs	r3, #17
 216:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 
 217:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	if (__dnew > size_type(_S_local_capacity))
 218:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	  {
 219:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	    _M_data(_M_create(__dnew, size_type(0)));
 512              		.loc 17 219 13 view .LVU128
 513 0006 0022     		movs	r2, #0
 514              	.LBB557:
 515              	.LBB558:
 516              	.LBB559:
 517              	.LBB560:
 518              	.LBB561:
 519              		.file 18 "/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h"
   1:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** // Character Traits for use by standard string and iostream -*- C++ -*-
   2:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
   3:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** // Copyright (C) 1997-2020 Free Software Foundation, Inc.
   4:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** //
   5:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** // software; you can redistribute it and/or modify it under the
   7:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** // terms of the GNU General Public License as published by the
   8:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** // any later version.
  10:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
  11:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** // This library is distributed in the hope that it will be useful,
  12:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** // GNU General Public License for more details.
  15:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
  16:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** // permissions described in the GCC Runtime Library Exception, version
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 43


  18:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** // 3.1, as published by the Free Software Foundation.
  19:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
  20:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** // You should have received a copy of the GNU General Public License and
  21:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** // <http://www.gnu.org/licenses/>.
  24:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
  25:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** /** @file bits/char_traits.h
  26:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****  *  This is an internal header file, included by other library headers.
  27:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****  *  Do not attempt to use it directly. @headername{string}
  28:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****  */
  29:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
  30:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** //
  31:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** // ISO C++ 14882: 21  Strings library
  32:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** //
  33:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
  34:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** #ifndef _CHAR_TRAITS_H
  35:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** #define _CHAR_TRAITS_H 1
  36:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
  37:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** #pragma GCC system_header
  38:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
  39:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** #include <bits/stl_algobase.h>  // std::copy, std::fill_n
  40:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** #include <bits/postypes.h>      // For streampos
  41:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** #include <cwchar>               // For WEOF, wmemmove, wmemset, etc.
  42:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** #if __cplusplus > 201703L
  43:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** # include <compare>
  44:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** #endif
  45:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
  46:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** #ifndef _GLIBCXX_ALWAYS_INLINE
  47:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** # define _GLIBCXX_ALWAYS_INLINE inline __attribute__((__always_inline__))
  48:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** #endif
  49:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
  50:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  51:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** {
  52:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  53:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
  54:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****   /**
  55:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****    *  @brief  Mapping from character type to associated types.
  56:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****    *
  57:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****    *  @note This is an implementation class for the generic version
  58:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****    *  of char_traits.  It defines int_type, off_type, pos_type, and
  59:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****    *  state_type.  By default these are unsigned long, streamoff,
  60:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****    *  streampos, and mbstate_t.  Users who need a different set of
  61:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****    *  types, but who don't need to change the definitions of any function
  62:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****    *  defined in char_traits, can specialize __gnu_cxx::_Char_types
  63:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****    *  while leaving __gnu_cxx::char_traits alone. */
  64:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****   template<typename _CharT>
  65:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     struct _Char_types
  66:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     {
  67:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       typedef unsigned long   int_type;
  68:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       typedef std::streampos  pos_type;
  69:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       typedef std::streamoff  off_type;
  70:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       typedef std::mbstate_t  state_type;
  71:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     };
  72:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
  73:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
  74:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****   /**
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 44


  75:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****    *  @brief  Base class used to implement std::char_traits.
  76:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****    *
  77:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****    *  @note For any given actual character type, this definition is
  78:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****    *  probably wrong.  (Most of the member functions are likely to be
  79:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****    *  right, but the int_type and state_type typedefs, and the eof()
  80:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****    *  member function, are likely to be wrong.)  The reason this class
  81:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****    *  exists is so users can specialize it.  Classes in namespace std
  82:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****    *  may not be specialized for fundamental types, but classes in
  83:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****    *  namespace __gnu_cxx may be.
  84:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****    *
  85:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****    *  See https://gcc.gnu.org/onlinedocs/libstdc++/manual/strings.html#strings.string.character_typ
  86:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****    *  for advice on how to make use of this class for @a unusual character
  87:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****    *  types. Also, check out include/ext/pod_char_traits.h.  
  88:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****    */
  89:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****   template<typename _CharT>
  90:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     struct char_traits
  91:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     {
  92:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       typedef _CharT                                    char_type;
  93:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       typedef typename _Char_types<_CharT>::int_type    int_type;
  94:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       typedef typename _Char_types<_CharT>::pos_type    pos_type;
  95:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       typedef typename _Char_types<_CharT>::off_type    off_type;
  96:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       typedef typename _Char_types<_CharT>::state_type  state_type;
  97:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** #if __cpp_lib_three_way_comparison
  98:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       using comparison_category = std::strong_ordering;
  99:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** #endif
 100:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
 101:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       static _GLIBCXX14_CONSTEXPR void
 102:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       assign(char_type& __c1, const char_type& __c2)
 103:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 104:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
 105:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 106:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       eq(const char_type& __c1, const char_type& __c2)
 107:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       { return __c1 == __c2; }
 108:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
 109:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 110:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       lt(const char_type& __c1, const char_type& __c2)
 111:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       { return __c1 < __c2; }
 112:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
 113:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       static _GLIBCXX14_CONSTEXPR int
 114:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       compare(const char_type* __s1, const char_type* __s2, std::size_t __n);
 115:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
 116:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       static _GLIBCXX14_CONSTEXPR std::size_t
 117:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       length(const char_type* __s);
 118:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
 119:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       static _GLIBCXX14_CONSTEXPR const char_type*
 120:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       find(const char_type* __s, std::size_t __n, const char_type& __a);
 121:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
 122:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       static _GLIBCXX20_CONSTEXPR char_type*
 123:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       move(char_type* __s1, const char_type* __s2, std::size_t __n);
 124:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
 125:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       static _GLIBCXX20_CONSTEXPR char_type*
 126:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       copy(char_type* __s1, const char_type* __s2, std::size_t __n);
 127:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
 128:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       static _GLIBCXX20_CONSTEXPR char_type*
 129:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       assign(char_type* __s, std::size_t __n, char_type __a);
 130:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
 131:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR char_type
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 45


 132:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       to_char_type(const int_type& __c)
 133:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       { return static_cast<char_type>(__c); }
 134:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
 135:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR int_type
 136:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       to_int_type(const char_type& __c)
 137:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       { return static_cast<int_type>(__c); }
 138:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
 139:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 140:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       eq_int_type(const int_type& __c1, const int_type& __c2)
 141:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       { return __c1 == __c2; }
 142:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
 143:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR int_type
 144:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       eof()
 145:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       { return static_cast<int_type>(_GLIBCXX_STDIO_EOF); }
 146:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
 147:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR int_type
 148:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       not_eof(const int_type& __c)
 149:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       { return !eq_int_type(__c, eof()) ? __c : to_int_type(char_type()); }
 150:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     };
 151:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
 152:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****   template<typename _CharT>
 153:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     _GLIBCXX14_CONSTEXPR int
 154:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     char_traits<_CharT>::
 155:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     compare(const char_type* __s1, const char_type* __s2, std::size_t __n)
 156:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     {
 157:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       for (std::size_t __i = 0; __i < __n; ++__i)
 158:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 	if (lt(__s1[__i], __s2[__i]))
 159:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 	  return -1;
 160:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 	else if (lt(__s2[__i], __s1[__i]))
 161:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 	  return 1;
 162:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       return 0;
 163:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     }
 164:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
 165:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****   template<typename _CharT>
 166:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     _GLIBCXX14_CONSTEXPR std::size_t
 167:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     char_traits<_CharT>::
 168:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     length(const char_type* __p)
 169:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     {
 170:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       std::size_t __i = 0;
 171:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       while (!eq(__p[__i], char_type()))
 172:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****         ++__i;
 173:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       return __i;
 174:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     }
 175:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
 176:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****   template<typename _CharT>
 177:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     _GLIBCXX14_CONSTEXPR const typename char_traits<_CharT>::char_type*
 178:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     char_traits<_CharT>::
 179:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     find(const char_type* __s, std::size_t __n, const char_type& __a)
 180:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     {
 181:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       for (std::size_t __i = 0; __i < __n; ++__i)
 182:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****         if (eq(__s[__i], __a))
 183:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****           return __s + __i;
 184:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       return 0;
 185:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     }
 186:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
 187:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****   template<typename _CharT>
 188:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     _GLIBCXX20_CONSTEXPR
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 46


 189:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     typename char_traits<_CharT>::char_type*
 190:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     char_traits<_CharT>::
 191:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     move(char_type* __s1, const char_type* __s2, std::size_t __n)
 192:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     {
 193:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       if (__n == 0)
 194:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 	return __s1;
 195:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** #ifdef __cpp_lib_is_constant_evaluated
 196:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       if (std::is_constant_evaluated())
 197:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 	{
 198:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 	  if (__s1 > __s2 && __s1 < __s2 + __n)
 199:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 	    std::copy_backward(__s2, __s2 + __n, __s1 + __n);
 200:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 	  else
 201:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 	    std::copy(__s2, __s2 + __n, __s1);
 202:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 	  return __s1;
 203:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 	}
 204:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** #endif
 205:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       return static_cast<_CharT*>(__builtin_memmove(__s1, __s2,
 206:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 						    __n * sizeof(char_type)));
 207:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     }
 208:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
 209:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****   template<typename _CharT>
 210:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     _GLIBCXX20_CONSTEXPR
 211:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     typename char_traits<_CharT>::char_type*
 212:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     char_traits<_CharT>::
 213:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     copy(char_type* __s1, const char_type* __s2, std::size_t __n)
 214:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     {
 215:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       // NB: Inline std::copy so no recursive dependencies.
 216:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       std::copy(__s2, __s2 + __n, __s1);
 217:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       return __s1;
 218:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     }
 219:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
 220:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****   template<typename _CharT>
 221:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     _GLIBCXX20_CONSTEXPR
 222:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     typename char_traits<_CharT>::char_type*
 223:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     char_traits<_CharT>::
 224:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     assign(char_type* __s, std::size_t __n, char_type __a)
 225:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     {
 226:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       // NB: Inline std::fill_n so no recursive dependencies.
 227:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       std::fill_n(__s, __n, __a);
 228:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       return __s;
 229:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     }
 230:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
 231:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** _GLIBCXX_END_NAMESPACE_VERSION
 232:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** } // namespace
 233:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
 234:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** namespace std _GLIBCXX_VISIBILITY(default)
 235:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** {
 236:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
 237:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
 238:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** #if __cplusplus >= 201703L
 239:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
 240:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** #ifdef __cpp_lib_is_constant_evaluated
 241:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** // Unofficial macro indicating P1032R1 support in C++20
 242:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** # define __cpp_lib_constexpr_char_traits 201811L
 243:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** #else
 244:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** // Unofficial macro indicating P0426R1 support in C++17
 245:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** # define __cpp_lib_constexpr_char_traits 201611L
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 47


 246:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** #endif
 247:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
 248:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****   /**
 249:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****    *  @brief Determine whether the characters of a NULL-terminated
 250:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****    *  string are known at compile time.
 251:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****    *  @param  __s  The string.
 252:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****    *
 253:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****    *  Assumes that _CharT is a built-in character type.
 254:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****    */
 255:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****   template<typename _CharT>
 256:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     _GLIBCXX_ALWAYS_INLINE constexpr bool
 257:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     __constant_string_p(const _CharT* __s)
 258:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     {
 259:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** #ifdef _GLIBCXX_HAVE_BUILTIN_IS_CONSTANT_EVALUATED
 260:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       (void) __s;
 261:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       // In constexpr contexts all strings should be constant.
 262:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       return __builtin_is_constant_evaluated();
 263:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** #else
 264:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       while (__builtin_constant_p(*__s) && *__s)
 265:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 	__s++;
 266:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       return __builtin_constant_p(*__s);
 267:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** #endif
 268:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     }
 269:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
 270:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****   /**
 271:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****    *  @brief Determine whether the characters of a character array are
 272:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****    *  known at compile time.
 273:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****    *  @param  __a  The character array.
 274:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****    *  @param  __n  Number of characters.
 275:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****    *
 276:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****    *  Assumes that _CharT is a built-in character type.
 277:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****    */
 278:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****   template<typename _CharT>
 279:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     _GLIBCXX_ALWAYS_INLINE constexpr bool
 280:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     __constant_char_array_p(const _CharT* __a, size_t __n)
 281:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     {
 282:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** #ifdef _GLIBCXX_HAVE_BUILTIN_IS_CONSTANT_EVALUATED
 283:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       (void) __a;
 284:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       (void) __n;
 285:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       // In constexpr contexts all character arrays should be constant.
 286:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       return __builtin_is_constant_evaluated();
 287:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** #else
 288:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       size_t __i = 0;
 289:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       while (__i < __n && __builtin_constant_p(__a[__i]))
 290:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 	__i++;
 291:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       return __i == __n;
 292:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** #endif
 293:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     }
 294:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** #endif
 295:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
 296:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****   // 21.1
 297:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****   /**
 298:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****    *  @brief  Basis for explicit traits specializations.
 299:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****    *
 300:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****    *  @note  For any given actual character type, this definition is
 301:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****    *  probably wrong.  Since this is just a thin wrapper around
 302:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****    *  __gnu_cxx::char_traits, it is possible to achieve a more
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 48


 303:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****    *  appropriate definition by specializing __gnu_cxx::char_traits.
 304:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****    *
 305:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****    *  See https://gcc.gnu.org/onlinedocs/libstdc++/manual/strings.html#strings.string.character_typ
 306:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****    *  for advice on how to make use of this class for @a unusual character
 307:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****    *  types. Also, check out include/ext/pod_char_traits.h.
 308:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****   */
 309:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****   template<class _CharT>
 310:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     struct char_traits : public __gnu_cxx::char_traits<_CharT>
 311:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     { };
 312:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
 313:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
 314:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****   /// 21.1.3.1  char_traits specializations
 315:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****   template<>
 316:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     struct char_traits<char>
 317:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     {
 318:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       typedef char              char_type;
 319:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       typedef int               int_type;
 320:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       typedef streampos         pos_type;
 321:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       typedef streamoff         off_type;
 322:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       typedef mbstate_t         state_type;
 323:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** #if __cpp_lib_three_way_comparison
 324:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       using comparison_category = strong_ordering;
 325:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** #endif
 326:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
 327:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       static _GLIBCXX17_CONSTEXPR void
 328:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       assign(char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
 329:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 330:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
 331:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 332:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       eq(const char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
 333:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       { return __c1 == __c2; }
 334:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
 335:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 336:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       lt(const char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
 337:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       {
 338:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 	// LWG 467.
 339:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 	return (static_cast<unsigned char>(__c1)
 340:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 		< static_cast<unsigned char>(__c2));
 341:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       }
 342:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
 343:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       static _GLIBCXX17_CONSTEXPR int
 344:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       compare(const char_type* __s1, const char_type* __s2, size_t __n)
 345:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       {
 346:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 	if (__n == 0)
 347:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 	  return 0;
 348:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** #if __cplusplus >= 201703L
 349:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 	if (__builtin_constant_p(__n)
 350:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 	    && __constant_char_array_p(__s1, __n)
 351:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 	    && __constant_char_array_p(__s2, __n))
 352:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 	  {
 353:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 	    for (size_t __i = 0; __i < __n; ++__i)
 354:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 	      if (lt(__s1[__i], __s2[__i]))
 355:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 		return -1;
 356:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 	      else if (lt(__s2[__i], __s1[__i]))
 357:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 		return 1;
 358:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 	    return 0;
 359:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 	  }
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 49


 360:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** #endif
 361:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 	return __builtin_memcmp(__s1, __s2, __n);
 362:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       }
 363:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
 364:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       static _GLIBCXX17_CONSTEXPR size_t
 365:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       length(const char_type* __s)
 366:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       {
 367:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** #if __cplusplus >= 201703L
 368:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 	if (__constant_string_p(__s))
 369:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::length(__s);
 370:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** #endif
 371:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 	return __builtin_strlen(__s);
 372:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       }
 373:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
 374:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       static _GLIBCXX17_CONSTEXPR const char_type*
 375:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       find(const char_type* __s, size_t __n, const char_type& __a)
 376:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       {
 377:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 	if (__n == 0)
 378:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 	  return 0;
 379:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** #if __cplusplus >= 201703L
 380:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 	if (__builtin_constant_p(__n)
 381:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 	    && __builtin_constant_p(__a)
 382:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 	    && __constant_char_array_p(__s, __n))
 383:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::find(__s, __n, __a);
 384:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** #endif
 385:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 	return static_cast<const char_type*>(__builtin_memchr(__s, __a, __n));
 386:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       }
 387:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
 388:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       static _GLIBCXX20_CONSTEXPR char_type*
 389:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       move(char_type* __s1, const char_type* __s2, size_t __n)
 390:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       {
 391:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 	if (__n == 0)
 392:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 	  return __s1;
 393:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** #ifdef __cpp_lib_is_constant_evaluated
 394:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 	if (std::is_constant_evaluated())
 395:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::move(__s1, __s2, __n);
 396:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** #endif
 397:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 	return static_cast<char_type*>(__builtin_memmove(__s1, __s2, __n));
 398:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       }
 399:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
 400:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       static _GLIBCXX20_CONSTEXPR char_type*
 401:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       copy(char_type* __s1, const char_type* __s2, size_t __n)
 402:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       {
 403:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 	if (__n == 0)
 404:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 	  return __s1;
 405:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** #ifdef __cpp_lib_is_constant_evaluated
 406:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 	if (std::is_constant_evaluated())
 407:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::copy(__s1, __s2, __n);
 408:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** #endif
 409:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 	return static_cast<char_type*>(__builtin_memcpy(__s1, __s2, __n));
 520              		.loc 18 409 49 view .LVU129
 521 0008 674E     		ldr	r6, .L53
 522              	.LBE561:
 523              	.LBE560:
 524              	.LBE559:
 525              	.LBE558:
 526              	.LBE557:
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 50


 527              	.LBE556:
 528              	.LBE555:
 529              	.LBE554:
 530              	.LBB610:
 531              	.LBB552:
 532              	.LBB550:
 165:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 533              		.loc 16 165 35 view .LVU130
 534 000a 0AAD     		add	r5, sp, #40
 535              	.LVL24:
 165:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 536              		.loc 16 165 35 view .LVU131
 537              	.LBE550:
 538              	.LBE552:
 539              	.LBE610:
 540              	.LBB611:
 541              	.LBB605:
 542              	.LBB601:
 543              		.loc 17 219 13 view .LVU132
 544 000c 1AA9     		add	r1, sp, #104
 545 000e 08A8     		add	r0, sp, #32
 546              	.LVL25:
 215:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 
 547              		.loc 17 215 12 view .LVU133
 548 0010 1A93     		str	r3, [sp, #104]
 549              	.LBE601:
 550              	.LBE605:
 551              	.LBE611:
 552              	.LBB612:
 553              	.LBB553:
 554              	.LBB551:
 165:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 555              		.loc 16 165 35 view .LVU134
 556 0012 0895     		str	r5, [sp, #32]
 557              	.LVL26:
 165:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 558              		.loc 16 165 35 view .LVU135
 559              	.LBE551:
 560              	.LBE553:
 561              	.LBE612:
 562              	.LBB613:
 563              	.LBB606:
 564              	.LBI606:
 365:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       {
 565              		.loc 18 365 7 is_stmt 1 view .LVU136
 566              	.LBE606:
 567              	.LBE613:
 568              	.LBE543:
 569              	.LBE542:
 371:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       }
 570              		.loc 18 371 2 view .LVU137
 571              	.LBB620:
 572              	.LBB617:
 573              	.LBB614:
 574              	.LBB607:
 575              	.LBI555:
 206:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 51


 576              		.loc 17 206 7 view .LVU138
 577              	.LBB602:
 578              		.loc 17 219 13 is_stmt 0 view .LVU139
 579 0014 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj
 580              	.LVL27:
 581              	.LBB570:
 582              	.LBB571:
 219:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 583              		.loc 16 219 31 view .LVU140
 584 0018 1A9B     		ldr	r3, [sp, #104]
 585              	.LBE571:
 586              	.LBE570:
 587              		.loc 17 219 13 view .LVU141
 588 001a 0446     		mov	r4, r0
 589              	.LVL28:
 590              	.LBB573:
 591              	.LBI573:
 186:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 592              		.loc 16 186 7 is_stmt 1 view .LVU142
 593              	.LBB574:
 187:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 594              		.loc 16 187 26 is_stmt 0 view .LVU143
 595 001c 0890     		str	r0, [sp, #32]
 596              	.LVL29:
 187:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 597              		.loc 16 187 26 view .LVU144
 598              	.LBE574:
 599              	.LBE573:
 600              	.LBB575:
 601              	.LBI570:
 218:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 602              		.loc 16 218 7 is_stmt 1 view .LVU145
 218:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 603              		.loc 16 218 7 is_stmt 0 view .LVU146
 604              	.LBE575:
 605              	.LBB576:
 606              	.LBI557:
 404:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
 607              		.loc 16 404 7 is_stmt 1 view .LVU147
 608              	.LBB568:
 609              	.LBI558:
 354:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
 610              		.loc 16 354 7 view .LVU148
 611              	.LBB566:
 612              	.LBI559:
 354:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
 613              		.loc 16 354 7 view .LVU149
 614              	.LBB564:
 615              	.LBI560:
 401:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       {
 616              		.loc 18 401 7 view .LVU150
 617              	.LBB562:
 403:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 	  return __s1;
 618              		.loc 18 403 2 view .LVU151
 619              		.loc 18 409 2 view .LVU152
 620              	.LBE562:
 621              	.LBE564:
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 52


 622              	.LBE566:
 623              	.LBE568:
 624              	.LBE576:
 625              	.LBB577:
 626              	.LBB578:
 627              	.LBB579:
 628              	.LBB580:
 329:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
 629              		.loc 18 329 14 is_stmt 0 view .LVU153
 630 001e 4FF0000C 		mov	ip, #0
 631              	.LBE580:
 632              	.LBE579:
 633              	.LBE578:
 634              	.LBE577:
 635              	.LBB595:
 636              	.LBB572:
 219:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 637              		.loc 16 219 31 view .LVU154
 638 0022 0A93     		str	r3, [sp, #40]
 639              	.LBE572:
 640              	.LBE595:
 641              	.LBB596:
 642              	.LBB569:
 643              	.LBB567:
 644              	.LBB565:
 645              	.LBB563:
 646              		.loc 18 409 49 view .LVU155
 647 0024 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 648              	.LVL30:
 649              		.loc 18 409 49 view .LVU156
 650 0026 E360     		str	r3, [r4, #12]	@ unaligned
 651 0028 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 652 002a 2060     		str	r0, [r4]	@ unaligned
 653 002c 6160     		str	r1, [r4, #4]	@ unaligned
 654 002e A260     		str	r2, [r4, #8]	@ unaligned
 655 0030 2374     		strb	r3, [r4, #16]
 656              	.LVL31:
 657              		.loc 18 409 49 view .LVU157
 658              	.LBE563:
 659              	.LBE565:
 660              	.LBE567:
 661              	.LBE569:
 662              	.LBE596:
 663              	.LBB597:
 664              	.LBB591:
 665              	.LBB584:
 666              	.LBB581:
 329:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
 667              		.loc 18 329 14 view .LVU158
 668 0032 089A     		ldr	r2, [sp, #32]
 669              	.LBE581:
 670              	.LBE584:
 671              	.LBE591:
 672              	.LBE597:
 220:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	    _M_capacity(__dnew);
 221:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	  }
 222:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 53


 223:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	// Check for out_of_range and length_error exceptions.
 224:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	__try
 225:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	  { this->_S_copy_chars(_M_data(), __beg, __end); }
 226:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	__catch(...)
 227:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	  {
 228:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	    _M_dispose();
 229:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	    __throw_exception_again;
 230:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	  }
 231:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 
 232:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	_M_set_length(__dnew);
 673              		.loc 17 232 15 view .LVU159
 674 0034 1A9B     		ldr	r3, [sp, #104]
 675              	.LVL32:
 676              	.LBB598:
 677              	.LBI577:
 222:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
 678              		.loc 16 222 7 is_stmt 1 view .LVU160
 679              	.LBB592:
 680              	.LBB585:
 681              	.LBI585:
 190:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 682              		.loc 16 190 7 view .LVU161
 683              	.LBE585:
 684              	.LBE592:
 685              	.LBE598:
 686              	.LBE602:
 687              	.LBE607:
 688              	.LBE614:
 689              	.LBE617:
 690              	.LBE620:
  97:granular.cpp  **** 
 691              		.loc 13 97 12 is_stmt 0 view .LVU162
 692 0036 5D49     		ldr	r1, .L53+4
 693              	.LBB621:
 694              	.LBB618:
 695              	.LBB615:
 696              	.LBB608:
 697              	.LBB603:
 698              	.LBB599:
 699              	.LBB593:
 700              	.LBB587:
 701              	.LBB586:
 191:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 702              		.loc 16 191 26 view .LVU163
 703 0038 0993     		str	r3, [sp, #36]
 704              	.LVL33:
 191:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 705              		.loc 16 191 26 view .LVU164
 706              	.LBE586:
 707              	.LBE587:
 708              	.LBB588:
 709              	.LBI588:
 194:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 710              		.loc 16 194 7 is_stmt 1 view .LVU165
 194:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 711              		.loc 16 194 7 is_stmt 0 view .LVU166
 712              	.LBE588:
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 54


 713              	.LBB589:
 714              	.LBI579:
 328:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 715              		.loc 18 328 7 is_stmt 1 view .LVU167
 716              	.LBB582:
 329:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
 717              		.loc 18 329 9 view .LVU168
 718              	.LBE582:
 719              	.LBE589:
 720              	.LBE593:
 721              	.LBE599:
 722              	.LBE603:
 723              	.LBE608:
 724              	.LBE615:
 725              	.LBE618:
 726              	.LBE621:
  97:granular.cpp  **** 
 727              		.loc 13 97 12 is_stmt 0 view .LVU169
 728 003a 5D48     		ldr	r0, .L53+8
 729              	.LBB622:
 730              	.LBB619:
 731              	.LBB616:
 732              	.LBB609:
 733              	.LBB604:
 734              	.LBB600:
 735              	.LBB594:
 736              	.LBB590:
 737              	.LBB583:
 329:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
 738              		.loc 18 329 14 view .LVU170
 739 003c 02F803C0 		strb	ip, [r2, r3]
 740              	.LVL34:
 329:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
 741              		.loc 18 329 14 view .LVU171
 742              	.LBE583:
 743              	.LBE590:
 744              	.LBE594:
 745              	.LBE600:
 746              	.LBE604:
 747              	.LBE609:
 748              	.LBE616:
 749              	.LBE619:
 750              	.LBE622:
 751              	.LBB623:
 752              	.LBI623:
 168:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 169:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 
 170:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** #if __cplusplus >= 201103L
 171:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****       // Avoid implicit deprecation.
 172:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****       allocator& operator=(const allocator&) = default;
 173:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** #endif
 174:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 
 175:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****       template<typename _Tp1>
 176:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 	_GLIBCXX20_CONSTEXPR
 177:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }
 178:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 
 179:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** #if __cpp_constexpr_dynamic_alloc
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 55


 180:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****       constexpr
 181:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** #endif
 182:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****       ~allocator() _GLIBCXX_NOTHROW { }
 753              		.loc 14 182 7 is_stmt 1 view .LVU172
 754              	.LBB624:
 755              	.LBI624:
  83:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 
  84:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h ****       template<typename _Tp1>
  85:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 	_GLIBCXX20_CONSTEXPR
  86:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 	new_allocator(const new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }
  87:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 
  88:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** #if __cplusplus <= 201703L
  89:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h ****       ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 756              		.loc 15 89 7 view .LVU173
 757              		.loc 15 89 7 is_stmt 0 view .LVU174
 758              	.LBE624:
 759              	.LBE623:
  90:granular.cpp  ****     FRESULT result = FR_OK;
 760              		.loc 13 90 5 is_stmt 1 view .LVU175
  91:granular.cpp  ****     FILINFO fno;
 761              		.loc 13 91 5 view .LVU176
  92:granular.cpp  ****     DIR dir;
 762              		.loc 13 92 5 view .LVU177
  93:granular.cpp  ****     char *fn;
 763              		.loc 13 93 5 view .LVU178
  94:granular.cpp  **** 
 764              		.loc 13 94 5 view .LVU179
  96:granular.cpp  ****     f_mount(&fs, "/", 1);
 765              		.loc 13 96 5 view .LVU180
 766              	.LBB625:
 767              	.LBI625:
 768              		.file 19 "../../libDaisy//src/sys/fatfs.h"
   1:../../libDaisy//src/sys/fatfs.h **** #ifndef __fatfs_H
   2:../../libDaisy//src/sys/fatfs.h **** #define __fatfs_H /**< & */
   3:../../libDaisy//src/sys/fatfs.h **** 
   4:../../libDaisy//src/sys/fatfs.h **** #include "ff.h"
   5:../../libDaisy//src/sys/fatfs.h **** 
   6:../../libDaisy//src/sys/fatfs.h **** namespace daisy
   7:../../libDaisy//src/sys/fatfs.h **** {
   8:../../libDaisy//src/sys/fatfs.h **** /** @brief Daisy FatFS Driver Interface
   9:../../libDaisy//src/sys/fatfs.h ****  *  @details Specifies the desired media (SD Card, USB, etc.) to be mountable with FatFS
  10:../../libDaisy//src/sys/fatfs.h ****  *           within a given application. Once initialization is called, the standard
  11:../../libDaisy//src/sys/fatfs.h ****  *           FatFS API will be usable with the media mounted in the order 
  12:../../libDaisy//src/sys/fatfs.h ****  *           they are listed in the Media config struct. 
  13:../../libDaisy//src/sys/fatfs.h ****  *           For example, when only using an SD Card, it will mount at "0:/",
  14:../../libDaisy//src/sys/fatfs.h ****  *           when only using USB, it will mount at "0:/". However, when mounting 
  15:../../libDaisy//src/sys/fatfs.h ****  *           with SD card and USB, the SD card will mount at "0:/", and the USB 
  16:../../libDaisy//src/sys/fatfs.h ****  *           will mount at "1:/".
  17:../../libDaisy//src/sys/fatfs.h ****  *           The relevant hardware peripheral (SDMMC, or MSD) needs to be initialized
  18:../../libDaisy//src/sys/fatfs.h ****  *           separately by the application before using FatFS.
  19:../../libDaisy//src/sys/fatfs.h ****  *          
  20:../../libDaisy//src/sys/fatfs.h ****  *           This object has some memory limitations due to the media connected to it.
  21:../../libDaisy//src/sys/fatfs.h ****  *           The SDMMC1 peripheral can only communicate with the AXI SRAM, and the DTCMRAM 
  22:../../libDaisy//src/sys/fatfs.h ****  *           cannot communicate with the DMA. So the FatFSInterface object should always be
  23:../../libDaisy//src/sys/fatfs.h ****  *           located in the AXI SRAM. This is the default location for all data/bss memory
  24:../../libDaisy//src/sys/fatfs.h ****  *           using the standard build. However, applciations using the electrosmith bootloader
  25:../../libDaisy//src/sys/fatfs.h ****  *           will need special consideration when using this object AND an SD Card. 
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 56


  26:../../libDaisy//src/sys/fatfs.h ****  */
  27:../../libDaisy//src/sys/fatfs.h **** class FatFSInterface
  28:../../libDaisy//src/sys/fatfs.h **** {
  29:../../libDaisy//src/sys/fatfs.h ****   public:
  30:../../libDaisy//src/sys/fatfs.h ****     /** Return values specifying specific errors for linking Daisy to FatFS */
  31:../../libDaisy//src/sys/fatfs.h ****     enum Result
  32:../../libDaisy//src/sys/fatfs.h ****     {
  33:../../libDaisy//src/sys/fatfs.h ****         OK,
  34:../../libDaisy//src/sys/fatfs.h ****         ERR_TOO_MANY_VOLUMES,
  35:../../libDaisy//src/sys/fatfs.h ****         ERR_NO_MEDIA_SELECTED,
  36:../../libDaisy//src/sys/fatfs.h ****         ERR_GENERIC,
  37:../../libDaisy//src/sys/fatfs.h ****     };
  38:../../libDaisy//src/sys/fatfs.h **** 
  39:../../libDaisy//src/sys/fatfs.h ****     /** Config structure for configuring Daisy to FatFS */
  40:../../libDaisy//src/sys/fatfs.h ****     struct Config
  41:../../libDaisy//src/sys/fatfs.h ****     {
  42:../../libDaisy//src/sys/fatfs.h ****         /** Selected Media that will be linked to FatFS 
  43:../../libDaisy//src/sys/fatfs.h ****          *  These values can be OR'd together when multiple
  44:../../libDaisy//src/sys/fatfs.h ****          *  volumes are desired 
  45:../../libDaisy//src/sys/fatfs.h ****          *  i.e. config.media = Media::SD | Media::USBH;
  46:../../libDaisy//src/sys/fatfs.h ****          * 
  47:../../libDaisy//src/sys/fatfs.h ****          *  When mounting multiple volumes, ffconf.h must have 
  48:../../libDaisy//src/sys/fatfs.h ****          *  _VOLUMES set to an appropriate value.
  49:../../libDaisy//src/sys/fatfs.h ****          * 
  50:../../libDaisy//src/sys/fatfs.h ****          *  FatFS will register multiple volumes in the order of the enum,
  51:../../libDaisy//src/sys/fatfs.h ****          *   the first registered class will mount at "0:/",
  52:../../libDaisy//src/sys/fatfs.h ****          *   the second registered class will mount at "1:/", and so on
  53:../../libDaisy//src/sys/fatfs.h ****          */
  54:../../libDaisy//src/sys/fatfs.h ****         enum Media : uint8_t
  55:../../libDaisy//src/sys/fatfs.h ****         {
  56:../../libDaisy//src/sys/fatfs.h ****             MEDIA_SD  = 0x01,
  57:../../libDaisy//src/sys/fatfs.h ****             MEDIA_USB = 0x02,
  58:../../libDaisy//src/sys/fatfs.h ****             // MEDIA_QSPI = 0x04,
  59:../../libDaisy//src/sys/fatfs.h ****         };
  60:../../libDaisy//src/sys/fatfs.h **** 
  61:../../libDaisy//src/sys/fatfs.h ****         uint8_t media;
  62:../../libDaisy//src/sys/fatfs.h ****     };
  63:../../libDaisy//src/sys/fatfs.h **** 
  64:../../libDaisy//src/sys/fatfs.h ****     FatFSInterface() {}
  65:../../libDaisy//src/sys/fatfs.h **** 
  66:../../libDaisy//src/sys/fatfs.h ****     /** Link the desired hardware specified via Config::Media */
  67:../../libDaisy//src/sys/fatfs.h ****     Result Init(const Config& cfg);
  68:../../libDaisy//src/sys/fatfs.h **** 
  69:../../libDaisy//src/sys/fatfs.h ****     /** Link the desired hardware specified via Config::Media 
  70:../../libDaisy//src/sys/fatfs.h ****      * 
  71:../../libDaisy//src/sys/fatfs.h ****      *  Alternate, explicit initialization provided for simplified syntax.
  72:../../libDaisy//src/sys/fatfs.h ****      */
  73:../../libDaisy//src/sys/fatfs.h ****     Result Init(const uint8_t media);
  74:../../libDaisy//src/sys/fatfs.h **** 
  75:../../libDaisy//src/sys/fatfs.h ****     /** Unlinks FatFS from the configured media */
  76:../../libDaisy//src/sys/fatfs.h ****     Result DeInit();
  77:../../libDaisy//src/sys/fatfs.h **** 
  78:../../libDaisy//src/sys/fatfs.h ****     bool Initialized() const { return initialized_; }
  79:../../libDaisy//src/sys/fatfs.h **** 
  80:../../libDaisy//src/sys/fatfs.h ****     /** Return the current configuration */
  81:../../libDaisy//src/sys/fatfs.h ****     const Config& GetConfig() const { return cfg_; }
  82:../../libDaisy//src/sys/fatfs.h **** 
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 57


  83:../../libDaisy//src/sys/fatfs.h ****     /** Return a mutable reference to the Configuration */
  84:../../libDaisy//src/sys/fatfs.h ****     Config& GetMutableConfig() { return cfg_; }
  85:../../libDaisy//src/sys/fatfs.h **** 
  86:../../libDaisy//src/sys/fatfs.h ****     /** Returns the path to an SD Card volume to use with f_mount */
  87:../../libDaisy//src/sys/fatfs.h ****     const char* GetSDPath() const { return path_[0]; }
  88:../../libDaisy//src/sys/fatfs.h **** 
  89:../../libDaisy//src/sys/fatfs.h ****     /** Returns the path to a USB Device volume to use with f_mount */
  90:../../libDaisy//src/sys/fatfs.h ****     const char* GetUSBPath() const { return path_[1]; }
  91:../../libDaisy//src/sys/fatfs.h **** 
  92:../../libDaisy//src/sys/fatfs.h ****     /** Returns reference to filesystem object for the SD volume. */
  93:../../libDaisy//src/sys/fatfs.h ****     FATFS& GetSDFileSystem() { return fs_[0]; }
 769              		.loc 19 93 12 view .LVU181
 770              	.LBE625:
 771              		.loc 19 93 32 view .LVU182
  97:granular.cpp  **** 
 772              		.loc 13 97 5 view .LVU183
  97:granular.cpp  **** 
 773              		.loc 13 97 12 is_stmt 0 view .LVU184
 774 0040 0122     		movs	r2, #1
 775 0042 FFF7FEFF 		bl	f_mount
 776              	.LVL35:
  99:granular.cpp  ****     {
 777              		.loc 13 99 5 is_stmt 1 view .LVU185
 778              	.LBB626:
  99:granular.cpp  ****     {
 779              		.loc 13 99 18 is_stmt 0 view .LVU186
 780 0046 5949     		ldr	r1, .L53+4
 781 0048 0EA8     		add	r0, sp, #56
 782 004a FFF7FEFF 		bl	f_opendir
 783              	.LVL36:
  99:granular.cpp  ****     {
 784              		.loc 13 99 5 view .LVU187
 785 004e 58B1     		cbz	r0, .L49
 786              	.LVL37:
 787              	.L23:
  99:granular.cpp  ****     {
 788              		.loc 13 99 5 view .LVU188
 789              	.LBE626:
 171:granular.cpp  **** }
 790              		.loc 13 171 5 is_stmt 1 view .LVU189
 171:granular.cpp  **** }
 791              		.loc 13 171 15 is_stmt 0 view .LVU190
 792 0050 0EA8     		add	r0, sp, #56
 793 0052 FFF7FEFF 		bl	f_closedir
 794              	.LVL38:
 795              	.LBB675:
 796              	.LBI675:
 534:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 535:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
 536:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	const _CharT* __end = __s ? __s + traits_type::length(__s)
 537:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	  // We just need a non-null pointer here to get an exception:
 538:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	  : reinterpret_cast<const _CharT*>(__alignof__(_CharT));
 539:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	_M_construct(__s, __end, random_access_iterator_tag());
 540:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       }
 541:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 542:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
 543:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @brief  Construct string as multiple characters.
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 58


 544:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param  __n  Number of characters.
 545:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param  __c  Character to use.
 546:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 547:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
 548:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #if __cpp_deduction_guides && ! defined _GLIBCXX_DEFINING_STRING_INSTANTIATIONS
 549:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 550:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       // 3076. basic_string CTAD ambiguity
 551:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       template<typename = _RequireAllocator<_Alloc>>
 552:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #endif
 553:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       basic_string(size_type __n, _CharT __c, const _Alloc& __a = _Alloc())
 554:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 555:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { _M_construct(__n, __c); }
 556:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 557:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #if __cplusplus >= 201103L
 558:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
 559:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @brief  Move construct string.
 560:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param  __str  Source string.
 561:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *
 562:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  The newly-created string contains the exact contents of @a __str.
 563:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @a __str is a valid, but unspecified string.
 564:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        **/
 565:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       basic_string(basic_string&& __str) noexcept
 566:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), std::move(__str._M_get_allocator()))
 567:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
 568:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	if (__str._M_is_local())
 569:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	  {
 570:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	    traits_type::copy(_M_local_buf, __str._M_local_buf,
 571:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 			      _S_local_capacity + 1);
 572:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	  }
 573:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	else
 574:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	  {
 575:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	    _M_data(__str._M_data());
 576:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	    _M_capacity(__str._M_allocated_capacity);
 577:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	  }
 578:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 579:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	// Must use _M_length() here not _M_set_length() because
 580:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	// basic_stringbuf relies on writing into unallocated capacity so
 581:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	// we mess up the contents if we put a '\0' in the string.
 582:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	_M_length(__str.length());
 583:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	__str._M_data(__str._M_local_data());
 584:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	__str._M_set_length(0);
 585:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       }
 586:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 587:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
 588:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @brief  Construct string from an initializer %list.
 589:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param  __l  std::initializer_list of characters.
 590:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 591:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
 592:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       basic_string(initializer_list<_CharT> __l, const _Alloc& __a = _Alloc())
 593:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 594:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { _M_construct(__l.begin(), __l.end()); }
 595:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 596:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       basic_string(const basic_string& __str, const _Alloc& __a)
 597:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 598:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { _M_construct(__str.begin(), __str.end()); }
 599:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 600:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       basic_string(basic_string&& __str, const _Alloc& __a)
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 59


 601:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       noexcept(_Alloc_traits::_S_always_equal())
 602:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 603:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
 604:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	if (__str._M_is_local())
 605:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	  {
 606:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	    traits_type::copy(_M_local_buf, __str._M_local_buf,
 607:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 			      _S_local_capacity + 1);
 608:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	    _M_length(__str.length());
 609:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	    __str._M_set_length(0);
 610:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	  }
 611:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	else if (_Alloc_traits::_S_always_equal()
 612:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	    || __str.get_allocator() == __a)
 613:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	  {
 614:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	    _M_data(__str._M_data());
 615:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	    _M_length(__str.length());
 616:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	    _M_capacity(__str._M_allocated_capacity);
 617:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	    __str._M_data(__str._M_local_buf);
 618:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	    __str._M_set_length(0);
 619:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	  }
 620:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	else
 621:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	  _M_construct(__str.begin(), __str.end());
 622:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       }
 623:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 624:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #endif // C++11
 625:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 626:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
 627:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @brief  Construct string as copy of a range.
 628:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param  __beg  Start of range.
 629:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param  __end  End of range.
 630:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 631:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
 632:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #if __cplusplus >= 201103L
 633:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       template<typename _InputIterator,
 634:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 635:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #else
 636:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       template<typename _InputIterator>
 637:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #endif
 638:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****         basic_string(_InputIterator __beg, _InputIterator __end,
 639:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 		     const _Alloc& __a = _Alloc())
 640:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	: _M_dataplus(_M_local_data(), __a)
 641:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	{ _M_construct(__beg, __end); }
 642:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 643:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #if __cplusplus >= 201703L
 644:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
 645:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @brief  Construct string from a substring of a string_view.
 646:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param  __t   Source object convertible to string view.
 647:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param  __pos The index of the first character to copy from __t.
 648:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param  __n   The number of characters to copy from __t.
 649:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param  __a   Allocator to use.
 650:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
 651:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       template<typename _Tp, typename = _If_sv<_Tp, void>>
 652:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	basic_string(const _Tp& __t, size_type __pos, size_type __n,
 653:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 		     const _Alloc& __a = _Alloc())
 654:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	: basic_string(_S_to_string_view(__t).substr(__pos, __n), __a) { }
 655:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 656:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
 657:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @brief  Construct string from a string_view.
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 60


 658:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param  __t  Source object convertible to string view.
 659:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 660:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
 661:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       template<typename _Tp, typename = _If_sv<_Tp, void>>
 662:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	explicit
 663:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	basic_string(const _Tp& __t, const _Alloc& __a = _Alloc())
 664:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	: basic_string(__sv_wrapper(_S_to_string_view(__t)), __a) { }
 665:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #endif // C++17
 666:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 667:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
 668:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @brief  Destroy the string instance.
 669:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
 670:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       ~basic_string()
 797              		.loc 16 670 7 is_stmt 1 view .LVU191
 798              	.LBB676:
 799              	.LBB677:
 800              	.LBI677:
 237:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
 801              		.loc 16 237 7 view .LVU192
 802              	.LBB678:
 803              	.LBB679:
 804              	.LBI679:
 229:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 805              		.loc 16 229 7 view .LVU193
 806              	.LBB680:
 807              	.LBI680:
 194:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 808              		.loc 16 194 7 view .LVU194
 809              	.LBB681:
 195:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 810              		.loc 16 195 28 is_stmt 0 view .LVU195
 811 0056 0898     		ldr	r0, [sp, #32]
 812              	.LVL39:
 195:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 813              		.loc 16 195 28 view .LVU196
 814              	.LBE681:
 815              	.LBE680:
 816              	.LBB682:
 817              	.LBI682:
 208:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
 818              		.loc 16 208 7 is_stmt 1 view .LVU197
 208:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
 819              		.loc 16 208 7 is_stmt 0 view .LVU198
 820              	.LBE682:
 821              	.LBE679:
 239:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 822              		.loc 16 239 2 view .LVU199
 823 0058 A842     		cmp	r0, r5
 824 005a 03D0     		beq	.L22
 825              	.LVL40:
 826              	.LBB683:
 827              	.LBI683:
 244:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 828              		.loc 16 244 7 is_stmt 1 view .LVU200
 829              	.LBB684:
 830              	.LBB685:
 831              	.LBI685:
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 61


 832              		.file 20 "/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h"
   1:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** // Allocator traits -*- C++ -*-
   2:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 
   3:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** // Copyright (C) 2011-2020 Free Software Foundation, Inc.
   4:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** //
   5:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** // software; you can redistribute it and/or modify it under the
   7:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** // terms of the GNU General Public License as published by the
   8:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** // any later version.
  10:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 
  11:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** // This library is distributed in the hope that it will be useful,
  12:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** // GNU General Public License for more details.
  15:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 
  16:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** // 3.1, as published by the Free Software Foundation.
  19:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 
  20:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** // You should have received a copy of the GNU General Public License and
  21:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** // <http://www.gnu.org/licenses/>.
  24:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 
  25:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** /** @file bits/alloc_traits.h
  26:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****  *  This is an internal header file, included by other library headers.
  27:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****  *  Do not attempt to use it directly. @headername{memory}
  28:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****  */
  29:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 
  30:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** #ifndef _ALLOC_TRAITS_H
  31:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** #define _ALLOC_TRAITS_H 1
  32:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 
  33:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** #include <bits/stl_construct.h>
  34:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** #include <bits/memoryfwd.h>
  35:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** #if __cplusplus >= 201103L
  36:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** # include <bits/allocator.h>
  37:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** # include <bits/ptr_traits.h>
  38:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** # include <ext/numeric_traits.h>
  39:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** #endif
  40:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 
  41:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** namespace std _GLIBCXX_VISIBILITY(default)
  42:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** {
  43:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  44:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 
  45:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** #if __cplusplus >= 201103L
  46:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** #define __cpp_lib_allocator_traits_is_always_equal 201411
  47:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 
  48:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****   struct __allocator_traits_base
  49:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****   {
  50:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****     template<typename _Tp, typename _Up, typename = void>
  51:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       struct __rebind : __replace_first_arg<_Tp, _Up> { };
  52:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 
  53:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****     template<typename _Tp, typename _Up>
  54:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       struct __rebind<_Tp, _Up,
  55:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 		      __void_t<typename _Tp::template rebind<_Up>::other>>
  56:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       { using type = typename _Tp::template rebind<_Up>::other; };
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 62


  57:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 
  58:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****   protected:
  59:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****     template<typename _Tp>
  60:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       using __pointer = typename _Tp::pointer;
  61:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****     template<typename _Tp>
  62:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       using __c_pointer = typename _Tp::const_pointer;
  63:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****     template<typename _Tp>
  64:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       using __v_pointer = typename _Tp::void_pointer;
  65:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****     template<typename _Tp>
  66:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       using __cv_pointer = typename _Tp::const_void_pointer;
  67:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****     template<typename _Tp>
  68:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       using __pocca = typename _Tp::propagate_on_container_copy_assignment;
  69:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****     template<typename _Tp>
  70:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       using __pocma = typename _Tp::propagate_on_container_move_assignment;
  71:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****     template<typename _Tp>
  72:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       using __pocs = typename _Tp::propagate_on_container_swap;
  73:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****     template<typename _Tp>
  74:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       using __equal = typename _Tp::is_always_equal;
  75:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****   };
  76:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 
  77:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****   template<typename _Alloc, typename _Up>
  78:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****     using __alloc_rebind
  79:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       = typename __allocator_traits_base::template __rebind<_Alloc, _Up>::type;
  80:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 
  81:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****   /**
  82:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****    * @brief  Uniform interface to all allocator types.
  83:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****    * @ingroup allocators
  84:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****   */
  85:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****   template<typename _Alloc>
  86:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****     struct allocator_traits : __allocator_traits_base
  87:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****     {
  88:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       /// The allocator type
  89:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       typedef _Alloc allocator_type;
  90:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       /// The allocated type
  91:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       typedef typename _Alloc::value_type value_type;
  92:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 
  93:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       /**
  94:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        * @brief   The allocator's pointer type.
  95:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        *
  96:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        * @c Alloc::pointer if that type exists, otherwise @c value_type*
  97:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       */
  98:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       using pointer = __detected_or_t<value_type*, __pointer, _Alloc>;
  99:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 
 100:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****     private:
 101:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       // Select _Func<_Alloc> or pointer_traits<pointer>::rebind<_Tp>
 102:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       template<template<typename> class _Func, typename _Tp, typename = void>
 103:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 	struct _Ptr
 104:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 	{
 105:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 	  using type = typename pointer_traits<pointer>::template rebind<_Tp>;
 106:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 	};
 107:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 
 108:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       template<template<typename> class _Func, typename _Tp>
 109:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 	struct _Ptr<_Func, _Tp, __void_t<_Func<_Alloc>>>
 110:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 	{
 111:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 	  using type = _Func<_Alloc>;
 112:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 	};
 113:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 63


 114:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       // Select _A2::difference_type or pointer_traits<_Ptr>::difference_type
 115:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       template<typename _A2, typename _PtrT, typename = void>
 116:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 	struct _Diff
 117:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 	{ using type = typename pointer_traits<_PtrT>::difference_type; };
 118:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 
 119:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       template<typename _A2, typename _PtrT>
 120:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 	struct _Diff<_A2, _PtrT, __void_t<typename _A2::difference_type>>
 121:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 	{ using type = typename _A2::difference_type; };
 122:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 
 123:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       // Select _A2::size_type or make_unsigned<_DiffT>::type
 124:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       template<typename _A2, typename _DiffT, typename = void>
 125:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 	struct _Size : make_unsigned<_DiffT> { };
 126:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 
 127:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       template<typename _A2, typename _DiffT>
 128:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 	struct _Size<_A2, _DiffT, __void_t<typename _A2::size_type>>
 129:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 	{ using type = typename _A2::size_type; };
 130:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 
 131:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****     public:
 132:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       /**
 133:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        * @brief   The allocator's const pointer type.
 134:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        *
 135:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        * @c Alloc::const_pointer if that type exists, otherwise
 136:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        * <tt> pointer_traits<pointer>::rebind<const value_type> </tt>
 137:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       */
 138:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       using const_pointer = typename _Ptr<__c_pointer, const value_type>::type;
 139:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 
 140:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       /**
 141:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        * @brief   The allocator's void pointer type.
 142:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        *
 143:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        * @c Alloc::void_pointer if that type exists, otherwise
 144:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        * <tt> pointer_traits<pointer>::rebind<void> </tt>
 145:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       */
 146:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       using void_pointer = typename _Ptr<__v_pointer, void>::type;
 147:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 
 148:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       /**
 149:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        * @brief   The allocator's const void pointer type.
 150:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        *
 151:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        * @c Alloc::const_void_pointer if that type exists, otherwise
 152:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        * <tt> pointer_traits<pointer>::rebind<const void> </tt>
 153:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       */
 154:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       using const_void_pointer = typename _Ptr<__cv_pointer, const void>::type;
 155:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 
 156:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       /**
 157:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        * @brief   The allocator's difference type
 158:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        *
 159:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        * @c Alloc::difference_type if that type exists, otherwise
 160:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        * <tt> pointer_traits<pointer>::difference_type </tt>
 161:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       */
 162:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       using difference_type = typename _Diff<_Alloc, pointer>::type;
 163:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 
 164:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       /**
 165:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        * @brief   The allocator's size type
 166:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        *
 167:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        * @c Alloc::size_type if that type exists, otherwise
 168:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        * <tt> make_unsigned<difference_type>::type </tt>
 169:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       */
 170:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       using size_type = typename _Size<_Alloc, difference_type>::type;
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 64


 171:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 
 172:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       /**
 173:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        * @brief   How the allocator is propagated on copy assignment
 174:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        *
 175:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        * @c Alloc::propagate_on_container_copy_assignment if that type exists,
 176:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        * otherwise @c false_type
 177:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       */
 178:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       using propagate_on_container_copy_assignment
 179:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 	= __detected_or_t<false_type, __pocca, _Alloc>;
 180:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 
 181:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       /**
 182:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        * @brief   How the allocator is propagated on move assignment
 183:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        *
 184:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        * @c Alloc::propagate_on_container_move_assignment if that type exists,
 185:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        * otherwise @c false_type
 186:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       */
 187:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       using propagate_on_container_move_assignment
 188:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 	= __detected_or_t<false_type, __pocma, _Alloc>;
 189:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 
 190:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       /**
 191:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        * @brief   How the allocator is propagated on swap
 192:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        *
 193:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        * @c Alloc::propagate_on_container_swap if that type exists,
 194:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        * otherwise @c false_type
 195:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       */
 196:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       using propagate_on_container_swap
 197:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 	= __detected_or_t<false_type, __pocs, _Alloc>;
 198:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 
 199:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       /**
 200:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        * @brief   Whether all instances of the allocator type compare equal.
 201:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        *
 202:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        * @c Alloc::is_always_equal if that type exists,
 203:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        * otherwise @c is_empty<Alloc>::type
 204:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       */
 205:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       using is_always_equal
 206:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 	= __detected_or_t<typename is_empty<_Alloc>::type, __equal, _Alloc>;
 207:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 
 208:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       template<typename _Tp>
 209:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 	using rebind_alloc = __alloc_rebind<_Alloc, _Tp>;
 210:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       template<typename _Tp>
 211:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 	using rebind_traits = allocator_traits<rebind_alloc<_Tp>>;
 212:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 
 213:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****     private:
 214:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       template<typename _Alloc2>
 215:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 	static constexpr auto
 216:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 	_S_allocate(_Alloc2& __a, size_type __n, const_void_pointer __hint, int)
 217:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 	-> decltype(__a.allocate(__n, __hint))
 218:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 	{ return __a.allocate(__n, __hint); }
 219:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 
 220:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       template<typename _Alloc2>
 221:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 	static constexpr pointer
 222:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 	_S_allocate(_Alloc2& __a, size_type __n, const_void_pointer, ...)
 223:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 	{ return __a.allocate(__n); }
 224:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 
 225:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       template<typename _Tp, typename... _Args>
 226:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 	struct __construct_helper
 227:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 	{
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 65


 228:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 	  template<typename _Alloc2,
 229:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 	    typename = decltype(std::declval<_Alloc2*>()->construct(
 230:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 		  std::declval<_Tp*>(), std::declval<_Args>()...))>
 231:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 	    static true_type __test(int);
 232:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 
 233:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 	  template<typename>
 234:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 	    static false_type __test(...);
 235:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 
 236:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 	  using type = decltype(__test<_Alloc>(0));
 237:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 	};
 238:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 
 239:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       template<typename _Tp, typename... _Args>
 240:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 	using __has_construct
 241:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 	  = typename __construct_helper<_Tp, _Args...>::type;
 242:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 
 243:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       template<typename _Tp, typename... _Args>
 244:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 	static _GLIBCXX14_CONSTEXPR _Require<__has_construct<_Tp, _Args...>>
 245:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 	_S_construct(_Alloc& __a, _Tp* __p, _Args&&... __args)
 246:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 	noexcept(noexcept(__a.construct(__p, std::forward<_Args>(__args)...)))
 247:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 248:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 
 249:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       template<typename _Tp, typename... _Args>
 250:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 	static _GLIBCXX14_CONSTEXPR
 251:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 	_Require<__and_<__not_<__has_construct<_Tp, _Args...>>,
 252:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 			       is_constructible<_Tp, _Args...>>>
 253:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 	_S_construct(_Alloc&, _Tp* __p, _Args&&... __args)
 254:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 	noexcept(std::is_nothrow_constructible<_Tp, _Args...>::value)
 255:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 	{
 256:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** #if __cplusplus <= 201703L
 257:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 	  ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
 258:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** #else
 259:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 	  std::construct_at(__p, std::forward<_Args>(__args)...);
 260:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** #endif
 261:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 	}
 262:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 
 263:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       template<typename _Alloc2, typename _Tp>
 264:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 	static _GLIBCXX14_CONSTEXPR auto
 265:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 	_S_destroy(_Alloc2& __a, _Tp* __p, int)
 266:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 	noexcept(noexcept(__a.destroy(__p)))
 267:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 	-> decltype(__a.destroy(__p))
 268:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 	{ __a.destroy(__p); }
 269:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 
 270:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       template<typename _Alloc2, typename _Tp>
 271:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 	static _GLIBCXX14_CONSTEXPR void
 272:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 	_S_destroy(_Alloc2&, _Tp* __p, ...)
 273:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 	noexcept(std::is_nothrow_destructible<_Tp>::value)
 274:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 	{ std::_Destroy(__p); }
 275:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 
 276:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       template<typename _Alloc2>
 277:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 	static constexpr auto
 278:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 	_S_max_size(_Alloc2& __a, int)
 279:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 	-> decltype(__a.max_size())
 280:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 	{ return __a.max_size(); }
 281:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 
 282:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       template<typename _Alloc2>
 283:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 	static constexpr size_type
 284:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 	_S_max_size(_Alloc2&, ...)
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 66


 285:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 	{
 286:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 	  // _GLIBCXX_RESOLVE_LIB_DEFECTS
 287:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 	  // 2466. allocator_traits::max_size() default behavior is incorrect
 288:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 	  return __gnu_cxx::__numeric_traits<size_type>::__max
 289:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 	    / sizeof(value_type);
 290:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 	}
 291:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 
 292:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       template<typename _Alloc2>
 293:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 	static constexpr auto
 294:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 	_S_select(_Alloc2& __a, int)
 295:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 	-> decltype(__a.select_on_container_copy_construction())
 296:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 	{ return __a.select_on_container_copy_construction(); }
 297:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 
 298:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       template<typename _Alloc2>
 299:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 	static constexpr _Alloc2
 300:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 	_S_select(_Alloc2& __a, ...)
 301:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 	{ return __a; }
 302:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 
 303:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****     public:
 304:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 
 305:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       /**
 306:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        *  @brief  Allocate memory.
 307:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 308:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 309:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        *
 310:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        *  Calls @c a.allocate(n)
 311:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       */
 312:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       _GLIBCXX_NODISCARD static _GLIBCXX20_CONSTEXPR pointer
 313:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       allocate(_Alloc& __a, size_type __n)
 314:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       { return __a.allocate(__n); }
 315:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 
 316:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       /**
 317:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        *  @brief  Allocate memory.
 318:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 319:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 320:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        *  @param  __hint Aid to locality.
 321:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        *  @return Memory of suitable size and alignment for @a n objects
 322:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        *          of type @c value_type
 323:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        *
 324:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        *  Returns <tt> a.allocate(n, hint) </tt> if that expression is
 325:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        *  well-formed, otherwise returns @c a.allocate(n)
 326:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       */
 327:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       _GLIBCXX_NODISCARD static _GLIBCXX20_CONSTEXPR pointer
 328:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       allocate(_Alloc& __a, size_type __n, const_void_pointer __hint)
 329:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       { return _S_allocate(__a, __n, __hint, 0); }
 330:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 
 331:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       /**
 332:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        *  @brief  Deallocate memory.
 333:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 334:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        *  @param  __p  Pointer to the memory to deallocate.
 335:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        *  @param  __n  The number of objects space was allocated for.
 336:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        *
 337:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        *  Calls <tt> a.deallocate(p, n) </tt>
 338:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       */
 339:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR void
 340:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       deallocate(_Alloc& __a, pointer __p, size_type __n)
 341:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 67


 342:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 
 343:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       /**
 344:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        *  @brief  Construct an object of type `_Tp`
 345:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 346:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        *  @param  __p  Pointer to memory of suitable size and alignment for Tp
 347:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        *  @param  __args Constructor arguments.
 348:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        *
 349:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        *  Calls <tt> __a.construct(__p, std::forward<Args>(__args)...) </tt>
 350:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        *  if that expression is well-formed, otherwise uses placement-new
 351:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        *  to construct an object of type @a _Tp at location @a __p from the
 352:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        *  arguments @a __args...
 353:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       */
 354:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       template<typename _Tp, typename... _Args>
 355:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 	static _GLIBCXX20_CONSTEXPR auto
 356:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 	construct(_Alloc& __a, _Tp* __p, _Args&&... __args)
 357:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 	noexcept(noexcept(_S_construct(__a, __p,
 358:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 				       std::forward<_Args>(__args)...)))
 359:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 	-> decltype(_S_construct(__a, __p, std::forward<_Args>(__args)...))
 360:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 	{ _S_construct(__a, __p, std::forward<_Args>(__args)...); }
 361:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 
 362:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       /**
 363:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        *  @brief  Destroy an object of type @a _Tp
 364:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 365:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        *  @param  __p  Pointer to the object to destroy
 366:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        *
 367:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        *  Calls @c __a.destroy(__p) if that expression is well-formed,
 368:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        *  otherwise calls @c __p->~_Tp()
 369:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       */
 370:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       template<typename _Tp>
 371:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 	static _GLIBCXX20_CONSTEXPR void
 372:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 	destroy(_Alloc& __a, _Tp* __p)
 373:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 	noexcept(noexcept(_S_destroy(__a, __p, 0)))
 374:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 	{ _S_destroy(__a, __p, 0); }
 375:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 
 376:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       /**
 377:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        *  @brief  The maximum supported allocation size
 378:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 379:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        *  @return @c __a.max_size() or @c numeric_limits<size_type>::max()
 380:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        *
 381:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        *  Returns @c __a.max_size() if that expression is well-formed,
 382:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        *  otherwise returns @c numeric_limits<size_type>::max()
 383:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       */
 384:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR size_type
 385:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       max_size(const _Alloc& __a) noexcept
 386:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       { return _S_max_size(__a, 0); }
 387:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 
 388:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       /**
 389:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        *  @brief  Obtain an allocator to use when copying a container.
 390:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        *  @param  __rhs  An allocator.
 391:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        *  @return @c __rhs.select_on_container_copy_construction() or @a __rhs
 392:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        *
 393:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        *  Returns @c __rhs.select_on_container_copy_construction() if that
 394:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        *  expression is well-formed, otherwise returns @a __rhs
 395:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       */
 396:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR _Alloc
 397:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       select_on_container_copy_construction(const _Alloc& __rhs)
 398:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       { return _S_select(__rhs, 0); }
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 68


 399:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****     };
 400:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 
 401:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** #if __cplusplus > 201703L
 402:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** # define __cpp_lib_constexpr_dynamic_alloc 201907L
 403:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** #endif
 404:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 
 405:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****   /// Partial specialization for std::allocator.
 406:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****   template<typename _Tp>
 407:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****     struct allocator_traits<allocator<_Tp>>
 408:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****     {
 409:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       /// The allocator type
 410:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       using allocator_type = allocator<_Tp>;
 411:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 
 412:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       /// The allocated type
 413:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       using value_type = _Tp;
 414:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 
 415:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       /// The allocator's pointer type.
 416:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       using pointer = _Tp*;
 417:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 
 418:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       /// The allocator's const pointer type.
 419:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       using const_pointer = const _Tp*;
 420:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 
 421:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       /// The allocator's void pointer type.
 422:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       using void_pointer = void*;
 423:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 
 424:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       /// The allocator's const void pointer type.
 425:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       using const_void_pointer = const void*;
 426:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 
 427:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       /// The allocator's difference type
 428:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       using difference_type = std::ptrdiff_t;
 429:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 
 430:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       /// The allocator's size type
 431:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       using size_type = std::size_t;
 432:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 
 433:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       /// How the allocator is propagated on copy assignment
 434:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       using propagate_on_container_copy_assignment = false_type;
 435:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 
 436:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       /// How the allocator is propagated on move assignment
 437:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       using propagate_on_container_move_assignment = true_type;
 438:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 
 439:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       /// How the allocator is propagated on swap
 440:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       using propagate_on_container_swap = false_type;
 441:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 
 442:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       /// Whether all instances of the allocator type compare equal.
 443:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       using is_always_equal = true_type;
 444:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 
 445:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       template<typename _Up>
 446:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 	using rebind_alloc = allocator<_Up>;
 447:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 
 448:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       template<typename _Up>
 449:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 	using rebind_traits = allocator_traits<allocator<_Up>>;
 450:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 
 451:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       /**
 452:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        *  @brief  Allocate memory.
 453:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 454:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 455:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        *
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 69


 456:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        *  Calls @c a.allocate(n)
 457:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       */
 458:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       _GLIBCXX_NODISCARD static _GLIBCXX20_CONSTEXPR pointer
 459:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       allocate(allocator_type& __a, size_type __n)
 460:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       { return __a.allocate(__n); }
 461:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 
 462:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       /**
 463:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        *  @brief  Allocate memory.
 464:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 465:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 466:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        *  @param  __hint Aid to locality.
 467:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        *  @return Memory of suitable size and alignment for @a n objects
 468:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        *          of type @c value_type
 469:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        *
 470:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        *  Returns <tt> a.allocate(n, hint) </tt>
 471:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       */
 472:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       _GLIBCXX_NODISCARD static _GLIBCXX20_CONSTEXPR pointer
 473:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       allocate(allocator_type& __a, size_type __n, const_void_pointer __hint)
 474:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       {
 475:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** #if __cplusplus <= 201703L
 476:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 	return __a.allocate(__n, __hint);
 477:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** #else
 478:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 	return __a.allocate(__n);
 479:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** #endif
 480:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       }
 481:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h **** 
 482:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       /**
 483:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        *  @brief  Deallocate memory.
 484:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 485:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        *  @param  __p  Pointer to the memory to deallocate.
 486:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        *  @param  __n  The number of objects space was allocated for.
 487:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        *
 488:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****        *  Calls <tt> a.deallocate(p, n) </tt>
 489:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       */
 490:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR void
 491:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h ****       deallocate(allocator_type& __a, pointer __p, size_type __n)
 833              		.loc 20 491 7 view .LVU201
 834              	.LBB686:
 835              	.LBI686:
  90:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 
  91:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h ****       pointer
  92:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h ****       address(reference __x) const _GLIBCXX_NOEXCEPT
  93:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h ****       { return std::__addressof(__x); }
  94:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 
  95:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h ****       const_pointer
  96:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h ****       address(const_reference __x) const _GLIBCXX_NOEXCEPT
  97:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h ****       { return std::__addressof(__x); }
  98:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** #endif
  99:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 
 100:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h ****       // NB: __n is permitted to be 0.  The C++ standard says nothing
 101:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h ****       // about what the return value is when __n == 0.
 102:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h ****       _GLIBCXX_NODISCARD _Tp*
 103:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h ****       allocate(size_type __n, const void* = static_cast<const void*>(0))
 104:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h ****       {
 105:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** #if __cplusplus >= 201103L
 106:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 	 // _GLIBCXX_RESOLVE_LIB_DEFECTS
 107:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 	 // 3308. std::allocator<void>().allocate(n)
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 70


 108:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 	 static_assert(sizeof(_Tp) != 0, "cannot allocate incomplete types");
 109:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** #endif
 110:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 
 111:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 	if (__n > this->_M_max_size())
 112:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 	  std::__throw_bad_alloc();
 113:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 
 114:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** #if __cpp_aligned_new
 115:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
 116:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 	  {
 117:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
 118:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
 119:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 	  }
 120:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** #endif
 121:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 122:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h ****       }
 123:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 
 124:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h ****       // __p is not permitted to be a null pointer.
 125:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h ****       void
 126:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h ****       deallocate(_Tp* __p, size_type __t)
 836              		.loc 15 126 7 view .LVU202
 837              	.LBE686:
 838              	.LBE685:
 245:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 839              		.loc 16 245 34 is_stmt 0 view .LVU203
 840 005c 0A99     		ldr	r1, [sp, #40]
 841              	.LBB689:
 842              	.LBB688:
 843              	.LBB687:
 127:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h ****       {
 128:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** #if __cpp_aligned_new
 129:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
 130:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 	  {
 131:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 	    ::operator delete(__p,
 132:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** # if __cpp_sized_deallocation
 133:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 			      __t * sizeof(_Tp),
 134:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** # endif
 135:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 			      std::align_val_t(alignof(_Tp)));
 136:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 	    return;
 137:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 	  }
 138:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** #endif
 139:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 	::operator delete(__p
 844              		.loc 15 139 19 view .LVU204
 845 005e 0131     		adds	r1, r1, #1
 846              	.LVL41:
 847              		.loc 15 139 19 view .LVU205
 848 0060 FFF7FEFF 		bl	_ZdlPvj
 849              	.LVL42:
 850              		.loc 15 139 19 view .LVU206
 851              	.LBE687:
 852              	.LBE688:
 853              	.LBE689:
 854              	.LBE684:
 855              	.LBE683:
 856              	.LBE678:
 857              	.LBE677:
 858              	.LBB690:
 859              	.LBI690:
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 71


 158:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
 860              		.loc 16 158 14 is_stmt 1 view .LVU207
 861              	.LBB691:
 862              	.LBI691:
 863              		.loc 14 182 7 view .LVU208
 864              	.LBB692:
 865              	.LBI692:
  89:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 
 866              		.loc 15 89 7 view .LVU209
 867              	.L22:
  89:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 
 868              		.loc 15 89 7 is_stmt 0 view .LVU210
 869              	.LBE692:
 870              	.LBE691:
 871              	.LBE690:
 872              	.LBE676:
 873              	.LBE675:
 172:granular.cpp  **** 
 874              		.loc 13 172 1 view .LVU211
 875 0064 61B0     		add	sp, sp, #388
 876              		.cfi_remember_state
 877              		.cfi_def_cfa_offset 20
 878              		@ sp needed
 879 0066 F0BD     		pop	{r4, r5, r6, r7, pc}
 880              	.LVL43:
 881              	.L49:
 882              		.cfi_restore_state
 883              	.LBB693:
 884              	.LBB627:
 101:granular.cpp  ****         do
 885              		.loc 13 101 9 is_stmt 1 view .LVU212
 886              	.LBB628:
 887              	.LBI628:
 671:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { _M_dispose(); }
 672:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 673:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
 674:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @brief  Assign the value of @a str to this string.
 675:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param  __str  Source string.
 676:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
 677:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       basic_string&
 678:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       operator=(const basic_string& __str)
 679:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
 680:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	return this->assign(__str);
 681:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       }
 682:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 683:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
 684:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @brief  Copy contents of @a s into this string.
 685:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param  __s  Source null-terminated string.
 686:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
 687:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       basic_string&
 688:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       operator=(const _CharT* __s)
 888              		.loc 16 688 7 view .LVU213
 889              	.LBB629:
 890              	.LBI629:
 689:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { return this->assign(__s); }
 690:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 691:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 72


 692:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @brief  Set value to string of length 1.
 693:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param  __c  Source character.
 694:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *
 695:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  Assigning to a character makes this string length 1 and
 696:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  (*this)[0] == @a c.
 697:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
 698:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       basic_string&
 699:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       operator=(_CharT __c)
 700:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
 701:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	this->assign(1, __c);
 702:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	return *this;
 703:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       }
 704:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 705:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #if __cplusplus >= 201103L
 706:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
 707:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @brief  Move assign the value of @a str to this string.
 708:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param  __str  Source string.
 709:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *
 710:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  The contents of @a str are moved into this string (without copying).
 711:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @a str is a valid, but unspecified string.
 712:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        **/
 713:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 714:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       // 2063. Contradictory requirements for string move assignment
 715:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       basic_string&
 716:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       operator=(basic_string&& __str)
 717:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       noexcept(_Alloc_traits::_S_nothrow_move())
 718:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
 719:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	if (!_M_is_local() && _Alloc_traits::_S_propagate_on_move_assign()
 720:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	    && !_Alloc_traits::_S_always_equal()
 721:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	    && _M_get_allocator() != __str._M_get_allocator())
 722:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	  {
 723:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	    // Destroy existing storage before replacing allocator.
 724:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	    _M_destroy(_M_allocated_capacity);
 725:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	    _M_data(_M_local_data());
 726:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	    _M_set_length(0);
 727:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	  }
 728:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	// Replace allocator if POCMA is true.
 729:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	std::__alloc_on_move(_M_get_allocator(), __str._M_get_allocator());
 730:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 731:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	if (__str._M_is_local())
 732:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	  {
 733:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	    // We've always got room for a short string, just copy it.
 734:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	    if (__str.size())
 735:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	      this->_S_copy(_M_data(), __str._M_data(), __str.size());
 736:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	    _M_set_length(__str.size());
 737:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	  }
 738:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	else if (_Alloc_traits::_S_propagate_on_move_assign()
 739:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	    || _Alloc_traits::_S_always_equal()
 740:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	    || _M_get_allocator() == __str._M_get_allocator())
 741:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	  {
 742:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	    // Just move the allocated pointer, our allocator can free it.
 743:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	    pointer __data = nullptr;
 744:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	    size_type __capacity;
 745:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	    if (!_M_is_local())
 746:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	      {
 747:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 		if (_Alloc_traits::_S_always_equal())
 748:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 		  {
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 73


 749:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 		    // __str can reuse our existing storage.
 750:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 		    __data = _M_data();
 751:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 		    __capacity = _M_allocated_capacity;
 752:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 		  }
 753:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 		else // __str can't use it, so free it.
 754:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 		  _M_destroy(_M_allocated_capacity);
 755:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	      }
 756:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 757:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	    _M_data(__str._M_data());
 758:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	    _M_length(__str.length());
 759:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	    _M_capacity(__str._M_allocated_capacity);
 760:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	    if (__data)
 761:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	      {
 762:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 		__str._M_data(__data);
 763:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 		__str._M_capacity(__capacity);
 764:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	      }
 765:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	    else
 766:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	      __str._M_data(__str._M_local_buf);
 767:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	  }
 768:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	else // Need to do a deep copy
 769:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	  assign(__str);
 770:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	__str.clear();
 771:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	return *this;
 772:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       }
 773:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 774:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
 775:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @brief  Set value to string constructed from initializer %list.
 776:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param  __l  std::initializer_list.
 777:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
 778:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       basic_string&
 779:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       operator=(initializer_list<_CharT> __l)
 780:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
 781:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	this->assign(__l.begin(), __l.size());
 782:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	return *this;
 783:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       }
 784:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #endif // C++11
 785:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 786:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #if __cplusplus >= 201703L
 787:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
 788:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @brief  Set value to string constructed from a string_view.
 789:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param  __svt  An object convertible to string_view.
 790:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
 791:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****      template<typename _Tp>
 792:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        _If_sv<_Tp, basic_string&>
 793:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        operator=(const _Tp& __svt)
 794:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        { return this->assign(__svt); }
 795:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 796:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
 797:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @brief  Convert to a string_view.
 798:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @return A string_view.
 799:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
 800:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       operator __sv_type() const noexcept
 801:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { return __sv_type(data(), size()); }
 802:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #endif // C++17
 803:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 804:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       // Iterators:
 805:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 74


 806:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  Returns a read/write iterator that points to the first character in
 807:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  the %string.
 808:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
 809:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       iterator
 810:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       begin() _GLIBCXX_NOEXCEPT
 811:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { return iterator(_M_data()); }
 812:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 813:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
 814:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
 815:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  character in the %string.
 816:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
 817:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       const_iterator
 818:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       begin() const _GLIBCXX_NOEXCEPT
 819:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { return const_iterator(_M_data()); }
 820:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 821:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
 822:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  Returns a read/write iterator that points one past the last
 823:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  character in the %string.
 824:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
 825:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       iterator
 826:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       end() _GLIBCXX_NOEXCEPT
 827:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { return iterator(_M_data() + this->size()); }
 828:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 829:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
 830:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
 831:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  last character in the %string.
 832:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
 833:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       const_iterator
 834:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       end() const _GLIBCXX_NOEXCEPT
 835:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { return const_iterator(_M_data() + this->size()); }
 836:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 837:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
 838:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  Returns a read/write reverse iterator that points to the last
 839:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  character in the %string.  Iteration is done in reverse element
 840:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  order.
 841:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
 842:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       reverse_iterator
 843:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       rbegin() _GLIBCXX_NOEXCEPT
 844:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { return reverse_iterator(this->end()); }
 845:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 846:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
 847:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 848:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  to the last character in the %string.  Iteration is done in
 849:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  reverse element order.
 850:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
 851:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       const_reverse_iterator
 852:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       rbegin() const _GLIBCXX_NOEXCEPT
 853:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { return const_reverse_iterator(this->end()); }
 854:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 855:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
 856:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  Returns a read/write reverse iterator that points to one before the
 857:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  first character in the %string.  Iteration is done in reverse
 858:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  element order.
 859:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
 860:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       reverse_iterator
 861:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       rend() _GLIBCXX_NOEXCEPT
 862:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { return reverse_iterator(this->begin()); }
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 75


 863:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 864:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
 865:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 866:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  to one before the first character in the %string.  Iteration
 867:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  is done in reverse element order.
 868:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
 869:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       const_reverse_iterator
 870:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       rend() const _GLIBCXX_NOEXCEPT
 871:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { return const_reverse_iterator(this->begin()); }
 872:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 873:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #if __cplusplus >= 201103L
 874:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
 875:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
 876:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  character in the %string.
 877:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
 878:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       const_iterator
 879:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       cbegin() const noexcept
 880:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { return const_iterator(this->_M_data()); }
 881:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 882:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
 883:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
 884:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  last character in the %string.
 885:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
 886:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       const_iterator
 887:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       cend() const noexcept
 888:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { return const_iterator(this->_M_data() + this->size()); }
 889:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 890:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
 891:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 892:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  to the last character in the %string.  Iteration is done in
 893:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  reverse element order.
 894:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
 895:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       const_reverse_iterator
 896:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       crbegin() const noexcept
 897:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { return const_reverse_iterator(this->end()); }
 898:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 899:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
 900:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 901:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  to one before the first character in the %string.  Iteration
 902:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  is done in reverse element order.
 903:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
 904:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       const_reverse_iterator
 905:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       crend() const noexcept
 906:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { return const_reverse_iterator(this->begin()); }
 907:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #endif
 908:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 909:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****     public:
 910:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       // Capacity:
 911:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       ///  Returns the number of characters in the string, not including any
 912:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       ///  null-termination.
 913:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       size_type
 914:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       size() const _GLIBCXX_NOEXCEPT
 915:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { return _M_string_length; }
 916:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 917:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       ///  Returns the number of characters in the string, not including any
 918:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       ///  null-termination.
 919:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       size_type
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 76


 920:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       length() const _GLIBCXX_NOEXCEPT
 921:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { return _M_string_length; }
 922:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 923:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       ///  Returns the size() of the largest possible %string.
 924:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       size_type
 925:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       max_size() const _GLIBCXX_NOEXCEPT
 926:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { return (_Alloc_traits::max_size(_M_get_allocator()) - 1) / 2; }
 927:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 928:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
 929:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
 930:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
 931:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param  __c  Character to fill any new elements.
 932:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *
 933:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  This function will %resize the %string to the specified
 934:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  number of characters.  If the number is smaller than the
 935:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  %string's current size the %string is truncated, otherwise
 936:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  the %string is extended and new elements are %set to @a __c.
 937:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
 938:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       void
 939:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       resize(size_type __n, _CharT __c);
 940:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 941:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
 942:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
 943:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
 944:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *
 945:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  This function will resize the %string to the specified length.  If
 946:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  the new size is smaller than the %string's current size the %string
 947:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  is truncated, otherwise the %string is extended and new characters
 948:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  are default-constructed.  For basic types such as char, this means
 949:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  setting them to 0.
 950:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
 951:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       void
 952:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       resize(size_type __n)
 953:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { this->resize(__n, _CharT()); }
 954:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 955:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #if __cplusplus >= 201103L
 956:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       ///  A non-binding request to reduce capacity() to size().
 957:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       void
 958:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       shrink_to_fit() noexcept
 959:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
 960:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #if __cpp_exceptions
 961:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	if (capacity() > size())
 962:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	  {
 963:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	    try
 964:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	      { reserve(0); }
 965:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	    catch(...)
 966:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	      { }
 967:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	  }
 968:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #endif
 969:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       }
 970:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #endif
 971:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 972:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
 973:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  Returns the total number of characters that the %string can hold
 974:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  before needing to allocate more memory.
 975:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
 976:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       size_type
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 77


 977:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       capacity() const _GLIBCXX_NOEXCEPT
 978:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
 979:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	return _M_is_local() ? size_type(_S_local_capacity)
 980:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	                     : _M_allocated_capacity;
 981:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       }
 982:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 983:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
 984:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @brief  Attempt to preallocate enough memory for specified number of
 985:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *          characters.
 986:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param  __res_arg  Number of characters required.
 987:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @throw  std::length_error  If @a __res_arg exceeds @c max_size().
 988:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *
 989:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  This function attempts to reserve enough memory for the
 990:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  %string to hold the specified number of characters.  If the
 991:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  number requested is more than max_size(), length_error is
 992:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  thrown.
 993:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *
 994:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  The advantage of this function is that if optimal code is a
 995:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  necessity and the user can determine the string length that will be
 996:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  required, the user can reserve the memory in %advance, and thus
 997:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  prevent a possible reallocation of memory and copying of %string
 998:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  data.
 999:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
1000:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       void
1001:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       reserve(size_type __res_arg = 0);
1002:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
1003:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
1004:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  Erases the string, making it empty.
1005:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
1006:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       void
1007:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       clear() _GLIBCXX_NOEXCEPT
1008:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { _M_set_length(0); }
1009:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
1010:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
1011:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  Returns true if the %string is empty.  Equivalent to 
1012:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  <code>*this == ""</code>.
1013:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
1014:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       _GLIBCXX_NODISCARD bool
1015:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       empty() const _GLIBCXX_NOEXCEPT
1016:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { return this->size() == 0; }
1017:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
1018:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       // Element access:
1019:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
1020:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
1021:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param  __pos  The index of the character to access.
1022:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @return  Read-only (constant) reference to the character.
1023:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *
1024:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  This operator allows for easy, array-style, data access.
1025:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  Note that data access with this operator is unchecked and
1026:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
1027:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  see at().)
1028:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
1029:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       const_reference
1030:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       operator[] (size_type __pos) const _GLIBCXX_NOEXCEPT
1031:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
1032:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	__glibcxx_assert(__pos <= size());
1033:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	return _M_data()[__pos];
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 78


1034:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       }
1035:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
1036:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
1037:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
1038:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param  __pos  The index of the character to access.
1039:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @return  Read/write reference to the character.
1040:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *
1041:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  This operator allows for easy, array-style, data access.
1042:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  Note that data access with this operator is unchecked and
1043:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
1044:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  see at().)
1045:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
1046:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       reference
1047:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       operator[](size_type __pos)
1048:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
1049:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****         // Allow pos == size() both in C++98 mode, as v3 extension,
1050:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	// and in C++11 mode.
1051:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	__glibcxx_assert(__pos <= size());
1052:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****         // In pedantic mode be strict in C++98 mode.
1053:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__cplusplus >= 201103L || __pos < size());
1054:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	return _M_data()[__pos];
1055:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       }
1056:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
1057:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
1058:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
1059:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param __n The index of the character to access.
1060:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @return  Read-only (const) reference to the character.
1061:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
1062:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *
1063:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  This function provides for safer data access.  The parameter is
1064:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  first checked that it is in the range of the string.  The function
1065:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  throws out_of_range if the check fails.
1066:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
1067:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       const_reference
1068:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       at(size_type __n) const
1069:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
1070:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	if (__n >= this->size())
1071:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
1072:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 				       "(which is %zu) >= this->size() "
1073:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 				       "(which is %zu)"),
1074:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 				   __n, this->size());
1075:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	return _M_data()[__n];
1076:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       }
1077:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
1078:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
1079:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
1080:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param __n The index of the character to access.
1081:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @return  Read/write reference to the character.
1082:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
1083:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *
1084:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  This function provides for safer data access.  The parameter is
1085:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  first checked that it is in the range of the string.  The function
1086:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  throws out_of_range if the check fails.
1087:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
1088:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       reference
1089:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       at(size_type __n)
1090:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 79


1091:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	if (__n >= size())
1092:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
1093:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 				       "(which is %zu) >= this->size() "
1094:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 				       "(which is %zu)"),
1095:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 				   __n, this->size());
1096:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	return _M_data()[__n];
1097:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       }
1098:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
1099:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #if __cplusplus >= 201103L
1100:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
1101:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  Returns a read/write reference to the data at the first
1102:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  element of the %string.
1103:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
1104:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       reference
1105:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       front() noexcept
1106:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
1107:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	__glibcxx_assert(!empty());
1108:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	return operator[](0);
1109:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       }
1110:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
1111:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
1112:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  Returns a read-only (constant) reference to the data at the first
1113:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  element of the %string.
1114:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
1115:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       const_reference
1116:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       front() const noexcept
1117:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
1118:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	__glibcxx_assert(!empty());
1119:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	return operator[](0);
1120:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       }
1121:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
1122:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
1123:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  Returns a read/write reference to the data at the last
1124:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  element of the %string.
1125:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
1126:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       reference
1127:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       back() noexcept
1128:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
1129:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	__glibcxx_assert(!empty());
1130:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	return operator[](this->size() - 1);
1131:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       }
1132:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
1133:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
1134:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  Returns a read-only (constant) reference to the data at the
1135:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  last element of the %string.
1136:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
1137:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       const_reference
1138:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       back() const noexcept
1139:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
1140:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	__glibcxx_assert(!empty());
1141:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	return operator[](this->size() - 1);
1142:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       }
1143:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #endif
1144:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
1145:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       // Modifiers:
1146:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
1147:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @brief  Append a string to this string.
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 80


1148:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param __str  The string to append.
1149:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1150:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
1151:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       basic_string&
1152:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       operator+=(const basic_string& __str)
1153:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { return this->append(__str); }
1154:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
1155:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
1156:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @brief  Append a C string.
1157:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param __s  The C string to append.
1158:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1159:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
1160:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       basic_string&
1161:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       operator+=(const _CharT* __s)
1162:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { return this->append(__s); }
1163:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
1164:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
1165:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @brief  Append a character.
1166:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param __c  The character to append.
1167:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1168:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
1169:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       basic_string&
1170:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       operator+=(_CharT __c)
1171:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
1172:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	this->push_back(__c);
1173:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	return *this;
1174:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       }
1175:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
1176:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #if __cplusplus >= 201103L
1177:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
1178:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @brief  Append an initializer_list of characters.
1179:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to be appended.
1180:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1181:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
1182:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       basic_string&
1183:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       operator+=(initializer_list<_CharT> __l)
1184:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
1185:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #endif // C++11
1186:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
1187:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #if __cplusplus >= 201703L
1188:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
1189:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @brief  Append a string_view.
1190:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view to be appended.
1191:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1192:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
1193:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       template<typename _Tp>
1194:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
1195:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	operator+=(const _Tp& __svt)
1196:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	{ return this->append(__svt); }
1197:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #endif // C++17
1198:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
1199:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
1200:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @brief  Append a string to this string.
1201:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param __str  The string to append.
1202:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1203:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
1204:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       basic_string&
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 81


1205:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       append(const basic_string& __str)
1206:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { return _M_append(__str._M_data(), __str.size()); }
1207:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
1208:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
1209:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @brief  Append a substring.
1210:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param __str  The string to append.
1211:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param __pos  Index of the first character of str to append.
1212:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param __n  The number of characters to append.
1213:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1214:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @throw  std::out_of_range if @a __pos is not a valid index.
1215:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *
1216:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  This function appends @a __n characters from @a __str
1217:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  starting at @a __pos to this string.  If @a __n is is larger
1218:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  than the number of available characters in @a __str, the
1219:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  remainder of @a __str is appended.
1220:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
1221:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       basic_string&
1222:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       append(const basic_string& __str, size_type __pos, size_type __n = npos)
1223:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { return _M_append(__str._M_data()
1224:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 			 + __str._M_check(__pos, "basic_string::append"),
1225:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 			 __str._M_limit(__pos, __n)); }
1226:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
1227:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
1228:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @brief  Append a C substring.
1229:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param __s  The C string to append.
1230:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param __n  The number of characters to append.
1231:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1232:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
1233:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       basic_string&
1234:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       append(const _CharT* __s, size_type __n)
1235:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
1236:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	__glibcxx_requires_string_len(__s, __n);
1237:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	_M_check_length(size_type(0), __n, "basic_string::append");
1238:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	return _M_append(__s, __n);
1239:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       }
1240:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
1241:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
1242:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @brief  Append a C string.
1243:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param __s  The C string to append.
1244:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1245:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
1246:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       basic_string&
1247:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       append(const _CharT* __s)
1248:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
1249:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1250:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	const size_type __n = traits_type::length(__s);
1251:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	_M_check_length(size_type(0), __n, "basic_string::append");
1252:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	return _M_append(__s, __n);
1253:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       }
1254:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
1255:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
1256:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @brief  Append multiple characters.
1257:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param __n  The number of characters to append.
1258:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param __c  The character to use.
1259:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1260:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *
1261:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  Appends __n copies of __c to this string.
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 82


1262:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
1263:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       basic_string&
1264:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       append(size_type __n, _CharT __c)
1265:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { return _M_replace_aux(this->size(), size_type(0), __n, __c); }
1266:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
1267:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #if __cplusplus >= 201103L
1268:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
1269:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @brief  Append an initializer_list of characters.
1270:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to append.
1271:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1272:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
1273:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       basic_string&
1274:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       append(initializer_list<_CharT> __l)
1275:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
1276:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #endif // C++11
1277:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
1278:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
1279:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @brief  Append a range of characters.
1280:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
1281:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param __last  Iterator marking the end of the range.
1282:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1283:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *
1284:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  Appends characters in the range [__first,__last) to this string.
1285:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
1286:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #if __cplusplus >= 201103L
1287:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       template<class _InputIterator,
1288:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1289:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #else
1290:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       template<class _InputIterator>
1291:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #endif
1292:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****         basic_string&
1293:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****         append(_InputIterator __first, _InputIterator __last)
1294:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****         { return this->replace(end(), end(), __first, __last); }
1295:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
1296:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #if __cplusplus >= 201703L
1297:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
1298:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @brief  Append a string_view.
1299:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view to be appended.
1300:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1301:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
1302:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       template<typename _Tp>
1303:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****         _If_sv<_Tp, basic_string&>
1304:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****         append(const _Tp& __svt)
1305:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****         {
1306:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****           __sv_type __sv = __svt;
1307:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****           return this->append(__sv.data(), __sv.size());
1308:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****         }
1309:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
1310:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
1311:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @brief  Append a range of characters from a string_view.
1312:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view to be appended from.
1313:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param __pos The position in the string_view to append from.
1314:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param __n   The number of characters to append from the string_view.
1315:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1316:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
1317:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       template<typename _Tp>
1318:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****         _If_sv<_Tp, basic_string&>
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 83


1319:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	append(const _Tp& __svt, size_type __pos, size_type __n = npos)
1320:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	{
1321:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
1322:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	  return _M_append(__sv.data()
1323:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos, "basic_string::append"),
1324:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos, __n));
1325:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	}
1326:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #endif // C++17
1327:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
1328:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
1329:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @brief  Append a single character.
1330:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param __c  Character to append.
1331:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
1332:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       void
1333:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       push_back(_CharT __c)
1334:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
1335:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	const size_type __size = this->size();
1336:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	if (__size + 1 > this->capacity())
1337:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	  this->_M_mutate(__size, size_type(0), 0, size_type(1));
1338:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	traits_type::assign(this->_M_data()[__size], __c);
1339:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	this->_M_set_length(__size + 1);
1340:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       }
1341:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
1342:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
1343:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @brief  Set value to contents of another string.
1344:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param  __str  Source string to use.
1345:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1346:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
1347:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       basic_string&
1348:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       assign(const basic_string& __str)
1349:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
1350:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #if __cplusplus >= 201103L
1351:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	if (_Alloc_traits::_S_propagate_on_copy_assign())
1352:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	  {
1353:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	    if (!_Alloc_traits::_S_always_equal() && !_M_is_local()
1354:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 		&& _M_get_allocator() != __str._M_get_allocator())
1355:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	      {
1356:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 		// Propagating allocator cannot free existing storage so must
1357:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 		// deallocate it before replacing current allocator.
1358:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 		if (__str.size() <= _S_local_capacity)
1359:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 		  {
1360:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 		    _M_destroy(_M_allocated_capacity);
1361:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 		    _M_data(_M_local_data());
1362:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 		    _M_set_length(0);
1363:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 		  }
1364:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 		else
1365:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 		  {
1366:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 		    const auto __len = __str.size();
1367:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 		    auto __alloc = __str._M_get_allocator();
1368:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 		    // If this allocation throws there are no effects:
1369:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 		    auto __ptr = _Alloc_traits::allocate(__alloc, __len + 1);
1370:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 		    _M_destroy(_M_allocated_capacity);
1371:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 		    _M_data(__ptr);
1372:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 		    _M_capacity(__len);
1373:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 		    _M_set_length(__len);
1374:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 		  }
1375:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	      }
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 84


1376:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	    std::__alloc_on_copy(_M_get_allocator(), __str._M_get_allocator());
1377:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	  }
1378:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #endif
1379:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	this->_M_assign(__str);
1380:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	return *this;
1381:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       }
1382:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
1383:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #if __cplusplus >= 201103L
1384:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
1385:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @brief  Set value to contents of another string.
1386:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param  __str  Source string to use.
1387:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1388:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *
1389:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  This function sets this string to the exact contents of @a __str.
1390:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @a __str is a valid, but unspecified string.
1391:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
1392:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       basic_string&
1393:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       assign(basic_string&& __str)
1394:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       noexcept(_Alloc_traits::_S_nothrow_move())
1395:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
1396:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
1397:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	// 2063. Contradictory requirements for string move assignment
1398:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	return *this = std::move(__str);
1399:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       }
1400:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #endif // C++11
1401:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
1402:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
1403:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @brief  Set value to a substring of a string.
1404:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param __str  The string to use.
1405:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param __pos  Index of the first character of str.
1406:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param __n  Number of characters to use.
1407:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1408:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @throw  std::out_of_range if @a pos is not a valid index.
1409:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *
1410:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  This function sets this string to the substring of @a __str
1411:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  consisting of @a __n characters at @a __pos.  If @a __n is
1412:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  is larger than the number of available characters in @a
1413:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  __str, the remainder of @a __str is used.
1414:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
1415:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       basic_string&
1416:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       assign(const basic_string& __str, size_type __pos, size_type __n = npos)
1417:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { return _M_replace(size_type(0), this->size(), __str._M_data()
1418:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 			  + __str._M_check(__pos, "basic_string::assign"),
1419:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 			  __str._M_limit(__pos, __n)); }
1420:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
1421:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
1422:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @brief  Set value to a C substring.
1423:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param __s  The C string to use.
1424:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param __n  Number of characters to use.
1425:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1426:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *
1427:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  This function sets the value of this string to the first @a __n
1428:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  characters of @a __s.  If @a __n is is larger than the number of
1429:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  available characters in @a __s, the remainder of @a __s is used.
1430:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
1431:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       basic_string&
1432:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       assign(const _CharT* __s, size_type __n)
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 85


1433:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
1434:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	__glibcxx_requires_string_len(__s, __n);
1435:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	return _M_replace(size_type(0), this->size(), __s, __n);
1436:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       }
1437:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
1438:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
1439:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @brief  Set value to contents of a C string.
1440:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param __s  The C string to use.
1441:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1442:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *
1443:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  This function sets the value of this string to the value of @a __s.
1444:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  The data is copied, so there is no dependence on @a __s once the
1445:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  function returns.
1446:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
1447:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       basic_string&
1448:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       assign(const _CharT* __s)
 891              		.loc 16 1448 7 view .LVU214
 892              	.LBB630:
 893              	.LBB631:
 894              	.LBI631:
 914:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { return _M_string_length; }
 895              		.loc 16 914 7 view .LVU215
 914:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { return _M_string_length; }
 896              		.loc 16 914 7 is_stmt 0 view .LVU216
 897              	.LBE631:
 898              	.LBE630:
 899              	.LBE629:
 900              	.LBE628:
 901              	.LBE627:
 902              	.LBE693:
 371:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       }
 903              		.loc 18 371 2 is_stmt 1 view .LVU217
 904              	.LBB694:
 905              	.LBB671:
 906              	.LBB636:
 907              	.LBB634:
 908              	.LBB632:
1449:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
1450:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1451:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	return _M_replace(size_type(0), this->size(), __s,
 909              		.loc 16 1451 19 is_stmt 0 view .LVU218
 910 0068 0C23     		movs	r3, #12
 911              	.LBE632:
 912              	.LBE634:
 913              	.LBE636:
 914              	.LBE671:
 915              	.LBE694:
  90:granular.cpp  ****     FRESULT result = FR_OK;
 916              		.loc 13 90 9 view .LVU219
 917 006a 0646     		mov	r6, r0
 918              	.LBB695:
 919              	.LBB672:
 920              	.LBB637:
 921              	.LBB635:
 922              	.LBB633:
 923              		.loc 16 1451 19 view .LVU220
 924 006c 0146     		mov	r1, r0
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 86


 925 006e 099A     		ldr	r2, [sp, #36]
 926 0070 0093     		str	r3, [sp]
 927 0072 08A8     		add	r0, sp, #32
 928              	.LVL44:
 929              		.loc 16 1451 19 view .LVU221
 930 0074 4F4B     		ldr	r3, .L53+12
 931 0076 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj
 932              	.LVL45:
 933              	.L24:
 934              		.loc 16 1451 19 view .LVU222
 935              	.LBE633:
 936              	.LBE635:
 937              	.LBE637:
 102:granular.cpp  ****         {
 938              		.loc 13 102 9 is_stmt 1 view .LVU223
 939              	.LBB638:
 104:granular.cpp  ****             // Exit if bad read or NULL fname
 940              		.loc 13 104 13 view .LVU224
 104:granular.cpp  ****             // Exit if bad read or NULL fname
 941              		.loc 13 104 31 is_stmt 0 view .LVU225
 942 007a 1AA9     		add	r1, sp, #104
 943 007c 0EA8     		add	r0, sp, #56
 944 007e FFF7FEFF 		bl	f_readdir
 945              	.LVL46:
 106:granular.cpp  ****                 break;
 946              		.loc 13 106 13 is_stmt 1 view .LVU226
 947 0082 0028     		cmp	r0, #0
 948 0084 E4D1     		bne	.L23
 106:granular.cpp  ****                 break;
 949              		.loc 13 106 33 is_stmt 0 discriminator 1 view .LVU227
 950 0086 9DF87E30 		ldrb	r3, [sp, #126]	@ zero_extendqisi2
 951 008a 002B     		cmp	r3, #0
 952 008c E0D0     		beq	.L23
 109:granular.cpp  ****                 continue;
 953              		.loc 13 109 13 is_stmt 1 view .LVU228
 954 008e 9DF87030 		ldrb	r3, [sp, #112]	@ zero_extendqisi2
 955 0092 13F0120F 		tst	r3, #18
 956 0096 F0D1     		bne	.L24
 112:granular.cpp  **** 
 957              		.loc 13 112 13 view .LVU229
 958              	.LVL47:
 114:granular.cpp  ****             {
 959              		.loc 13 114 13 view .LVU230
 960              	.LBB639:
 961 0098 002E     		cmp	r6, #0
 962 009a D9D1     		bne	.L23
 963              	.LBE639:
 964              	.LBE638:
 965              	.LBE672:
 966              	.LBE695:
 116:granular.cpp  ****                 {
 967              		.loc 13 116 17 view .LVU231
 968              	.LBB696:
 969              	.LBB673:
 970              	.LBB669:
 971              	.LBB667:
 972              	.LBB640:
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 87


 116:granular.cpp  ****                 {
 973              		.loc 13 116 27 is_stmt 0 view .LVU232
 974 009c 4649     		ldr	r1, .L53+16
 975 009e 0DF17E00 		add	r0, sp, #126
 976              	.LVL48:
 116:granular.cpp  ****                 {
 977              		.loc 13 116 27 view .LVU233
 978 00a2 FFF7FEFF 		bl	strstr
 979              	.LVL49:
 116:granular.cpp  ****                 {
 980              		.loc 13 116 17 view .LVU234
 981 00a6 0028     		cmp	r0, #0
 982 00a8 36D0     		beq	.L50
 983              	.L26:
 984              	.LBB641:
 118:granular.cpp  **** 
 985              		.loc 13 118 21 is_stmt 1 view .LVU235
 986              	.LBB642:
 121:granular.cpp  ****                     {
 987              		.loc 13 121 31 is_stmt 0 view .LVU236
 988 00aa 444C     		ldr	r4, .L53+20
 989              	.LBE642:
 118:granular.cpp  **** 
 990              		.loc 13 118 27 view .LVU237
 991 00ac 0DF17E01 		add	r1, sp, #126
 992              	.LVL50:
 118:granular.cpp  **** 
 993              		.loc 13 118 27 view .LVU238
 994 00b0 4348     		ldr	r0, .L53+24
 995 00b2 FFF7FEFF 		bl	strcpy
 996              	.LVL51:
 120:granular.cpp  ****                     if (f_open(&SDFile, m_file_info_[m_file_cnt_].name, (FA_OPEN_EXISTING | FA_READ
 997              		.loc 13 120 21 is_stmt 1 view .LVU239
 121:granular.cpp  ****                     {
 998              		.loc 13 121 21 view .LVU240
 999              	.LBB661:
 121:granular.cpp  ****                     {
 1000              		.loc 13 121 31 is_stmt 0 view .LVU241
 1001 00b6 0122     		movs	r2, #1
 1002 00b8 4149     		ldr	r1, .L53+24
 1003 00ba 2046     		mov	r0, r4
 1004 00bc FFF7FEFF 		bl	f_open
 1005              	.LVL52:
 121:granular.cpp  ****                     {
 1006              		.loc 13 121 21 view .LVU242
 1007 00c0 0028     		cmp	r0, #0
 1008 00c2 DAD1     		bne	.L24
 1009              	.LBB643:
 123:granular.cpp  **** 
 1010              		.loc 13 123 25 is_stmt 1 view .LVU243
 123:granular.cpp  **** 
 1011              		.loc 13 123 51 is_stmt 0 view .LVU244
 1012 00c4 E368     		ldr	r3, [r4, #12]
 125:granular.cpp  **** 
 1013              		.loc 13 125 58 view .LVU245
 1014 00c6 2146     		mov	r1, r4
 123:granular.cpp  **** 
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 88


 1015              		.loc 13 123 51 view .LVU246
 1016 00c8 3E4F     		ldr	r7, .L53+28
 125:granular.cpp  **** 
 1017              		.loc 13 125 58 view .LVU247
 1018 00ca 03A8     		add	r0, sp, #12
 123:granular.cpp  **** 
 1019              		.loc 13 123 51 view .LVU248
 1020 00cc 3B60     		str	r3, [r7]
 125:granular.cpp  **** 
 1021              		.loc 13 125 25 is_stmt 1 view .LVU249
 125:granular.cpp  **** 
 1022              		.loc 13 125 58 is_stmt 0 view .LVU250
 1023 00ce FFF7FEFF 		bl	_Z11parseHeaderP3FIL
 1024              	.LVL53:
 127:granular.cpp  ****                             continue;
 1025              		.loc 13 127 25 is_stmt 1 view .LVU251
 1026 00d2 BDF81430 		ldrh	r3, [sp, #20]
 1027 00d6 202B     		cmp	r3, #32
 1028 00d8 CFD1     		bne	.L24
 129:granular.cpp  ****                             continue;
 1029              		.loc 13 129 25 view .LVU252
 131:granular.cpp  ****                             continue;
 1030              		.loc 13 131 25 view .LVU253
 1031 00da BDF80E30 		ldrh	r3, [sp, #14]
 1032 00de 022B     		cmp	r3, #2
 1033 00e0 CBD1     		bne	.L24
 129:granular.cpp  ****                             continue;
 1034              		.loc 13 129 25 is_stmt 0 view .LVU254
 1035 00e2 049A     		ldr	r2, [sp, #16]
 1036 00e4 4BF68033 		movw	r3, #48000
 131:granular.cpp  ****                             continue;
 1037              		.loc 13 131 25 view .LVU255
 1038 00e8 9A42     		cmp	r2, r3
 1039 00ea C6D1     		bne	.L24
 133:granular.cpp  ****                             continue;
 1040              		.loc 13 133 25 is_stmt 1 view .LVU256
 1041 00ec BDF80C30 		ldrh	r3, [sp, #12]
 1042 00f0 032B     		cmp	r3, #3
 1043 00f2 C2D1     		bne	.L24
 136:granular.cpp  ****                         ACTUAL_DURATION = size / ( wf.channels * sizeof(float));
 1044              		.loc 13 136 25 view .LVU257
 136:granular.cpp  ****                         ACTUAL_DURATION = size / ( wf.channels * sizeof(float));
 1045              		.loc 13 136 72 is_stmt 0 view .LVU258
 1046 00f4 BDF81C30 		ldrh	r3, [sp, #28]
 1047              	.LBB644:
 141:granular.cpp  ****                             {
 1048              		.loc 13 141 39 view .LVU259
 1049 00f8 2046     		mov	r0, r4
 1050              	.LBE644:
 136:granular.cpp  ****                         ACTUAL_DURATION = size / ( wf.channels * sizeof(float));
 1051              		.loc 13 136 67 view .LVU260
 1052 00fa 3A68     		ldr	r2, [r7]
 1053              	.LBB655:
 141:granular.cpp  ****                             {
 1054              		.loc 13 141 39 view .LVU261
 1055 00fc 324C     		ldr	r4, .L53+32
 1056              	.LBE655:
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 89


 136:granular.cpp  ****                         ACTUAL_DURATION = size / ( wf.channels * sizeof(float));
 1057              		.loc 13 136 67 view .LVU262
 1058 00fe D21A     		subs	r2, r2, r3
 1059              	.LVL54:
 137:granular.cpp  **** 
 1060              		.loc 13 137 25 is_stmt 1 view .LVU263
 137:granular.cpp  **** 
 1061              		.loc 13 137 41 is_stmt 0 view .LVU264
 1062 0100 324B     		ldr	r3, .L53+36
 1063              	.LBB656:
 141:granular.cpp  ****                             {
 1064              		.loc 13 141 39 view .LVU265
 1065 0102 2146     		mov	r1, r4
 1066              	.LBE656:
 137:granular.cpp  **** 
 1067              		.loc 13 137 48 view .LVU266
 1068 0104 D708     		lsrs	r7, r2, #3
 137:granular.cpp  **** 
 1069              		.loc 13 137 41 view .LVU267
 1070 0106 1F60     		str	r7, [r3]
 139:granular.cpp  ****                         {
 1071              		.loc 13 139 25 is_stmt 1 view .LVU268
 1072              	.LBE643:
 1073              	.LBE661:
 1074              	.LBE641:
 1075              	.LBE640:
 1076              	.LBE667:
 1077              	.LBE669:
 1078              	.LBE673:
 1079              	.LBE696:
 141:granular.cpp  ****                             {
 1080              		.loc 13 141 29 view .LVU269
 1081              	.LBB697:
 1082              	.LBB674:
 1083              	.LBB670:
 1084              	.LBB668:
 1085              	.LBB666:
 1086              	.LBB664:
 1087              	.LBB662:
 1088              	.LBB659:
 1089              	.LBB657:
 141:granular.cpp  ****                             {
 1090              		.loc 13 141 39 is_stmt 0 view .LVU270
 1091 0108 02AB     		add	r3, sp, #8
 1092 010a FFF7FEFF 		bl	f_read
 1093              	.LVL55:
 141:granular.cpp  ****                             {
 1094              		.loc 13 141 29 view .LVU271
 1095 010e 58B1     		cbz	r0, .L51
 1096              	.LVL56:
 1097              	.L29:
 141:granular.cpp  ****                             {
 1098              		.loc 13 141 29 view .LVU272
 1099              	.LBE657:
 161:granular.cpp  ****                     }
 1100              		.loc 13 161 25 is_stmt 1 view .LVU273
 161:granular.cpp  ****                     }
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 90


 1101              		.loc 13 161 32 is_stmt 0 view .LVU274
 1102 0110 2A48     		ldr	r0, .L53+20
 1103 0112 FFF7FEFF 		bl	f_close
 1104              	.LVL57:
 161:granular.cpp  ****                     }
 1105              		.loc 13 161 32 view .LVU275
 1106              	.LBE659:
 1107 0116 B0E7     		b	.L24
 1108              	.L50:
 161:granular.cpp  ****                     }
 1109              		.loc 13 161 32 view .LVU276
 1110              	.LBE662:
 1111              	.LBE664:
 116:granular.cpp  ****                 {
 1112              		.loc 13 116 49 discriminator 1 view .LVU277
 1113 0118 2D49     		ldr	r1, .L53+40
 1114 011a 0DF17E00 		add	r0, sp, #126
 1115              	.LVL58:
 116:granular.cpp  ****                 {
 1116              		.loc 13 116 49 discriminator 1 view .LVU278
 1117 011e FFF7FEFF 		bl	strstr
 1118              	.LVL59:
 116:granular.cpp  ****                 {
 1119              		.loc 13 116 40 discriminator 1 view .LVU279
 1120 0122 0028     		cmp	r0, #0
 1121 0124 C1D1     		bne	.L26
 1122 0126 A8E7     		b	.L24
 1123              	.LVL60:
 1124              	.L51:
 1125              	.LBB665:
 1126              	.LBB663:
 1127              	.LBB660:
 1128              	.LBB658:
 1129              	.LBB645:
 143:granular.cpp  ****                                 uint32_t mid = BUFFER_SIZE / 2;
 1130              		.loc 13 143 33 is_stmt 1 view .LVU280
 143:granular.cpp  ****                                 uint32_t mid = BUFFER_SIZE / 2;
 1131              		.loc 13 143 51 is_stmt 0 view .LVU281
 1132 0128 3946     		mov	r1, r7
 1133 012a 2A48     		ldr	r0, .L53+44
 1134 012c FFF7FEFF 		bl	_ZN3dsp10Granulator13setNumSamplesEm
 1135              	.LVL61:
 144:granular.cpp  ****                                 uint32_t i, j;
 1136              		.loc 13 144 33 is_stmt 1 view .LVU282
 145:granular.cpp  ****                                 for (i = 1; i < BUFFER_SIZE; ++i)
 1137              		.loc 13 145 33 view .LVU283
 146:granular.cpp  ****                                 {
 1138              		.loc 13 146 33 view .LVU284
 1139              	.LBB646:
 146:granular.cpp  ****                                 {
 1140              		.loc 13 146 47 view .LVU285
 1141              	.LBE646:
 143:granular.cpp  ****                                 uint32_t mid = BUFFER_SIZE / 2;
 1142              		.loc 13 143 51 is_stmt 0 view .LVU286
 1143 0130 0121     		movs	r1, #1
 1144              	.LVL62:
 1145              	.LBB652:
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 91


 1146              	.LBB647:
 148:granular.cpp  ****                                     while (j < i)
 1147              		.loc 13 148 37 is_stmt 1 view .LVU287
 1148              	.LBE647:
 1149              	.LBE652:
 143:granular.cpp  ****                                 uint32_t mid = BUFFER_SIZE / 2;
 1150              		.loc 13 143 51 is_stmt 0 view .LVU288
 1151 0132 4FF0020C 		mov	ip, #2
 1152 0136 201D     		adds	r0, r4, #4
 1153              	.LBB653:
 1154              	.LBB648:
 148:granular.cpp  ****                                     while (j < i)
 1155              		.loc 13 148 49 view .LVU289
 1156 0138 B1F5800F 		cmp	r1, #4194304
 1157 013c A646     		mov	lr, r4
 1158              	.LBE648:
 1159              	.LBE653:
 143:granular.cpp  ****                                 uint32_t mid = BUFFER_SIZE / 2;
 1160              		.loc 13 143 51 view .LVU290
 1161 013e 264E     		ldr	r6, .L53+48
 1162              	.LVL63:
 143:granular.cpp  ****                                 uint32_t mid = BUFFER_SIZE / 2;
 1163              		.loc 13 143 51 view .LVU291
 1164 0140 6746     		mov	r7, ip
 1165              	.LBB654:
 1166              	.LBB649:
 148:granular.cpp  ****                                     while (j < i)
 1167              		.loc 13 148 49 view .LVU292
 1168 0142 24D2     		bcs	.L30
 1169              	.L52:
 1170              	.LVL64:
 149:granular.cpp  ****                                     {
 1171              		.loc 13 149 37 is_stmt 1 discriminator 1 view .LVU293
 149:granular.cpp  ****                                     {
 1172              		.loc 13 149 46 discriminator 1 view .LVU294
 1173 0144 6145     		cmp	r1, ip
 1174 0146 26D9     		bls	.L31
 149:granular.cpp  ****                                     {
 1175              		.loc 13 149 46 is_stmt 0 view .LVU295
 1176 0148 6246     		mov	r2, ip
 1177              	.LVL65:
 1178              	.L32:
 151:granular.cpp  ****                                     }
 1179              		.loc 13 151 41 is_stmt 1 view .LVU296
 151:granular.cpp  ****                                     }
 1180              		.loc 13 151 67 is_stmt 0 view .LVU297
 1181 014a A2F58003 		sub	r3, r2, #4194304
 151:granular.cpp  ****                                     }
 1182              		.loc 13 151 53 view .LVU298
 1183 014e B2F5800F 		cmp	r2, #4194304
 151:granular.cpp  ****                                     }
 1184              		.loc 13 151 74 view .LVU299
 1185 0152 4FEA4303 		lsl	r3, r3, #1
 151:granular.cpp  ****                                     }
 1186              		.loc 13 151 53 view .LVU300
 1187 0156 34BF     		ite	cc
 1188 0158 5200     		lslcc	r2, r2, #1
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 92


 1189              	.LVL66:
 151:granular.cpp  ****                                     }
 1190              		.loc 13 151 53 view .LVU301
 1191 015a 5A1C     		addcs	r2, r3, #1
 1192              	.LVL67:
 149:granular.cpp  ****                                     {
 1193              		.loc 13 149 37 is_stmt 1 view .LVU302
 149:granular.cpp  ****                                     {
 1194              		.loc 13 149 46 view .LVU303
 1195 015c 8A42     		cmp	r2, r1
 1196 015e F4D3     		bcc	.L32
 1197              	.L33:
 153:granular.cpp  ****                                     buffer[i] = buffer[j];
 1198              		.loc 13 153 37 discriminator 2 view .LVU304
 154:granular.cpp  ****                                     buffer[j] = tmp;
 1199              		.loc 13 154 57 is_stmt 0 discriminator 2 view .LVU305
 1200 0160 04EB8202 		add	r2, r4, r2, lsl #2
 1201              	.LVL68:
 153:granular.cpp  ****                                     buffer[i] = buffer[j];
 1202              		.loc 13 153 43 discriminator 2 view .LVU306
 1203 0164 0368     		ldr	r3, [r0]	@ float
 1204              	.LVL69:
 154:granular.cpp  ****                                     buffer[j] = tmp;
 1205              		.loc 13 154 37 is_stmt 1 discriminator 2 view .LVU307
 1206              	.LBE649:
 146:granular.cpp  ****                                 {
 1207              		.loc 13 146 47 is_stmt 0 discriminator 2 view .LVU308
 1208 0166 B7F5000F 		cmp	r7, #8388608
 1209              	.LBB650:
 154:granular.cpp  ****                                     buffer[j] = tmp;
 1210              		.loc 13 154 57 discriminator 2 view .LVU309
 1211 016a D2ED007A 		vldr.32	s15, [r2]
 154:granular.cpp  ****                                     buffer[j] = tmp;
 1212              		.loc 13 154 47 discriminator 2 view .LVU310
 1213 016e C0ED007A 		vstr.32	s15, [r0]
 155:granular.cpp  ****                                 }
 1214              		.loc 13 155 37 is_stmt 1 discriminator 2 view .LVU311
 155:granular.cpp  ****                                 }
 1215              		.loc 13 155 47 is_stmt 0 discriminator 2 view .LVU312
 1216 0172 1360     		str	r3, [r2]	@ float
 1217              	.LBE650:
 146:granular.cpp  ****                                 {
 1218              		.loc 13 146 33 is_stmt 1 discriminator 2 view .LVU313
 1219              	.LVL70:
 146:granular.cpp  ****                                 {
 1220              		.loc 13 146 47 discriminator 2 view .LVU314
 1221 0174 16D0     		beq	.L41
 1222              	.L39:
 1223              	.LVL71:
 146:granular.cpp  ****                                 {
 1224              		.loc 13 146 47 is_stmt 0 discriminator 2 view .LVU315
 1225 0176 0131     		adds	r1, r1, #1
 1226 0178 0137     		adds	r7, r7, #1
 1227              	.LVL72:
 146:granular.cpp  ****                                 {
 1228              		.loc 13 146 47 discriminator 2 view .LVU316
 1229 017a 0430     		adds	r0, r0, #4
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 93


 1230 017c 0EF1080E 		add	lr, lr, #8
 1231              	.LBB651:
 148:granular.cpp  ****                                     while (j < i)
 1232              		.loc 13 148 49 view .LVU317
 1233 0180 B1F5800F 		cmp	r1, #4194304
 1234 0184 06F10206 		add	r6, r6, #2
 1235 0188 0CF1020C 		add	ip, ip, #2
 1236              	.LVL73:
 148:granular.cpp  ****                                     while (j < i)
 1237              		.loc 13 148 37 is_stmt 1 view .LVU318
 148:granular.cpp  ****                                     while (j < i)
 1238              		.loc 13 148 49 is_stmt 0 view .LVU319
 1239 018c DAD3     		bcc	.L52
 1240              	.L30:
 1241              	.LVL74:
 149:granular.cpp  ****                                     {
 1242              		.loc 13 149 37 is_stmt 1 discriminator 2 view .LVU320
 149:granular.cpp  ****                                     {
 1243              		.loc 13 149 46 discriminator 2 view .LVU321
 1244 018e B142     		cmp	r1, r6
 1245 0190 3246     		mov	r2, r6
 1246 0192 DAD8     		bhi	.L32
 149:granular.cpp  ****                                     {
 1247              		.loc 13 149 46 is_stmt 0 discriminator 2 view .LVU322
 1248 0194 E4E7     		b	.L33
 1249              	.LVL75:
 1250              	.L31:
 153:granular.cpp  ****                                     buffer[i] = buffer[j];
 1251              		.loc 13 153 37 is_stmt 1 view .LVU323
 153:granular.cpp  ****                                     buffer[i] = buffer[j];
 1252              		.loc 13 153 43 is_stmt 0 view .LVU324
 1253 0196 0368     		ldr	r3, [r0]	@ float
 1254              	.LVL76:
 154:granular.cpp  ****                                     buffer[j] = tmp;
 1255              		.loc 13 154 37 is_stmt 1 view .LVU325
 154:granular.cpp  ****                                     buffer[j] = tmp;
 1256              		.loc 13 154 57 is_stmt 0 view .LVU326
 1257 0198 DEF80820 		ldr	r2, [lr, #8]	@ float
 154:granular.cpp  ****                                     buffer[j] = tmp;
 1258              		.loc 13 154 47 view .LVU327
 1259 019c 0260     		str	r2, [r0]	@ float
 155:granular.cpp  ****                                 }
 1260              		.loc 13 155 37 is_stmt 1 view .LVU328
 155:granular.cpp  ****                                 }
 1261              		.loc 13 155 47 is_stmt 0 view .LVU329
 1262 019e CEF80830 		str	r3, [lr, #8]	@ float
 1263              	.LBE651:
 146:granular.cpp  ****                                 {
 1264              		.loc 13 146 33 is_stmt 1 view .LVU330
 1265              	.LVL77:
 146:granular.cpp  ****                                 {
 1266              		.loc 13 146 47 view .LVU331
 1267 01a2 E8E7     		b	.L39
 1268              	.LVL78:
 1269              	.L41:
 146:granular.cpp  ****                                 {
 1270              		.loc 13 146 47 is_stmt 0 view .LVU332
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 94


 1271              	.LBE654:
 158:granular.cpp  ****                             }
 1272              		.loc 13 158 44 view .LVU333
 1273 01a4 0126     		movs	r6, #1
 1274 01a6 B3E7     		b	.L29
 1275              	.L54:
 1276              		.align	2
 1277              	.L53:
 1278 01a8 00000000 		.word	.LC0
 1279 01ac 14000000 		.word	.LC1
 1280 01b0 04000000 		.word	.LANCHOR2+4
 1281 01b4 18000000 		.word	.LC2
 1282 01b8 28000000 		.word	.LC3
 1283 01bc 00000000 		.word	.LANCHOR4
 1284 01c0 2C000000 		.word	.LANCHOR3+44
 1285 01c4 00000000 		.word	.LANCHOR5
 1286 01c8 00000000 		.word	buffer
 1287 01cc 00000000 		.word	.LANCHOR6
 1288 01d0 30000000 		.word	.LC4
 1289 01d4 00000000 		.word	.LANCHOR0
 1290 01d8 030080FF 		.word	-8388605
 1291              	.LBE645:
 1292              	.LBE658:
 1293              	.LBE660:
 1294              	.LBE663:
 1295              	.LBE665:
 1296              	.LBE666:
 1297              	.LBE668:
 1298              	.LBE670:
 1299              	.LBE674:
 1300              	.LBE697:
 1301              		.cfi_endproc
 1302              	.LFE4759:
 1304              		.section	.text._Z14UpdateControlsv,"ax",%progbits
 1305              		.align	1
 1306              		.p2align 2,,3
 1307              		.global	_Z14UpdateControlsv
 1308              		.syntax unified
 1309              		.thumb
 1310              		.thumb_func
 1312              	_Z14UpdateControlsv:
 1313              	.LFB4761:
 193:granular.cpp  **** 
 194:granular.cpp  **** void UpdateControls() {
 1314              		.loc 13 194 23 is_stmt 1 view -0
 1315              		.cfi_startproc
 1316              		@ args = 0, pretend = 0, frame = 0
 1317              		@ frame_needed = 0, uses_anonymous_args = 0
 195:granular.cpp  ****     hw.ProcessAllControls();
 1318              		.loc 13 195 5 view .LVU335
 1319              	.LVL79:
 1320              	.LBB698:
 1321              	.LBI698:
  32:../../tusenskona/src/tusenskona.h **** 
  33:../../tusenskona/src/tusenskona.h ****     /** Init related stuff. */
  34:../../tusenskona/src/tusenskona.h ****     void Init(bool boost = false);
  35:../../tusenskona/src/tusenskona.h **** 
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 95


  36:../../tusenskona/src/tusenskona.h ****     /** Wait for a bit
  37:../../tusenskona/src/tusenskona.h ****     \param del Time to wait in ms.
  38:../../tusenskona/src/tusenskona.h ****     */
  39:../../tusenskona/src/tusenskona.h ****     void DelayMs(size_t del);
  40:../../tusenskona/src/tusenskona.h **** 
  41:../../tusenskona/src/tusenskona.h ****     /** Starts the callback
  42:../../tusenskona/src/tusenskona.h ****     \param cb Interleaved callback function
  43:../../tusenskona/src/tusenskona.h ****     */
  44:../../tusenskona/src/tusenskona.h ****     void StartAudio(AudioHandle::InterleavingAudioCallback cb);
  45:../../tusenskona/src/tusenskona.h **** 
  46:../../tusenskona/src/tusenskona.h ****     /** Starts the callback
  47:../../tusenskona/src/tusenskona.h ****     \param cb multichannel callback function
  48:../../tusenskona/src/tusenskona.h ****     */
  49:../../tusenskona/src/tusenskona.h ****     void StartAudio(AudioHandle::AudioCallback cb);
  50:../../tusenskona/src/tusenskona.h **** 
  51:../../tusenskona/src/tusenskona.h ****     /**
  52:../../tusenskona/src/tusenskona.h ****        Switch callback functions
  53:../../tusenskona/src/tusenskona.h ****        \param cb New interleaved callback function.
  54:../../tusenskona/src/tusenskona.h ****     */
  55:../../tusenskona/src/tusenskona.h ****     void ChangeAudioCallback(AudioHandle::InterleavingAudioCallback cb);
  56:../../tusenskona/src/tusenskona.h **** 
  57:../../tusenskona/src/tusenskona.h ****     /**
  58:../../tusenskona/src/tusenskona.h ****        Switch callback functions
  59:../../tusenskona/src/tusenskona.h ****        \param cb New multichannel callback function.
  60:../../tusenskona/src/tusenskona.h ****     */
  61:../../tusenskona/src/tusenskona.h ****     void ChangeAudioCallback(AudioHandle::AudioCallback cb);
  62:../../tusenskona/src/tusenskona.h **** 
  63:../../tusenskona/src/tusenskona.h ****     /** Stops the audio if it is running. */
  64:../../tusenskona/src/tusenskona.h ****     void StopAudio();
  65:../../tusenskona/src/tusenskona.h **** 
  66:../../tusenskona/src/tusenskona.h ****     /** Updates the Audio Sample Rate, and reinitializes.
  67:../../tusenskona/src/tusenskona.h ****      ** Audio must be stopped for this to work.
  68:../../tusenskona/src/tusenskona.h ****      */
  69:../../tusenskona/src/tusenskona.h ****     void SetAudioSampleRate(SaiHandle::Config::SampleRate samplerate);
  70:../../tusenskona/src/tusenskona.h **** 
  71:../../tusenskona/src/tusenskona.h ****     /** Returns the audio sample rate in Hz as a floating point number.
  72:../../tusenskona/src/tusenskona.h ****      */
  73:../../tusenskona/src/tusenskona.h ****     float AudioSampleRate();
  74:../../tusenskona/src/tusenskona.h **** 
  75:../../tusenskona/src/tusenskona.h ****     /** Sets the number of samples processed per channel by the audio callback.
  76:../../tusenskona/src/tusenskona.h ****      */
  77:../../tusenskona/src/tusenskona.h ****     void SetAudioBlockSize(size_t blocksize);
  78:../../tusenskona/src/tusenskona.h **** 
  79:../../tusenskona/src/tusenskona.h ****     /** Returns the number of samples per channel in a block of audio. */
  80:../../tusenskona/src/tusenskona.h ****     size_t AudioBlockSize();
  81:../../tusenskona/src/tusenskona.h **** 
  82:../../tusenskona/src/tusenskona.h ****     /** Returns the rate in Hz that the Audio callback is called */
  83:../../tusenskona/src/tusenskona.h ****     float AudioCallbackRate();
  84:../../tusenskona/src/tusenskona.h **** 
  85:../../tusenskona/src/tusenskona.h ****     /**
  86:../../tusenskona/src/tusenskona.h ****        Start analog to digital conversion.
  87:../../tusenskona/src/tusenskona.h ****      */
  88:../../tusenskona/src/tusenskona.h ****     void StartAdc();
  89:../../tusenskona/src/tusenskona.h **** 
  90:../../tusenskona/src/tusenskona.h ****     /** Stops Transfering data from the ADC */
  91:../../tusenskona/src/tusenskona.h ****     void StopAdc();
  92:../../tusenskona/src/tusenskona.h **** 
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 96


  93:../../tusenskona/src/tusenskona.h ****     /** Call at same rate as analog reads for smooth reading.*/
  94:../../tusenskona/src/tusenskona.h ****     void ProcessAnalogControls();
  95:../../tusenskona/src/tusenskona.h **** 
  96:../../tusenskona/src/tusenskona.h ****     /** Process Analog and Digital Controls */
  97:../../tusenskona/src/tusenskona.h ****     inline void ProcessAllControls()
 1322              		.loc 2 97 17 view .LVU336
 1323              	.LBB699:
  98:../../tusenskona/src/tusenskona.h ****     {
  99:../../tusenskona/src/tusenskona.h ****         ProcessAnalogControls();
 1324              		.loc 2 99 9 view .LVU337
 1325              	.LBE699:
 1326              	.LBE698:
 194:granular.cpp  ****     hw.ProcessAllControls();
 1327              		.loc 13 194 23 is_stmt 0 view .LVU338
 1328 0000 10B5     		push	{r4, lr}
 1329              		.cfi_def_cfa_offset 8
 1330              		.cfi_offset 4, -8
 1331              		.cfi_offset 14, -4
 1332              	.LBB702:
 1333              	.LBB700:
 1334              		.loc 2 99 30 view .LVU339
 1335 0002 314C     		ldr	r4, .L69
 1336              	.LBE700:
 1337              	.LBE702:
 194:granular.cpp  ****     hw.ProcessAllControls();
 1338              		.loc 13 194 23 view .LVU340
 1339 0004 2DED048B 		vpush.64	{d8, d9}
 1340              		.cfi_def_cfa_offset 24
 1341              		.cfi_offset 80, -24
 1342              		.cfi_offset 81, -20
 1343              		.cfi_offset 82, -16
 1344              		.cfi_offset 83, -12
 1345              	.LBB703:
 1346              	.LBB701:
 1347              		.loc 2 99 30 view .LVU341
 1348 0008 2046     		mov	r0, r4
 1349 000a FFF7FEFF 		bl	_ZN5daisy10Tusenskona21ProcessAnalogControlsEv
 1350              	.LVL80:
 100:../../tusenskona/src/tusenskona.h ****         ProcessDigitalControls();
 1351              		.loc 2 100 9 is_stmt 1 view .LVU342
 1352              		.loc 2 100 31 is_stmt 0 view .LVU343
 1353 000e 2046     		mov	r0, r4
 1354 0010 FFF7FEFF 		bl	_ZN5daisy10Tusenskona22ProcessDigitalControlsEv
 1355              	.LVL81:
 1356              		.loc 2 100 31 view .LVU344
 1357              	.LBE701:
 1358              	.LBE703:
 196:granular.cpp  ****     
 197:granular.cpp  ****     float ctrl0 = hw.GetKnobValue((daisy::Tusenskona::Knob)0);
 1359              		.loc 13 197 5 is_stmt 1 view .LVU345
 1360              		.loc 13 197 34 is_stmt 0 view .LVU346
 1361 0014 0021     		movs	r1, #0
 1362 0016 2046     		mov	r0, r4
 1363 0018 FFF7FEFF 		bl	_ZN5daisy10Tusenskona12GetKnobValueENS0_4KnobE
 1364              	.LVL82:
 198:granular.cpp  ****     float ctrl1 = hw.GetKnobValue((daisy::Tusenskona::Knob)1);
 1365              		.loc 13 198 34 view .LVU347
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 97


 1366 001c 0121     		movs	r1, #1
 1367 001e 2046     		mov	r0, r4
 197:granular.cpp  ****     float ctrl1 = hw.GetKnobValue((daisy::Tusenskona::Knob)1);
 1368              		.loc 13 197 34 view .LVU348
 1369 0020 F0EE408A 		vmov.f32	s17, s0
 1370              	.LVL83:
 1371              		.loc 13 198 5 is_stmt 1 view .LVU349
 1372              		.loc 13 198 34 is_stmt 0 view .LVU350
 1373 0024 FFF7FEFF 		bl	_ZN5daisy10Tusenskona12GetKnobValueENS0_4KnobE
 1374              	.LVL84:
 199:granular.cpp  ****     float ctrl2 = hw.GetKnobValue((daisy::Tusenskona::Knob)2);
 1375              		.loc 13 199 34 view .LVU351
 1376 0028 0221     		movs	r1, #2
 1377 002a 2046     		mov	r0, r4
 198:granular.cpp  ****     float ctrl1 = hw.GetKnobValue((daisy::Tusenskona::Knob)1);
 1378              		.loc 13 198 34 view .LVU352
 1379 002c F0EE409A 		vmov.f32	s19, s0
 1380              	.LVL85:
 1381              		.loc 13 199 5 is_stmt 1 view .LVU353
 1382              		.loc 13 199 34 is_stmt 0 view .LVU354
 1383 0030 FFF7FEFF 		bl	_ZN5daisy10Tusenskona12GetKnobValueENS0_4KnobE
 1384              	.LVL86:
 200:granular.cpp  ****     float ctrl3 = hw.GetKnobValue((daisy::Tusenskona::Knob)3);
 1385              		.loc 13 200 34 view .LVU355
 1386 0034 0321     		movs	r1, #3
 1387 0036 2046     		mov	r0, r4
 199:granular.cpp  ****     float ctrl2 = hw.GetKnobValue((daisy::Tusenskona::Knob)2);
 1388              		.loc 13 199 34 view .LVU356
 1389 0038 B0EE409A 		vmov.f32	s18, s0
 1390              	.LVL87:
 1391              		.loc 13 200 5 is_stmt 1 view .LVU357
 1392              		.loc 13 200 34 is_stmt 0 view .LVU358
 1393 003c FFF7FEFF 		bl	_ZN5daisy10Tusenskona12GetKnobValueENS0_4KnobE
 1394              	.LVL88:
 1395              	.LBB704:
 1396              	.LBB705:
  43:../../libDaisy//src/hid/switch.h **** 
  44:../../libDaisy//src/hid/switch.h ****     /** 
  45:../../libDaisy//src/hid/switch.h ****     Initializes the switch object with a given port/pin combo.
  46:../../libDaisy//src/hid/switch.h ****     \param pin port/pin object to tell the switch which hardware pin to use.
  47:../../libDaisy//src/hid/switch.h ****     \param update_rate Does nothing. Backwards compatibility until next breaking update.
  48:../../libDaisy//src/hid/switch.h ****     \param t switch type -- Default: TYPE_MOMENTARY
  49:../../libDaisy//src/hid/switch.h ****     \param pol switch polarity -- Default: POLARITY_INVERTED
  50:../../libDaisy//src/hid/switch.h ****     \param pu switch pull up/down -- Default: PULL_UP
  51:../../libDaisy//src/hid/switch.h ****     */
  52:../../libDaisy//src/hid/switch.h ****     void
  53:../../libDaisy//src/hid/switch.h ****     Init(dsy_gpio_pin pin, float update_rate, Type t, Polarity pol, Pull pu);
  54:../../libDaisy//src/hid/switch.h **** 
  55:../../libDaisy//src/hid/switch.h ****     /**
  56:../../libDaisy//src/hid/switch.h ****        Simplified Init.
  57:../../libDaisy//src/hid/switch.h ****        \param pin port/pin object to tell the switch which hardware pin to use.
  58:../../libDaisy//src/hid/switch.h ****        \param update_rate Left for backwards compatibility until next breaking change.
  59:../../libDaisy//src/hid/switch.h ****     */
  60:../../libDaisy//src/hid/switch.h ****     void Init(dsy_gpio_pin pin, float update_rate = 0.f);
  61:../../libDaisy//src/hid/switch.h **** 
  62:../../libDaisy//src/hid/switch.h ****     /** 
  63:../../libDaisy//src/hid/switch.h ****     Called at update_rate to debounce and handle timing for the switch.
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 98


  64:../../libDaisy//src/hid/switch.h ****     In order for events not to be missed, its important that the Edge/Pressed checks
  65:../../libDaisy//src/hid/switch.h ****     be made at the same rate as the debounce function is being called.
  66:../../libDaisy//src/hid/switch.h ****     */
  67:../../libDaisy//src/hid/switch.h ****     void Debounce();
  68:../../libDaisy//src/hid/switch.h **** 
  69:../../libDaisy//src/hid/switch.h ****     /** \return true if a button was just pressed. */
  70:../../libDaisy//src/hid/switch.h ****     inline bool RisingEdge() const { return updated_ ? state_ == 0x7f : false; }
  71:../../libDaisy//src/hid/switch.h **** 
  72:../../libDaisy//src/hid/switch.h ****     /** \return true if the button was just released */
  73:../../libDaisy//src/hid/switch.h ****     inline bool FallingEdge() const
  74:../../libDaisy//src/hid/switch.h ****     {
  75:../../libDaisy//src/hid/switch.h ****         return updated_ ? state_ == 0x80 : false;
 1397              		.loc 5 75 16 view .LVU359
 1398 0040 94F8FC20 		ldrb	r2, [r4, #252]	@ zero_extendqisi2
 1399              	.LBE705:
 1400              	.LBE704:
 1401              		.loc 13 200 34 view .LVU360
 1402 0044 B0EE408A 		vmov.f32	s16, s0
 1403              	.LVL89:
 201:granular.cpp  ****  
 202:granular.cpp  ****     record ^= hw.button1.FallingEdge(); 
 1404              		.loc 13 202 5 is_stmt 1 view .LVU361
 1405              	.LBB707:
 1406              	.LBI704:
  73:../../libDaisy//src/hid/switch.h ****     {
 1407              		.loc 5 73 17 view .LVU362
 1408              	.LBB706:
 1409              		.loc 5 75 9 view .LVU363
 1410              		.loc 5 75 25 is_stmt 0 view .LVU364
 1411 0048 32B1     		cbz	r2, .L56
 1412 004a 94F80221 		ldrb	r2, [r4, #258]	@ zero_extendqisi2
 1413 004e A2F18002 		sub	r2, #128
 1414 0052 B2FA82F2 		clz	r2, r2
 1415 0056 5209     		lsrs	r2, r2, #5
 1416              	.L56:
 1417              	.LVL90:
 1418              		.loc 5 75 25 view .LVU365
 1419              	.LBE706:
 1420              	.LBE707:
 1421              		.loc 13 202 12 view .LVU366
 1422 0058 1C49     		ldr	r1, .L69+4
 1423              	.LBB708:
 1424              	.LBB709:
  22:../../libDaisy//src/hid/encoder.h **** 
  23:../../libDaisy//src/hid/encoder.h ****     /** Initializes the encoder with the specified hardware pins.
  24:../../libDaisy//src/hid/encoder.h ****      * Update rate is to be deprecated in a future release
  25:../../libDaisy//src/hid/encoder.h ****      */
  26:../../libDaisy//src/hid/encoder.h ****     void Init(dsy_gpio_pin a,
  27:../../libDaisy//src/hid/encoder.h ****               dsy_gpio_pin b,
  28:../../libDaisy//src/hid/encoder.h ****               dsy_gpio_pin click,
  29:../../libDaisy//src/hid/encoder.h ****               float        update_rate = 0.f);
  30:../../libDaisy//src/hid/encoder.h ****     /** Called at update_rate to debounce and handle timing for the switch.
  31:../../libDaisy//src/hid/encoder.h ****      * In order for events not to be missed, its important that the Edge/Pressed checks be made at 
  32:../../libDaisy//src/hid/encoder.h ****      */
  33:../../libDaisy//src/hid/encoder.h ****     void Debounce();
  34:../../libDaisy//src/hid/encoder.h **** 
  35:../../libDaisy//src/hid/encoder.h ****     /** Returns +1 if the encoder was turned clockwise, -1 if it was turned counter-clockwise, or 0
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 99


  36:../../libDaisy//src/hid/encoder.h ****     inline int32_t Increment() const { return updated_ ? inc_ : 0; }
 1425              		.loc 7 36 56 view .LVU367
 1426 005a 94F84430 		ldrb	r3, [r4, #68]	@ zero_extendqisi2
 1427              	.LBE709:
 1428              	.LBE708:
 1429              		.loc 13 202 12 view .LVU368
 1430 005e 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
 1431 0060 4240     		eors	r2, r2, r0
 1432 0062 0A70     		strb	r2, [r1]
 203:granular.cpp  **** 
 204:granular.cpp  ****     int enc = hw.encoder.Increment();
 1433              		.loc 13 204 5 is_stmt 1 view .LVU369
 1434              	.LVL91:
 1435              	.LBB711:
 1436              	.LBI708:
 1437              		.loc 7 36 20 view .LVU370
 1438              	.LBB710:
 1439              		.loc 7 36 40 view .LVU371
 1440              		.loc 7 36 56 is_stmt 0 view .LVU372
 1441 0064 03B1     		cbz	r3, .L57
 1442 0066 636E     		ldr	r3, [r4, #100]
 1443              	.L57:
 1444              	.LVL92:
 1445              		.loc 7 36 56 view .LVU373
 1446              	.LBE710:
 1447              	.LBE711:
 205:granular.cpp  ****     count = std::max(std::min(count + enc,2),0);
 1448              		.loc 13 205 5 is_stmt 1 view .LVU374
 1449              		.loc 13 205 37 is_stmt 0 view .LVU375
 1450 0068 194A     		ldr	r2, .L69+8
 1451 006a 1168     		ldr	r1, [r2]
 1452 006c 0B44     		add	r3, r3, r1
 1453              	.LVL93:
 1454              	.LBB712:
 1455              	.LBI712:
 1456              		.file 21 "/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h"
   1:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // Core algorithmic facilities -*- C++ -*-
   2:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
   3:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** //
   5:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // software; you can redistribute it and/or modify it under the
   7:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // terms of the GNU General Public License as published by the
   8:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // any later version.
  10:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
  11:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // This library is distributed in the hope that it will be useful,
  12:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // GNU General Public License for more details.
  15:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
  16:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // 3.1, as published by the Free Software Foundation.
  19:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
  20:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // You should have received a copy of the GNU General Public License and
  21:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // a copy of the GCC Runtime Library Exception along with this program;
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 100


  22:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // <http://www.gnu.org/licenses/>.
  24:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
  25:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** /*
  26:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  *
  27:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * Copyright (c) 1994
  28:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * Hewlett-Packard Company
  29:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  *
  30:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  33:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  34:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * representations about the suitability of this software for any
  36:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  *
  38:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  *
  39:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * Copyright (c) 1996-1998
  40:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  *
  42:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  45:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  46:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * representations about the suitability of this software for any
  48:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  */
  50:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
  51:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** /** @file bits/stl_algobase.h
  52:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  *  This is an internal header file, included by other library headers.
  53:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  *  Do not attempt to use it directly. @headername{algorithm}
  54:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  */
  55:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
  56:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #ifndef _STL_ALGOBASE_H
  57:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #define _STL_ALGOBASE_H 1
  58:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
  59:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <bits/c++config.h>
  60:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <bits/functexcept.h>
  61:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <bits/cpp_type_traits.h>
  62:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <ext/type_traits.h>
  63:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <ext/numeric_traits.h>
  64:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <bits/stl_pair.h>
  65:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <bits/stl_iterator_base_types.h>
  66:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <bits/stl_iterator_base_funcs.h>
  67:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <bits/stl_iterator.h>
  68:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <bits/concept_check.h>
  69:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <debug/debug.h>
  70:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <bits/move.h> // For std::swap
  71:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <bits/predefined_ops.h>
  72:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
  73:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** # include <type_traits>
  74:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
  75:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cplusplus > 201703L
  76:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** # include <compare>
  77:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
  78:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 101


  79:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** namespace std _GLIBCXX_VISIBILITY(default)
  80:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** {
  81:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  82:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
  83:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   /*
  84:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    * A constexpr wrapper for __builtin_memcmp.
  85:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    * @param __num The number of elements of type _Tp (not bytes).
  86:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    */
  87:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _Tp, typename _Up>
  88:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
  89:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline int
  90:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __memcmp(const _Tp* __first1, const _Up* __first2, size_t __num)
  91:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
  92:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
  93:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       static_assert(sizeof(_Tp) == sizeof(_Up), "can be compared with memcmp");
  94:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
  95:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #ifdef __cpp_lib_is_constant_evaluated
  96:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       if (std::is_constant_evaluated())
  97:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
  98:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  for(; __num > 0; ++__first1, ++__first2, --__num)
  99:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    if (*__first1 != *__first2)
 100:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	      return *__first1 < *__first2 ? -1 : 1;
 101:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  return 0;
 102:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	}
 103:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       else
 104:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
 105:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	return __builtin_memcmp(__first1, __first2, sizeof(_Tp) * __num);
 106:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 107:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 108:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cplusplus < 201103L
 109:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // See http://gcc.gnu.org/ml/libstdc++/2004-08/msg00167.html: in a
 110:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // nutshell, we are partially implementing the resolution of DR 187,
 111:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // when it's safe, i.e., the value_types are equal.
 112:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _BoolType>
 113:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     struct __iter_swap
 114:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 115:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
 116:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	static void
 117:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 118:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
 119:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  typedef typename iterator_traits<_ForwardIterator1>::value_type
 120:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    _ValueType1;
 121:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  _ValueType1 __tmp = *__a;
 122:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  *__a = *__b;
 123:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  *__b = __tmp;
 124:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	}
 125:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     };
 126:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 127:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<>
 128:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     struct __iter_swap<true>
 129:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 130:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
 131:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	static void
 132:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 133:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
 134:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  swap(*__a, *__b);
 135:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	}
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 102


 136:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     };
 137:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif // C++03
 138:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 139:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   /**
 140:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @brief Swaps the contents of two iterators.
 141:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 142:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __a  An iterator.
 143:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __b  Another iterator.
 144:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @return   Nothing.
 145:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
 146:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  This function swaps the values pointed to by two iterators, not the
 147:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  iterators themselves.
 148:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   */
 149:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 150:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 151:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline void
 152:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 153:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 154:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       // concept requirements
 155:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 156:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 				  _ForwardIterator1>)
 157:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 158:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 				  _ForwardIterator2>)
 159:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 160:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cplusplus < 201103L
 161:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::value_type
 162:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	_ValueType1;
 163:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::value_type
 164:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	_ValueType2;
 165:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 166:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType1,
 167:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 				  _ValueType2>)
 168:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType2,
 169:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 				  _ValueType1>)
 170:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 171:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::reference
 172:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	_ReferenceType1;
 173:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::reference
 174:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	_ReferenceType2;
 175:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       std::__iter_swap<__are_same<_ValueType1, _ValueType2>::__value
 176:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	&& __are_same<_ValueType1&, _ReferenceType1>::__value
 177:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	&& __are_same<_ValueType2&, _ReferenceType2>::__value>::
 178:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	iter_swap(__a, __b);
 179:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #else
 180:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 181:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       // 187. iter_swap underspecified
 182:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       swap(*__a, *__b);
 183:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
 184:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 185:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 186:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   /**
 187:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @brief Swap the elements of two sequences.
 188:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 189:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __first1  A forward iterator.
 190:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __last1   A forward iterator.
 191:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __first2  A forward iterator.
 192:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @return   An iterator equal to @p first2+(last1-first1).
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 103


 193:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
 194:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  Swaps each element in the range @p [first1,last1) with the
 195:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  corresponding element in the range @p [first2,(last1-first1)).
 196:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  The ranges must not overlap.
 197:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   */
 198:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 199:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 200:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _ForwardIterator2
 201:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     swap_ranges(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
 202:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		_ForwardIterator2 __first2)
 203:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 204:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       // concept requirements
 205:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 206:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 				  _ForwardIterator1>)
 207:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 208:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 				  _ForwardIterator2>)
 209:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_requires_valid_range(__first1, __last1);
 210:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 211:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       for (; __first1 != __last1; ++__first1, (void)++__first2)
 212:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	std::iter_swap(__first1, __first2);
 213:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return __first2;
 214:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 215:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 216:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   /**
 217:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 218:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 219:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 220:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 221:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @return   The lesser of the parameters.
 222:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
 223:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 224:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 225:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  preprocessor macro.
 226:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   */
 227:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _Tp>
 228:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 229:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline const _Tp&
 230:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     min(const _Tp& __a, const _Tp& __b)
 1457              		.loc 21 230 5 is_stmt 1 view .LVU376
 1458              	.LBB713:
 231:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 232:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       // concept requirements
 233:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
 234:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       //return __b < __a ? __b : __a;
 235:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       if (__b < __a)
 1459              		.loc 21 235 7 is_stmt 0 view .LVU377
 1460 006e 022B     		cmp	r3, #2
 1461 0070 26DC     		bgt	.L68
 1462              	.LVL94:
 1463              		.loc 21 235 7 view .LVU378
 1464              	.LBE713:
 1465              	.LBE712:
 1466              	.LBB714:
 1467              	.LBI714:
 236:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	return __b;
 237:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return __a;
 238:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 104


 239:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 240:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   /**
 241:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 242:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 243:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 244:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 245:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @return   The greater of the parameters.
 246:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
 247:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 248:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 249:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  preprocessor macro.
 250:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   */
 251:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _Tp>
 252:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 253:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline const _Tp&
 254:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     max(const _Tp& __a, const _Tp& __b)
 1468              		.loc 21 254 5 is_stmt 1 view .LVU379
 1469              	.LBB715:
 255:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 256:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       // concept requirements
 257:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
 258:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       //return  __a < __b ? __b : __a;
 259:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       if (__a < __b)
 1470              		.loc 21 259 7 is_stmt 0 view .LVU380
 1471 0072 002B     		cmp	r3, #0
 1472 0074 11DA     		bge	.L60
 1473              	.LVL95:
 1474              		.loc 21 259 7 view .LVU381
 1475              	.LBE715:
 1476              	.LBE714:
 1477              		.loc 13 205 11 view .LVU382
 1478 0076 0023     		movs	r3, #0
 1479 0078 1360     		str	r3, [r2]
 206:granular.cpp  ****  
 207:granular.cpp  ****     switch (static_cast<view>(count)) {
 1480              		.loc 13 207 5 is_stmt 1 view .LVU383
 1481              	.L61:
 208:granular.cpp  ****         case GRAIN1: {
 1482              		.loc 13 208 9 view .LVU384
 1483              		.loc 13 208 22 view .LVU385
 209:granular.cpp  ****             gran.setRate(ctrl0);
 1484              		.loc 13 209 13 view .LVU386
 1485              		.loc 13 209 25 is_stmt 0 view .LVU387
 1486 007a B0EE680A 		vmov.f32	s0, s17
 1487              	.LVL96:
 1488              		.loc 13 209 25 view .LVU388
 1489 007e 1548     		ldr	r0, .L69+12
 1490 0080 FFF7FEFF 		bl	_ZN3dsp10Granulator7setRateEf
 1491              	.LVL97:
 210:granular.cpp  ****             gran.setOffset(ctrl1);
 1492              		.loc 13 210 13 is_stmt 1 view .LVU389
 1493              		.loc 13 210 27 is_stmt 0 view .LVU390
 1494 0084 B0EE690A 		vmov.f32	s0, s19
 1495 0088 1248     		ldr	r0, .L69+12
 1496 008a FFF7FEFF 		bl	_ZN3dsp10Granulator9setOffsetEf
 1497              	.LVL98:
 211:granular.cpp  ****             gran.setDuration(ctrl2);
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 105


 1498              		.loc 13 211 13 is_stmt 1 view .LVU391
 1499              		.loc 13 211 29 is_stmt 0 view .LVU392
 1500 008e B0EE490A 		vmov.f32	s0, s18
 1501 0092 1048     		ldr	r0, .L69+12
 1502 0094 FFF7FEFF 		bl	_ZN3dsp10Granulator11setDurationEf
 1503              	.LVL99:
 212:granular.cpp  ****             break;
 1504              		.loc 13 212 13 is_stmt 1 view .LVU393
 1505 0098 08E0     		b	.L59
 1506              	.LVL100:
 1507              	.L60:
 205:granular.cpp  ****  
 1508              		.loc 13 205 11 is_stmt 0 view .LVU394
 1509 009a 1360     		str	r3, [r2]
 207:granular.cpp  ****         case GRAIN1: {
 1510              		.loc 13 207 5 is_stmt 1 view .LVU395
 1511 009c EDD0     		beq	.L61
 1512 009e 012B     		cmp	r3, #1
 1513 00a0 04D1     		bne	.L59
 213:granular.cpp  ****         }
 214:granular.cpp  ****         case GRAIN2: {
 1514              		.loc 13 214 9 view .LVU396
 1515              		.loc 13 214 22 view .LVU397
 215:granular.cpp  ****             gran.setJitter(ctrl0);
 1516              		.loc 13 215 13 view .LVU398
 1517              		.loc 13 215 27 is_stmt 0 view .LVU399
 1518 00a2 B0EE680A 		vmov.f32	s0, s17
 1519              	.LVL101:
 1520              		.loc 13 215 27 view .LVU400
 1521 00a6 0B48     		ldr	r0, .L69+12
 1522 00a8 FFF7FEFF 		bl	_ZN3dsp10Granulator9setJitterEf
 1523              	.LVL102:
 216:granular.cpp  ****             break;
 1524              		.loc 13 216 13 is_stmt 1 view .LVU401
 1525              	.L59:
 217:granular.cpp  ****         }
 218:granular.cpp  **** 
 219:granular.cpp  ****         case FX: {
 220:granular.cpp  ****             //rev.SetFeedback(ctrl0);
 221:granular.cpp  ****             //rev.SetLpFreq(ctrl1*10000);
 222:granular.cpp  ****             break;
 223:granular.cpp  ****         }
 224:granular.cpp  **** 
 225:granular.cpp  ****         default:
 226:granular.cpp  ****             break;
 227:granular.cpp  ****     }
 228:granular.cpp  ****     
 229:granular.cpp  ****     volume = ctrl3;
 1526              		.loc 13 229 5 view .LVU402
 1527              		.loc 13 229 12 is_stmt 0 view .LVU403
 1528 00ac 0A4B     		ldr	r3, .L69+16
 230:granular.cpp  **** 
 231:granular.cpp  ****     hw.UpdateLeds();
 1529              		.loc 13 231 18 view .LVU404
 1530 00ae 0648     		ldr	r0, .L69
 229:granular.cpp  **** 
 1531              		.loc 13 229 12 view .LVU405
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 106


 1532 00b0 83ED008A 		vstr.32	s16, [r3]
 1533              		.loc 13 231 5 is_stmt 1 view .LVU406
 232:granular.cpp  **** 
 233:granular.cpp  **** }
 1534              		.loc 13 233 1 is_stmt 0 view .LVU407
 1535 00b4 BDEC048B 		vldm	sp!, {d8-d9}
 1536              		.cfi_remember_state
 1537              		.cfi_restore 82
 1538              		.cfi_restore 83
 1539              		.cfi_restore 80
 1540              		.cfi_restore 81
 1541              		.cfi_def_cfa_offset 8
 1542              	.LVL103:
 1543              		.loc 13 233 1 view .LVU408
 1544 00b8 BDE81040 		pop	{r4, lr}
 1545              		.cfi_restore 14
 1546              		.cfi_restore 4
 1547              		.cfi_def_cfa_offset 0
 231:granular.cpp  **** 
 1548              		.loc 13 231 18 view .LVU409
 1549 00bc FFF7FEBF 		b	_ZN5daisy10Tusenskona10UpdateLedsEv
 1550              	.LVL104:
 1551              	.L68:
 1552              		.cfi_restore_state
 1553              	.LBB716:
 254:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 1554              		.loc 21 254 5 is_stmt 1 view .LVU410
 254:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 1555              		.loc 21 254 5 is_stmt 0 view .LVU411
 1556              	.LBE716:
 205:granular.cpp  ****  
 1557              		.loc 13 205 11 view .LVU412
 1558 00c0 0223     		movs	r3, #2
 1559 00c2 1360     		str	r3, [r2]
 207:granular.cpp  ****         case GRAIN1: {
 1560              		.loc 13 207 5 is_stmt 1 view .LVU413
 1561 00c4 F2E7     		b	.L59
 1562              	.L70:
 1563 00c6 00BF     		.align	2
 1564              	.L69:
 1565 00c8 00000000 		.word	.LANCHOR7
 1566 00cc 00000000 		.word	.LANCHOR8
 1567 00d0 00000000 		.word	.LANCHOR9
 1568 00d4 00000000 		.word	.LANCHOR0
 1569 00d8 00000000 		.word	.LANCHOR1
 1570              		.cfi_endproc
 1571              	.LFE4761:
 1573              		.section	.text._Z10UpdateLEDsv,"ax",%progbits
 1574              		.align	1
 1575              		.p2align 2,,3
 1576              		.global	_Z10UpdateLEDsv
 1577              		.syntax unified
 1578              		.thumb
 1579              		.thumb_func
 1581              	_Z10UpdateLEDsv:
 1582              	.LFB4762:
 234:granular.cpp  **** 
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 107


 235:granular.cpp  **** void UpdateLEDs() {
 1583              		.loc 13 235 19 view -0
 1584              		.cfi_startproc
 1585              		@ args = 0, pretend = 0, frame = 0
 1586              		@ frame_needed = 0, uses_anonymous_args = 0
 236:granular.cpp  **** 
 237:granular.cpp  ****     if (record) {
 1587              		.loc 13 237 5 view .LVU415
 1588 0000 1E4B     		ldr	r3, .L81
 1589 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1590 0004 ABB1     		cbz	r3, .L72
 1591              	.LBB719:
 1592              	.LBI719:
 235:granular.cpp  **** 
 1593              		.loc 13 235 6 view .LVU416
 1594              	.LBB720:
 238:granular.cpp  ****         hw.DelayMs(200);
 1595              		.loc 13 238 9 view .LVU417
 1596              		.loc 13 238 19 is_stmt 0 view .LVU418
 1597 0006 C821     		movs	r1, #200
 1598 0008 1D48     		ldr	r0, .L81+4
 1599              	.LBE720:
 1600              	.LBE719:
 235:granular.cpp  **** 
 1601              		.loc 13 235 19 view .LVU419
 1602 000a 10B5     		push	{r4, lr}
 1603              		.cfi_def_cfa_offset 8
 1604              		.cfi_offset 4, -8
 1605              		.cfi_offset 14, -4
 1606              	.LBB723:
 1607              	.LBB721:
 239:granular.cpp  ****         if (blink) {
 1608              		.loc 13 239 9 view .LVU420
 1609 000c 1D4C     		ldr	r4, .L81+8
 238:granular.cpp  ****         hw.DelayMs(200);
 1610              		.loc 13 238 19 view .LVU421
 1611 000e FFF7FEFF 		bl	_ZN5daisy10Tusenskona7DelayMsEj
 1612              	.LVL105:
 1613              		.loc 13 239 9 is_stmt 1 view .LVU422
 1614 0012 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 1615 0014 EBB9     		cbnz	r3, .L80
 240:granular.cpp  ****             hw.led.Set(clrs[count][0], clrs[count][1], clrs[count][2]);
 241:granular.cpp  ****         } 
 242:granular.cpp  ****         else {
 243:granular.cpp  ****             hw.led.Set(0., 0., 0.);
 1616              		.loc 13 243 13 view .LVU423
 1617              		.loc 13 243 23 is_stmt 0 view .LVU424
 1618 0016 9FED1C1A 		vldr.32	s2, .L81+12
 1619 001a 1C48     		ldr	r0, .L81+16
 1620 001c F0EE410A 		vmov.f32	s1, s2
 1621 0020 B0EE410A 		vmov.f32	s0, s2
 1622 0024 FFF7FEFF 		bl	_ZN5daisy6RgbLed3SetEfff
 1623              	.LVL106:
 244:granular.cpp  ****         }
 245:granular.cpp  ****         blink = !blink;
 1624              		.loc 13 245 9 is_stmt 1 view .LVU425
 1625              		.loc 13 245 17 is_stmt 0 view .LVU426
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 108


 1626 0028 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 1627 002a 83F00103 		eor	r3, r3, #1
 1628              		.loc 13 245 15 view .LVU427
 1629 002e 2370     		strb	r3, [r4]
 1630              	.LBE721:
 1631              	.LBE723:
 246:granular.cpp  ****     }
 247:granular.cpp  ****     else {
 248:granular.cpp  ****             hw.led.Set(clrs[count][0], clrs[count][1], clrs[count][2]);
 249:granular.cpp  ****     }
 250:granular.cpp  **** 
 251:granular.cpp  **** }
 1632              		.loc 13 251 1 view .LVU428
 1633 0030 10BD     		pop	{r4, pc}
 1634              	.L72:
 1635              		.cfi_def_cfa_offset 0
 1636              		.cfi_restore 4
 1637              		.cfi_restore 14
 248:granular.cpp  ****     }
 1638              		.loc 13 248 13 is_stmt 1 view .LVU429
 248:granular.cpp  ****     }
 1639              		.loc 13 248 23 is_stmt 0 view .LVU430
 1640 0032 174A     		ldr	r2, .L81+20
 1641 0034 174B     		ldr	r3, .L81+24
 1642 0036 1268     		ldr	r2, [r2]
 1643 0038 1448     		ldr	r0, .L81+16
 1644 003a 02EB4202 		add	r2, r2, r2, lsl #1
 1645 003e 03EB8203 		add	r3, r3, r2, lsl #2
 1646 0042 93ED021A 		vldr.32	s2, [r3, #8]
 1647 0046 D3ED010A 		vldr.32	s1, [r3, #4]
 1648 004a 93ED000A 		vldr.32	s0, [r3]
 1649 004e FFF7FEBF 		b	_ZN5daisy6RgbLed3SetEfff
 1650              	.LVL107:
 1651              	.L80:
 1652              		.cfi_def_cfa_offset 8
 1653              		.cfi_offset 4, -8
 1654              		.cfi_offset 14, -4
 1655              	.LBB724:
 1656              	.LBB722:
 240:granular.cpp  ****         } 
 1657              		.loc 13 240 13 is_stmt 1 view .LVU431
 240:granular.cpp  ****         } 
 1658              		.loc 13 240 23 is_stmt 0 view .LVU432
 1659 0052 0F4A     		ldr	r2, .L81+20
 1660 0054 0F4B     		ldr	r3, .L81+24
 1661 0056 1268     		ldr	r2, [r2]
 1662 0058 0C48     		ldr	r0, .L81+16
 1663 005a 02EB4202 		add	r2, r2, r2, lsl #1
 1664 005e 03EB8203 		add	r3, r3, r2, lsl #2
 1665 0062 93ED021A 		vldr.32	s2, [r3, #8]
 1666 0066 D3ED010A 		vldr.32	s1, [r3, #4]
 1667 006a 93ED000A 		vldr.32	s0, [r3]
 1668 006e FFF7FEFF 		bl	_ZN5daisy6RgbLed3SetEfff
 1669              	.LVL108:
 245:granular.cpp  ****     }
 1670              		.loc 13 245 9 is_stmt 1 view .LVU433
 245:granular.cpp  ****     }
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 109


 1671              		.loc 13 245 17 is_stmt 0 view .LVU434
 1672 0072 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 1673 0074 83F00103 		eor	r3, r3, #1
 245:granular.cpp  ****     }
 1674              		.loc 13 245 15 view .LVU435
 1675 0078 2370     		strb	r3, [r4]
 1676              	.LBE722:
 1677              	.LBE724:
 1678              		.loc 13 251 1 view .LVU436
 1679 007a 10BD     		pop	{r4, pc}
 1680              	.L82:
 1681              		.align	2
 1682              	.L81:
 1683 007c 00000000 		.word	.LANCHOR8
 1684 0080 00000000 		.word	.LANCHOR7
 1685 0084 00000000 		.word	.LANCHOR10
 1686 0088 00000000 		.word	0
 1687 008c 20010000 		.word	.LANCHOR7+288
 1688 0090 00000000 		.word	.LANCHOR9
 1689 0094 00000000 		.word	.LANCHOR11
 1690              		.cfi_endproc
 1691              	.LFE4762:
 1693              		.section	.text.startup.main,"ax",%progbits
 1694              		.align	1
 1695              		.p2align 2,,3
 1696              		.global	main
 1697              		.syntax unified
 1698              		.thumb
 1699              		.thumb_func
 1701              	main:
 1702              	.LFB4763:
 252:granular.cpp  **** 
 253:granular.cpp  **** int main(void)
 254:granular.cpp  **** {
 1703              		.loc 13 254 1 is_stmt 1 view -0
 1704              		.cfi_startproc
 1705              		@ Volatile: function does not return.
 1706              		@ args = 0, pretend = 0, frame = 16
 1707              		@ frame_needed = 0, uses_anonymous_args = 0
 255:granular.cpp  ****     hw.Init();
 1708              		.loc 13 255 5 view .LVU438
 254:granular.cpp  ****     hw.Init();
 1709              		.loc 13 254 1 is_stmt 0 view .LVU439
 1710 0000 00B5     		push	{lr}
 1711              		.cfi_def_cfa_offset 4
 1712              		.cfi_offset 14, -4
 1713              		.loc 13 255 12 view .LVU440
 1714 0002 0021     		movs	r1, #0
 254:granular.cpp  ****     hw.Init();
 1715              		.loc 13 254 1 view .LVU441
 1716 0004 85B0     		sub	sp, sp, #20
 1717              		.cfi_def_cfa_offset 24
 1718              		.loc 13 255 12 view .LVU442
 1719 0006 1748     		ldr	r0, .L86
 256:granular.cpp  ****     hw.SetAudioBlockSize(48); 
 257:granular.cpp  ****     hw.SetAudioSampleRate(daisy::SaiHandle::Config::SampleRate::SAI_48KHZ);
 258:granular.cpp  **** 
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 110


 259:granular.cpp  ****     gran.init(&buffer[0], BUFFER_SIZE); 
 260:granular.cpp  ****     std::fill(&buffer[0], &buffer[BUFFER_SIZE - 1], 0.f);
 261:granular.cpp  **** 
 262:granular.cpp  ****     /*rev.Init(48000);
 263:granular.cpp  ****     rev.SetFeedback(0.5f);
 264:granular.cpp  ****     rev.SetLpFreq(5000);
 265:granular.cpp  ****     */
 266:granular.cpp  **** 
 267:granular.cpp  ****     //daisy::Random::GetValue();
 268:granular.cpp  **** 
 269:granular.cpp  ****     daisy::SdmmcHandler::Config sd_cfg;
 270:granular.cpp  ****     sd_cfg.speed = daisy::SdmmcHandler::Speed::MEDIUM_SLOW;
 1720              		.loc 13 270 18 view .LVU443
 1721 0008 0124     		movs	r4, #1
 255:granular.cpp  ****     hw.SetAudioBlockSize(48); 
 1722              		.loc 13 255 12 view .LVU444
 1723 000a FFF7FEFF 		bl	_ZN5daisy10Tusenskona4InitEb
 1724              	.LVL109:
 256:granular.cpp  ****     hw.SetAudioBlockSize(48); 
 1725              		.loc 13 256 5 is_stmt 1 view .LVU445
 256:granular.cpp  ****     hw.SetAudioBlockSize(48); 
 1726              		.loc 13 256 25 is_stmt 0 view .LVU446
 1727 000e 3021     		movs	r1, #48
 1728 0010 1448     		ldr	r0, .L86
 1729 0012 FFF7FEFF 		bl	_ZN5daisy10Tusenskona17SetAudioBlockSizeEj
 1730              	.LVL110:
 257:granular.cpp  **** 
 1731              		.loc 13 257 5 is_stmt 1 view .LVU447
 257:granular.cpp  **** 
 1732              		.loc 13 257 26 is_stmt 0 view .LVU448
 1733 0016 0321     		movs	r1, #3
 1734 0018 1248     		ldr	r0, .L86
 1735 001a FFF7FEFF 		bl	_ZN5daisy10Tusenskona18SetAudioSampleRateENS_9SaiHandle6Config10SampleRateE
 1736              	.LVL111:
 259:granular.cpp  ****     std::fill(&buffer[0], &buffer[BUFFER_SIZE - 1], 0.f);
 1737              		.loc 13 259 5 is_stmt 1 view .LVU449
 259:granular.cpp  ****     std::fill(&buffer[0], &buffer[BUFFER_SIZE - 1], 0.f);
 1738              		.loc 13 259 14 is_stmt 0 view .LVU450
 1739 001e 4FF40002 		mov	r2, #8388608
 1740 0022 1149     		ldr	r1, .L86+4
 1741 0024 1148     		ldr	r0, .L86+8
 1742 0026 FFF7FEFF 		bl	_ZN3dsp10Granulator4initEPfm
 1743              	.LVL112:
 260:granular.cpp  **** 
 1744              		.loc 13 260 5 is_stmt 1 view .LVU451
 1745              	.LBB725:
 1746              	.LBI725:
 260:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	return __b;
 261:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return __a;
 262:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 263:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 264:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   /**
 265:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 266:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 267:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 268:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 269:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __comp  A @link comparison_functors comparison functor@endlink.
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 111


 270:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @return   The lesser of the parameters.
 271:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
 272:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  This will work on temporary expressions, since they are only evaluated
 273:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  once, unlike a preprocessor macro.
 274:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   */
 275:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _Tp, typename _Compare>
 276:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 277:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline const _Tp&
 278:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     min(const _Tp& __a, const _Tp& __b, _Compare __comp)
 279:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 280:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       //return __comp(__b, __a) ? __b : __a;
 281:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       if (__comp(__b, __a))
 282:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	return __b;
 283:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return __a;
 284:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 285:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 286:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   /**
 287:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 288:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 289:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 290:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 291:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __comp  A @link comparison_functors comparison functor@endlink.
 292:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @return   The greater of the parameters.
 293:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
 294:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  This will work on temporary expressions, since they are only evaluated
 295:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  once, unlike a preprocessor macro.
 296:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   */
 297:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _Tp, typename _Compare>
 298:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 299:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline const _Tp&
 300:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     max(const _Tp& __a, const _Tp& __b, _Compare __comp)
 301:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 302:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       //return __comp(__a, __b) ? __b : __a;
 303:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       if (__comp(__a, __b))
 304:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	return __b;
 305:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return __a;
 306:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 307:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 308:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // Fallback implementation of the function in bits/stl_iterator.h used to
 309:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // remove the __normal_iterator wrapper. See copy, fill, ...
 310:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _Iterator>
 311:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 312:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline _Iterator
 313:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __niter_base(_Iterator __it)
 314:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX_NOEXCEPT_IF(std::is_nothrow_copy_constructible<_Iterator>::value)
 315:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     { return __it; }
 316:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 317:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // Reverse the __niter_base transformation to get a
 318:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // __normal_iterator back again (this assumes that __normal_iterator
 319:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // is only used to wrap random access iterators, like pointers).
 320:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _From, typename _To>
 321:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 322:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline _From
 323:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __niter_wrap(_From __from, _To __res)
 324:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     { return __from + (__res - std::__niter_base(__from)); }
 325:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 326:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // No need to wrap, iterator already has the right type.
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 112


 327:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _Iterator>
 328:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 329:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline _Iterator
 330:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __niter_wrap(const _Iterator&, _Iterator __res)
 331:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     { return __res; }
 332:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 333:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // All of these auxiliary structs serve two purposes.  (1) Replace
 334:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // calls to copy with memmove whenever possible.  (Memmove, not memcpy,
 335:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // because the input and output ranges are permitted to overlap.)
 336:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // (2) If we're using random access iterators, then write the loop as
 337:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // a for loop with an explicit count.
 338:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 339:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove, bool _IsSimple, typename _Category>
 340:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     struct __copy_move
 341:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 342:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 343:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 344:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	static _OI
 345:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	__copy_m(_II __first, _II __last, _OI __result)
 346:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
 347:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  for (; __first != __last; ++__result, (void)++__first)
 348:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    *__result = *__first;
 349:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  return __result;
 350:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	}
 351:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     };
 352:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 353:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 354:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _Category>
 355:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     struct __copy_move<true, false, _Category>
 356:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 357:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 358:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 359:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	static _OI
 360:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	__copy_m(_II __first, _II __last, _OI __result)
 361:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
 362:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  for (; __first != __last; ++__result, (void)++__first)
 363:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    *__result = std::move(*__first);
 364:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  return __result;
 365:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	}
 366:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     };
 367:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
 368:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 369:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<>
 370:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     struct __copy_move<false, false, random_access_iterator_tag>
 371:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 372:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 373:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 374:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	static _OI
 375:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	__copy_m(_II __first, _II __last, _OI __result)
 376:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
 377:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  typedef typename iterator_traits<_II>::difference_type _Distance;
 378:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  for(_Distance __n = __last - __first; __n > 0; --__n)
 379:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    {
 380:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	      *__result = *__first;
 381:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	      ++__first;
 382:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	      ++__result;
 383:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    }
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 113


 384:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  return __result;
 385:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	}
 386:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     };
 387:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 388:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 389:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<>
 390:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     struct __copy_move<true, false, random_access_iterator_tag>
 391:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 392:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 393:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 394:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	static _OI
 395:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	__copy_m(_II __first, _II __last, _OI __result)
 396:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
 397:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  typedef typename iterator_traits<_II>::difference_type _Distance;
 398:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  for(_Distance __n = __last - __first; __n > 0; --__n)
 399:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    {
 400:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	      *__result = std::move(*__first);
 401:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	      ++__first;
 402:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	      ++__result;
 403:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    }
 404:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  return __result;
 405:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	}
 406:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     };
 407:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
 408:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 409:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove>
 410:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     struct __copy_move<_IsMove, true, random_access_iterator_tag>
 411:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 412:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       template<typename _Tp>
 413:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 414:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	static _Tp*
 415:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
 416:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
 417:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 418:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  using __assignable = conditional<_IsMove,
 419:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 					   is_move_assignable<_Tp>,
 420:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 					   is_copy_assignable<_Tp>>;
 421:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  // trivial types can have deleted assignment
 422:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  static_assert( __assignable::type::value, "type is not assignable" );
 423:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
 424:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  const ptrdiff_t _Num = __last - __first;
 425:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  if (_Num)
 426:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 427:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  return __result + _Num;
 428:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	}
 429:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     };
 430:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 431:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // Helpers for streambuf iterators (either istream or ostream).
 432:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // NB: avoid including <iosfwd>, relatively large.
 433:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _CharT>
 434:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     struct char_traits;
 435:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 436:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _CharT, typename _Traits>
 437:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     class istreambuf_iterator;
 438:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 439:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _CharT, typename _Traits>
 440:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     class ostreambuf_iterator;
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 114


 441:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 442:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 443:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
 444:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	     ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type
 445:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_a2(_CharT*, _CharT*,
 446:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		   ostreambuf_iterator<_CharT, char_traits<_CharT> >);
 447:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 448:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 449:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
 450:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	     ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type
 451:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_a2(const _CharT*, const _CharT*,
 452:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		   ostreambuf_iterator<_CharT, char_traits<_CharT> >);
 453:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 454:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 455:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
 456:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 				    _CharT*>::__type
 457:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_a2(istreambuf_iterator<_CharT, char_traits<_CharT> >,
 458:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		   istreambuf_iterator<_CharT, char_traits<_CharT> >, _CharT*);
 459:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 460:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 461:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 462:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline _OI
 463:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_a2(_II __first, _II __last, _OI __result)
 464:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 465:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_II>::iterator_category _Category;
 466:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #ifdef __cpp_lib_is_constant_evaluated
 467:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       if (std::is_constant_evaluated())
 468:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	return std::__copy_move<_IsMove, false, _Category>::
 469:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  __copy_m(__first, __last, __result);
 470:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
 471:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return std::__copy_move<_IsMove, __memcpyable<_OI, _II>::__value,
 472:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 			      _Category>::__copy_m(__first, __last, __result);
 473:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 474:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 475:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
 476:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 477:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _Tp, typename _Ref, typename _Ptr>
 478:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     struct _Deque_iterator;
 479:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 480:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** _GLIBCXX_END_NAMESPACE_CONTAINER
 481:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 482:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove,
 483:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	   typename _Tp, typename _Ref, typename _Ptr, typename _OI>
 484:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _OI
 485:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_a1(_GLIBCXX_STD_C::_Deque_iterator<_Tp, _Ref, _Ptr>,
 486:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		   _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Ref, _Ptr>,
 487:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		   _OI);
 488:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 489:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove,
 490:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	   typename _ITp, typename _IRef, typename _IPtr, typename _OTp>
 491:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX_STD_C::_Deque_iterator<_OTp, _OTp&, _OTp*>
 492:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_a1(_GLIBCXX_STD_C::_Deque_iterator<_ITp, _IRef, _IPtr>,
 493:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		   _GLIBCXX_STD_C::_Deque_iterator<_ITp, _IRef, _IPtr>,
 494:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		   _GLIBCXX_STD_C::_Deque_iterator<_OTp, _OTp&, _OTp*>);
 495:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 496:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _II, typename _Tp>
 497:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     typename __gnu_cxx::__enable_if<
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 115


 498:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __is_random_access_iter<_II>::__value,
 499:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Tp&, _Tp*> >::__type
 500:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_a1(_II, _II, _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Tp&, _Tp*>);
 501:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 502:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 503:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 504:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline _OI
 505:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_a1(_II __first, _II __last, _OI __result)
 506:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
 507:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 508:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 509:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 510:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline _OI
 511:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_a(_II __first, _II __last, _OI __result)
 512:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 513:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return std::__niter_wrap(__result,
 514:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		std::__copy_move_a1<_IsMove>(std::__niter_base(__first),
 515:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 					     std::__niter_base(__last),
 516:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 					     std::__niter_base(__result)));
 517:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 518:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 519:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove,
 520:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	   typename _Ite, typename _Seq, typename _Cat, typename _OI>
 521:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _OI
 522:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_a(const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&,
 523:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		  const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&,
 524:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		  _OI);
 525:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 526:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove,
 527:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	   typename _II, typename _Ite, typename _Seq, typename _Cat>
 528:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>
 529:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_a(_II, _II,
 530:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		  const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&);
 531:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 532:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove,
 533:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	   typename _IIte, typename _ISeq, typename _ICat,
 534:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	   typename _OIte, typename _OSeq, typename _OCat>
 535:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     ::__gnu_debug::_Safe_iterator<_OIte, _OSeq, _OCat>
 536:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_a(const ::__gnu_debug::_Safe_iterator<_IIte, _ISeq, _ICat>&,
 537:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		  const ::__gnu_debug::_Safe_iterator<_IIte, _ISeq, _ICat>&,
 538:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		  const ::__gnu_debug::_Safe_iterator<_OIte, _OSeq, _OCat>&);
 539:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 540:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   /**
 541:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @brief Copies the range [first,last) into result.
 542:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 543:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __first  An input iterator.
 544:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __last   An input iterator.
 545:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __result An output iterator.
 546:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @return   result + (last - first)
 547:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
 548:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 549:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 550:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 551:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  optimizations such as unrolling).  Result may not be contained within
 552:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  [first,last); the copy_backward function should be used instead.
 553:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
 554:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  Note that the end of the output range is permitted to be contained
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 116


 555:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  within [first,last).
 556:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   */
 557:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _II, typename _OI>
 558:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 559:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline _OI
 560:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     copy(_II __first, _II __last, _OI __result)
 561:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 562:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       // concept requirements
 563:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_InputIteratorConcept<_II>)
 564:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OI,
 565:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    typename iterator_traits<_II>::value_type>)
 566:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_requires_can_increment_range(__first, __last, __result);
 567:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 568:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return std::__copy_move_a<__is_move_iterator<_II>::__value>
 569:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	     (std::__miter_base(__first), std::__miter_base(__last), __result);
 570:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 571:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 572:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 573:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   /**
 574:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @brief Moves the range [first,last) into result.
 575:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 576:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __first  An input iterator.
 577:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __last   An input iterator.
 578:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __result An output iterator.
 579:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @return   result + (last - first)
 580:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
 581:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 582:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 583:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 584:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  optimizations such as unrolling).  Result may not be contained within
 585:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  [first,last); the move_backward function should be used instead.
 586:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
 587:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  Note that the end of the output range is permitted to be contained
 588:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  within [first,last).
 589:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   */
 590:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _II, typename _OI>
 591:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 592:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline _OI
 593:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     move(_II __first, _II __last, _OI __result)
 594:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 595:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       // concept requirements
 596:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_InputIteratorConcept<_II>)
 597:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OI,
 598:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    typename iterator_traits<_II>::value_type>)
 599:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_requires_can_increment_range(__first, __last, __result);
 600:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 601:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return std::__copy_move_a<true>(std::__miter_base(__first),
 602:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 				      std::__miter_base(__last), __result);
 603:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 604:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 605:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #define _GLIBCXX_MOVE3(_Tp, _Up, _Vp) std::move(_Tp, _Up, _Vp)
 606:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #else
 607:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #define _GLIBCXX_MOVE3(_Tp, _Up, _Vp) std::copy(_Tp, _Up, _Vp)
 608:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
 609:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 610:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove, bool _IsSimple, typename _Category>
 611:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     struct __copy_move_backward
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 117


 612:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 613:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       template<typename _BI1, typename _BI2>
 614:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 615:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	static _BI2
 616:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	__copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 617:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
 618:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  while (__first != __last)
 619:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    *--__result = *--__last;
 620:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  return __result;
 621:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	}
 622:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     };
 623:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 624:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 625:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _Category>
 626:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     struct __copy_move_backward<true, false, _Category>
 627:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 628:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       template<typename _BI1, typename _BI2>
 629:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 630:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	static _BI2
 631:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	__copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 632:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
 633:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  while (__first != __last)
 634:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    *--__result = std::move(*--__last);
 635:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  return __result;
 636:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	}
 637:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     };
 638:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
 639:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 640:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<>
 641:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     struct __copy_move_backward<false, false, random_access_iterator_tag>
 642:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 643:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       template<typename _BI1, typename _BI2>
 644:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 645:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	static _BI2
 646:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	__copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 647:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
 648:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  typename iterator_traits<_BI1>::difference_type
 649:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    __n = __last - __first;
 650:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  for (; __n > 0; --__n)
 651:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    *--__result = *--__last;
 652:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  return __result;
 653:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	}
 654:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     };
 655:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 656:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 657:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<>
 658:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     struct __copy_move_backward<true, false, random_access_iterator_tag>
 659:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 660:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       template<typename _BI1, typename _BI2>
 661:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 662:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	static _BI2
 663:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	__copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 664:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
 665:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  typename iterator_traits<_BI1>::difference_type
 666:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    __n = __last - __first;
 667:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  for (; __n > 0; --__n)
 668:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    *--__result = std::move(*--__last);
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 118


 669:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  return __result;
 670:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	}
 671:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     };
 672:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
 673:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 674:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove>
 675:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     struct __copy_move_backward<_IsMove, true, random_access_iterator_tag>
 676:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 677:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       template<typename _Tp>
 678:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 679:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	static _Tp*
 680:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	__copy_move_b(const _Tp* __first, const _Tp* __last, _Tp* __result)
 681:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
 682:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 683:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  using __assignable = conditional<_IsMove,
 684:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 					   is_move_assignable<_Tp>,
 685:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 					   is_copy_assignable<_Tp>>;
 686:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  // trivial types can have deleted assignment
 687:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  static_assert( __assignable::type::value, "type is not assignable" );
 688:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
 689:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  const ptrdiff_t _Num = __last - __first;
 690:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  if (_Num)
 691:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    __builtin_memmove(__result - _Num, __first, sizeof(_Tp) * _Num);
 692:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  return __result - _Num;
 693:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	}
 694:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     };
 695:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 696:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _BI1, typename _BI2>
 697:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 698:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline _BI2
 699:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_backward_a2(_BI1 __first, _BI1 __last, _BI2 __result)
 700:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 701:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_BI1>::iterator_category _Category;
 702:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #ifdef __cpp_lib_is_constant_evaluated
 703:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       if (std::is_constant_evaluated())
 704:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	return std::__copy_move_backward<_IsMove, false, _Category>::
 705:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  __copy_move_b(__first, __last, __result);
 706:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
 707:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return std::__copy_move_backward<_IsMove,
 708:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 				       __memcpyable<_BI2, _BI1>::__value,
 709:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 				       _Category>::__copy_move_b(__first,
 710:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 								 __last,
 711:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 								 __result);
 712:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 713:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 714:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _BI1, typename _BI2>
 715:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 716:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline _BI2
 717:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_backward_a1(_BI1 __first, _BI1 __last, _BI2 __result)
 718:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     { return std::__copy_move_backward_a2<_IsMove>(__first, __last, __result); }
 719:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 720:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove,
 721:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	   typename _Tp, typename _Ref, typename _Ptr, typename _OI>
 722:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _OI
 723:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_backward_a1(_GLIBCXX_STD_C::_Deque_iterator<_Tp, _Ref, _Ptr>,
 724:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 			    _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Ref, _Ptr>,
 725:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 			    _OI);
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 119


 726:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 727:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove,
 728:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	   typename _ITp, typename _IRef, typename _IPtr, typename _OTp>
 729:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX_STD_C::_Deque_iterator<_OTp, _OTp&, _OTp*>
 730:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_backward_a1(
 731:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 			_GLIBCXX_STD_C::_Deque_iterator<_ITp, _IRef, _IPtr>,
 732:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 			_GLIBCXX_STD_C::_Deque_iterator<_ITp, _IRef, _IPtr>,
 733:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 			_GLIBCXX_STD_C::_Deque_iterator<_OTp, _OTp&, _OTp*>);
 734:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 735:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _II, typename _Tp>
 736:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     typename __gnu_cxx::__enable_if<
 737:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __is_random_access_iter<_II>::__value,
 738:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Tp&, _Tp*> >::__type
 739:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_backward_a1(_II, _II,
 740:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 			    _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Tp&, _Tp*>);
 741:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 742:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 743:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 744:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline _OI
 745:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_backward_a(_II __first, _II __last, _OI __result)
 746:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 747:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return std::__niter_wrap(__result,
 748:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		std::__copy_move_backward_a1<_IsMove>
 749:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		  (std::__niter_base(__first), std::__niter_base(__last),
 750:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		   std::__niter_base(__result)));
 751:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 752:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 753:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove,
 754:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	   typename _Ite, typename _Seq, typename _Cat, typename _OI>
 755:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _OI
 756:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_backward_a(
 757:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&,
 758:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&,
 759:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		_OI);
 760:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 761:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove,
 762:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	   typename _II, typename _Ite, typename _Seq, typename _Cat>
 763:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>
 764:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_backward_a(_II, _II,
 765:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&);
 766:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 767:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove,
 768:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	   typename _IIte, typename _ISeq, typename _ICat,
 769:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	   typename _OIte, typename _OSeq, typename _OCat>
 770:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     ::__gnu_debug::_Safe_iterator<_OIte, _OSeq, _OCat>
 771:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_backward_a(
 772:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		const ::__gnu_debug::_Safe_iterator<_IIte, _ISeq, _ICat>&,
 773:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		const ::__gnu_debug::_Safe_iterator<_IIte, _ISeq, _ICat>&,
 774:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		const ::__gnu_debug::_Safe_iterator<_OIte, _OSeq, _OCat>&);
 775:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 776:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   /**
 777:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @brief Copies the range [first,last) into result.
 778:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 779:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __first  A bidirectional iterator.
 780:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __last   A bidirectional iterator.
 781:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __result A bidirectional iterator.
 782:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @return   result - (last - first)
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 120


 783:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
 784:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  The function has the same effect as copy, but starts at the end of the
 785:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  range and works its way to the start, returning the start of the result.
 786:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 787:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 788:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 789:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  optimizations such as unrolling).
 790:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
 791:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  Result may not be in the range (first,last].  Use copy instead.  Note
 792:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  that the start of the output range may overlap [first,last).
 793:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   */
 794:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _BI1, typename _BI2>
 795:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 796:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline _BI2
 797:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     copy_backward(_BI1 __first, _BI1 __last, _BI2 __result)
 798:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 799:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       // concept requirements
 800:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_BidirectionalIteratorConcept<_BI1>)
 801:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_BidirectionalIteratorConcept<_BI2>)
 802:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<
 803:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    typename iterator_traits<_BI1>::value_type,
 804:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    typename iterator_traits<_BI2>::value_type>)
 805:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_requires_can_decrement_range(__first, __last, __result);
 806:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 807:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return std::__copy_move_backward_a<__is_move_iterator<_BI1>::__value>
 808:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	     (std::__miter_base(__first), std::__miter_base(__last), __result);
 809:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 810:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 811:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 812:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   /**
 813:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @brief Moves the range [first,last) into result.
 814:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 815:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __first  A bidirectional iterator.
 816:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __last   A bidirectional iterator.
 817:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __result A bidirectional iterator.
 818:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @return   result - (last - first)
 819:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
 820:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  The function has the same effect as move, but starts at the end of the
 821:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  range and works its way to the start, returning the start of the result.
 822:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 823:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 824:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 825:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  optimizations such as unrolling).
 826:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
 827:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  Result may not be in the range (first,last].  Use move instead.  Note
 828:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  that the start of the output range may overlap [first,last).
 829:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   */
 830:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _BI1, typename _BI2>
 831:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 832:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline _BI2
 833:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     move_backward(_BI1 __first, _BI1 __last, _BI2 __result)
 834:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 835:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       // concept requirements
 836:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_BidirectionalIteratorConcept<_BI1>)
 837:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_BidirectionalIteratorConcept<_BI2>)
 838:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<
 839:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    typename iterator_traits<_BI1>::value_type,
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 121


 840:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    typename iterator_traits<_BI2>::value_type>)
 841:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_requires_can_decrement_range(__first, __last, __result);
 842:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 843:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return std::__copy_move_backward_a<true>(std::__miter_base(__first),
 844:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 					       std::__miter_base(__last),
 845:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 					       __result);
 846:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 847:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 848:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #define _GLIBCXX_MOVE_BACKWARD3(_Tp, _Up, _Vp) std::move_backward(_Tp, _Up, _Vp)
 849:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #else
 850:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #define _GLIBCXX_MOVE_BACKWARD3(_Tp, _Up, _Vp) std::copy_backward(_Tp, _Up, _Vp)
 851:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
 852:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 853:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _ForwardIterator, typename _Tp>
 854:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 855:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline typename
 856:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __gnu_cxx::__enable_if<!__is_scalar<_Tp>::__value, void>::__type
 857:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
 858:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	      const _Tp& __value)
 859:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 860:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       for (; __first != __last; ++__first)
 861:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	*__first = __value;
 862:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 863:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 864:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _ForwardIterator, typename _Tp>
 865:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 866:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline typename
 867:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __gnu_cxx::__enable_if<__is_scalar<_Tp>::__value, void>::__type
 868:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
 869:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	      const _Tp& __value)
 870:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 871:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       const _Tp __tmp = __value;
 872:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       for (; __first != __last; ++__first)
 873:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	*__first = __tmp;
 874:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 875:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 876:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // Specialization: for char types we can use memset.
 877:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _Tp>
 878:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 879:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline typename
 880:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __gnu_cxx::__enable_if<__is_byte<_Tp>::__value, void>::__type
 881:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __fill_a1(_Tp* __first, _Tp* __last, const _Tp& __c)
 882:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 883:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       const _Tp __tmp = __c;
 884:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cpp_lib_is_constant_evaluated
 885:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       if (std::is_constant_evaluated())
 886:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
 887:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  for (; __first != __last; ++__first)
 888:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    *__first = __tmp;
 889:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  return;
 890:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	}
 891:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
 892:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       if (const size_t __len = __last - __first)
 893:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	__builtin_memset(__first, static_cast<unsigned char>(__tmp), __len);
 894:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 895:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 896:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _Ite, typename _Cont, typename _Tp>
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 122


 897:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 898:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline void
 899:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __fill_a1(::__gnu_cxx::__normal_iterator<_Ite, _Cont> __first,
 900:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	      ::__gnu_cxx::__normal_iterator<_Ite, _Cont> __last,
 901:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	      const _Tp& __value)
 902:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     { std::__fill_a1(__first.base(), __last.base(), __value); }
 903:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 904:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _Tp, typename _VTp>
 905:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     void
 906:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __fill_a1(const _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Tp&, _Tp*>&,
 907:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	      const _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Tp&, _Tp*>&,
 908:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	      const _VTp&);
 909:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 910:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _FIte, typename _Tp>
 911:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 912:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline void
 913:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
 914:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     { std::__fill_a1(__first, __last, __value); }
 915:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 916:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _Ite, typename _Seq, typename _Cat, typename _Tp>
 917:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     void
 918:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __fill_a(const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&,
 919:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	     const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&,
 920:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	     const _Tp&);
 921:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 922:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   /**
 923:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @brief Fills the range [first,last) with copies of value.
 924:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 925:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __first  A forward iterator.
 926:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __last   A forward iterator.
 927:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __value  A reference-to-const of arbitrary type.
 928:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @return   Nothing.
 929:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
 930:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  This function fills a range with copies of the same value.  For char
 931:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  types filling contiguous areas of memory, this becomes an inline call
 932:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  to @c memset or @c wmemset.
 933:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   */
 934:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _ForwardIterator, typename _Tp>
 935:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 936:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline void
 937:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     fill(_ForwardIterator __first, _ForwardIterator __last, const _Tp& __value)
 1747              		.loc 21 937 5 view .LVU452
 1748              	.LBB726:
 1749              	.LBI726:
 913:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     { std::__fill_a1(__first, __last, __value); }
 1750              		.loc 21 913 5 view .LVU453
 1751              	.LBB727:
 1752              	.LBI727:
 868:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	      const _Tp& __value)
 1753              		.loc 21 868 5 view .LVU454
 1754              	.LBB728:
 872:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	*__first = __tmp;
 1755              		.loc 21 872 22 view .LVU455
 873:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 1756              		.loc 21 873 11 is_stmt 0 view .LVU456
 1757 002a 114A     		ldr	r2, .L86+12
 1758 002c 0021     		movs	r1, #0
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 123


 1759 002e 0E48     		ldr	r0, .L86+4
 1760 0030 FFF7FEFF 		bl	memset
 1761              	.LVL113:
 873:/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 1762              		.loc 21 873 11 view .LVU457
 1763              	.LBE728:
 1764              	.LBE727:
 1765              	.LBE726:
 1766              	.LBE725:
 269:granular.cpp  ****     sd_cfg.speed = daisy::SdmmcHandler::Speed::MEDIUM_SLOW;
 1767              		.loc 13 269 5 is_stmt 1 view .LVU458
 1768              		.loc 13 270 5 view .LVU459
 271:granular.cpp  ****     sd_cfg.width = daisy::SdmmcHandler::BusWidth::BITS_4;
 272:granular.cpp  ****     sdcard.Init(sd_cfg);
 1769              		.loc 13 272 16 is_stmt 0 view .LVU460
 1770 0034 01A9     		add	r1, sp, #4
 1771 0036 0F48     		ldr	r0, .L86+16
 271:granular.cpp  ****     sd_cfg.width = daisy::SdmmcHandler::BusWidth::BITS_4;
 1772              		.loc 13 271 18 view .LVU461
 1773 0038 CDE90144 		strd	r4, r4, [sp, #4]
 1774              		.loc 13 272 5 is_stmt 1 view .LVU462
 1775              		.loc 13 272 16 is_stmt 0 view .LVU463
 1776 003c FFF7FEFF 		bl	_ZN5daisy12SdmmcHandler4InitERKNS0_6ConfigE
 1777              	.LVL114:
 273:granular.cpp  **** 
 274:granular.cpp  ****     // Link hardware and FatFS
 275:granular.cpp  ****     fsi.Init(daisy::FatFSInterface::Config::MEDIA_SD);
 1778              		.loc 13 275 5 is_stmt 1 view .LVU464
 1779              		.loc 13 275 13 is_stmt 0 view .LVU465
 1780 0040 2146     		mov	r1, r4
 1781 0042 0D48     		ldr	r0, .L86+20
 1782 0044 FFF7FEFF 		bl	_ZN5daisy14FatFSInterface4InitEh
 1783              	.LVL115:
 276:granular.cpp  **** 
 277:granular.cpp  ****     loadWavFiles();
 1784              		.loc 13 277 5 is_stmt 1 view .LVU466
 1785              		.loc 13 277 17 is_stmt 0 view .LVU467
 1786 0048 FFF7FEFF 		bl	_Z12loadWavFilesv
 1787              	.LVL116:
 278:granular.cpp  **** 
 279:granular.cpp  ****     hw.StartAdc();
 1788              		.loc 13 279 5 is_stmt 1 view .LVU468
 1789              		.loc 13 279 16 is_stmt 0 view .LVU469
 1790 004c 0548     		ldr	r0, .L86
 1791 004e FFF7FEFF 		bl	_ZN5daisy10Tusenskona8StartAdcEv
 1792              	.LVL117:
 280:granular.cpp  ****     hw.StartAudio(AudioCallback);
 1793              		.loc 13 280 5 is_stmt 1 view .LVU470
 1794              		.loc 13 280 18 is_stmt 0 view .LVU471
 1795 0052 0A49     		ldr	r1, .L86+24
 1796 0054 0348     		ldr	r0, .L86
 1797 0056 FFF7FEFF 		bl	_ZN5daisy10Tusenskona10StartAudioEPFvPKPKfPPfjE
 1798              	.LVL118:
 1799              	.L84:
 281:granular.cpp  **** 
 282:granular.cpp  ****     while(1) {
 1800              		.loc 13 282 5 is_stmt 1 discriminator 1 view .LVU472
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 124


 283:granular.cpp  ****         UpdateControls();
 1801              		.loc 13 283 9 discriminator 1 view .LVU473
 1802              		.loc 13 283 23 is_stmt 0 discriminator 1 view .LVU474
 1803 005a FFF7FEFF 		bl	_Z14UpdateControlsv
 1804              	.LVL119:
 284:granular.cpp  ****         UpdateLEDs();
 1805              		.loc 13 284 9 is_stmt 1 discriminator 1 view .LVU475
 1806              		.loc 13 284 19 is_stmt 0 discriminator 1 view .LVU476
 1807 005e FFF7FEFF 		bl	_Z10UpdateLEDsv
 1808              	.LVL120:
 282:granular.cpp  ****         UpdateControls();
 1809              		.loc 13 282 5 is_stmt 1 discriminator 1 view .LVU477
 1810 0062 FAE7     		b	.L84
 1811              	.L87:
 1812              		.align	2
 1813              	.L86:
 1814 0064 00000000 		.word	.LANCHOR7
 1815 0068 00000000 		.word	buffer
 1816 006c 00000000 		.word	.LANCHOR0
 1817 0070 FCFFFF01 		.word	33554428
 1818 0074 00000000 		.word	.LANCHOR12
 1819 0078 00000000 		.word	.LANCHOR2
 1820 007c 00000000 		.word	_Z13AudioCallbackPKPKfPPfj
 1821              		.cfi_endproc
 1822              	.LFE4763:
 1824              		.section	.text.startup._GLOBAL__sub_I_hw,"ax",%progbits
 1825              		.align	1
 1826              		.p2align 2,,3
 1827              		.syntax unified
 1828              		.thumb
 1829              		.thumb_func
 1831              	_GLOBAL__sub_I_hw:
 1832              	.LFB5333:
 285:granular.cpp  ****     }
 286:granular.cpp  **** }
 1833              		.loc 13 286 1 view -0
 1834              		.cfi_startproc
 1835              		@ args = 0, pretend = 0, frame = 0
 1836              		@ frame_needed = 0, uses_anonymous_args = 0
 1837              	.LBB781:
 1838              	.LBI781:
 1839              		.loc 13 286 1 view .LVU479
 1840              	.LVL121:
 1841              	.LBB782:
 1842              	.LBB783:
 1843              	.LBI783:
  30:../../tusenskona/src/tusenskona.h ****     ~Tusenskona() {}
 1844              		.loc 2 30 5 view .LVU480
 1845              	.LBB784:
 1846              	.LBB785:
 1847              	.LBI785:
  21:../../libDaisy//src/daisy_seed.h ****     ~DaisySeed() {}
 1848              		.loc 8 21 5 view .LVU481
 1849              	.LBB786:
 1850              	.LBB787:
 1851              	.LBI787:
 1852              		.file 22 "../../libDaisy//src/per/qspi.h"
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 125


   1:../../libDaisy//src/per/qspi.h **** #ifndef DSY_QSPI
   2:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI /**< Macro */
   3:../../libDaisy//src/per/qspi.h **** 
   4:../../libDaisy//src/per/qspi.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation
   5:../../libDaisy//src/per/qspi.h **** 
   6:../../libDaisy//src/per/qspi.h **** #include <cstdint>
   7:../../libDaisy//src/per/qspi.h **** #include "daisy_core.h" // Added for dsy_gpio_pin typedef
   8:../../libDaisy//src/per/qspi.h **** 
   9:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_TEXT       \
  10:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  11:../../libDaisy//src/per/qspi.h ****         ".qspiflash_text"))) /**< used for reading memory in memory_mapped mode. */
  12:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_DATA       \
  13:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  14:../../libDaisy//src/per/qspi.h ****         ".qspiflash_data"))) /**< used for reading memory in memory_mapped mode. */
  15:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_BSS        \
  16:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  17:../../libDaisy//src/per/qspi.h ****         ".qspiflash_bss"))) /**< used for reading memory in memory_mapped mode. */
  18:../../libDaisy//src/per/qspi.h **** 
  19:../../libDaisy//src/per/qspi.h **** namespace daisy
  20:../../libDaisy//src/per/qspi.h **** {
  21:../../libDaisy//src/per/qspi.h **** /** @addtogroup serial
  22:../../libDaisy//src/per/qspi.h **** @{
  23:../../libDaisy//src/per/qspi.h **** */
  24:../../libDaisy//src/per/qspi.h **** 
  25:../../libDaisy//src/per/qspi.h **** /** 
  26:../../libDaisy//src/per/qspi.h ****  Driver for QSPI peripheral to interface with external flash memory. \n 
  27:../../libDaisy//src/per/qspi.h ****     Currently supported QSPI Devices: \n 
  28:../../libDaisy//src/per/qspi.h ****     * IS25LP080D
  29:../../libDaisy//src/per/qspi.h **** */
  30:../../libDaisy//src/per/qspi.h **** class QSPIHandle
  31:../../libDaisy//src/per/qspi.h **** {
  32:../../libDaisy//src/per/qspi.h ****   public:
  33:../../libDaisy//src/per/qspi.h ****     enum Result
  34:../../libDaisy//src/per/qspi.h ****     {
  35:../../libDaisy//src/per/qspi.h ****         OK = 0,
  36:../../libDaisy//src/per/qspi.h ****         ERR
  37:../../libDaisy//src/per/qspi.h ****     };
  38:../../libDaisy//src/per/qspi.h **** 
  39:../../libDaisy//src/per/qspi.h ****     /** Indicates the current status of the module. 
  40:../../libDaisy//src/per/qspi.h ****          *  Warnings are indicated by a leading W.
  41:../../libDaisy//src/per/qspi.h ****          *  Errors are indicated by a leading E and cause an immediate exit.
  42:../../libDaisy//src/per/qspi.h ****          * 
  43:../../libDaisy//src/per/qspi.h ****          *  \param GOOD - No errors have been reported.
  44:../../libDaisy//src/per/qspi.h ****          *  \param E_HAL_ERROR - HAL code did not return HAL_OK.
  45:../../libDaisy//src/per/qspi.h ****          *  \param E_SWITCHING_MODES - An error was encountered while switching QSPI peripheral mod
  46:../../libDaisy//src/per/qspi.h ****          *  \param E_INVALID_MODE - QSPI should not be written to while the program is executing fr
  47:../../libDaisy//src/per/qspi.h ****          */
  48:../../libDaisy//src/per/qspi.h ****     enum Status
  49:../../libDaisy//src/per/qspi.h ****     {
  50:../../libDaisy//src/per/qspi.h ****         GOOD = 0,
  51:../../libDaisy//src/per/qspi.h ****         E_HAL_ERROR,
  52:../../libDaisy//src/per/qspi.h ****         E_SWITCHING_MODES,
  53:../../libDaisy//src/per/qspi.h ****         E_INVALID_MODE,
  54:../../libDaisy//src/per/qspi.h ****     };
  55:../../libDaisy//src/per/qspi.h **** 
  56:../../libDaisy//src/per/qspi.h ****     /** Configuration structure for interfacing with QSPI Driver */
  57:../../libDaisy//src/per/qspi.h ****     struct Config
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 126


  58:../../libDaisy//src/per/qspi.h ****     {
  59:../../libDaisy//src/per/qspi.h ****         /** Flash Devices supported. (Both of these are more-or-less the same, just different sizes
  60:../../libDaisy//src/per/qspi.h ****         enum Device
  61:../../libDaisy//src/per/qspi.h ****         {
  62:../../libDaisy//src/per/qspi.h ****             IS25LP080D,  /**< & */
  63:../../libDaisy//src/per/qspi.h ****             IS25LP064A,  /**< & */
  64:../../libDaisy//src/per/qspi.h ****             DEVICE_LAST, /**< & */
  65:../../libDaisy//src/per/qspi.h ****         };
  66:../../libDaisy//src/per/qspi.h **** 
  67:../../libDaisy//src/per/qspi.h ****         /** 
  68:../../libDaisy//src/per/qspi.h ****         Modes of operation.
  69:../../libDaisy//src/per/qspi.h ****         Memory Mapped mode: QSPI configured so that the QSPI can be
  70:../../libDaisy//src/per/qspi.h ****         read from starting address 0x90000000. Writing is not
  71:../../libDaisy//src/per/qspi.h ****         possible in this mode. \n 
  72:../../libDaisy//src/per/qspi.h ****         Indirect Polling mode: Device driver enabled. 
  73:../../libDaisy//src/per/qspi.h ****         */
  74:../../libDaisy//src/per/qspi.h ****         enum Mode
  75:../../libDaisy//src/per/qspi.h ****         {
  76:../../libDaisy//src/per/qspi.h ****             MEMORY_MAPPED,    /**< & */
  77:../../libDaisy//src/per/qspi.h ****             INDIRECT_POLLING, /**< & */
  78:../../libDaisy//src/per/qspi.h ****             MODE_LAST,
  79:../../libDaisy//src/per/qspi.h ****         };
  80:../../libDaisy//src/per/qspi.h **** 
  81:../../libDaisy//src/per/qspi.h ****         //SCK,  CE# (active low)
  82:../../libDaisy//src/per/qspi.h ****         struct
  83:../../libDaisy//src/per/qspi.h ****         {
  84:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io0; /**< & */
  85:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io1; /**< & */
  86:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io2; /**< & */
  87:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io3; /**< & */
  88:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin clk; /**< & */
  89:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin ncs; /**< & */
  90:../../libDaisy//src/per/qspi.h ****         } pin_config;
  91:../../libDaisy//src/per/qspi.h **** 
  92:../../libDaisy//src/per/qspi.h ****         Device device;
  93:../../libDaisy//src/per/qspi.h ****         Mode   mode;
  94:../../libDaisy//src/per/qspi.h ****     };
  95:../../libDaisy//src/per/qspi.h **** 
  96:../../libDaisy//src/per/qspi.h ****     /** 
  97:../../libDaisy//src/per/qspi.h ****         Initializes QSPI peripheral, and Resets, and prepares memory for access.
  98:../../libDaisy//src/per/qspi.h ****         \param config should be populated with the mode, device and pin_config before calling this 
  99:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 100:../../libDaisy//src/per/qspi.h ****         */
 101:../../libDaisy//src/per/qspi.h ****     Result Init(const Config& config);
 102:../../libDaisy//src/per/qspi.h **** 
 103:../../libDaisy//src/per/qspi.h ****     /** Returns the current config. */
 104:../../libDaisy//src/per/qspi.h ****     const Config& GetConfig() const;
 105:../../libDaisy//src/per/qspi.h **** 
 106:../../libDaisy//src/per/qspi.h ****     // Couldn't this just be called before anything else in init? That
 107:../../libDaisy//src/per/qspi.h ****     // would make manually calling it unnecessary.
 108:../../libDaisy//src/per/qspi.h ****     /** 
 109:../../libDaisy//src/per/qspi.h ****         Deinitializes the peripheral
 110:../../libDaisy//src/per/qspi.h ****         This should be called before reinitializing QSPI in a different mode.
 111:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 112:../../libDaisy//src/per/qspi.h ****         */
 113:../../libDaisy//src/per/qspi.h ****     Result DeInit();
 114:../../libDaisy//src/per/qspi.h **** 
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 127


 115:../../libDaisy//src/per/qspi.h ****     /** 
 116:../../libDaisy//src/per/qspi.h ****         Writes a single page to to the specified address on the QSPI chip.
 117:../../libDaisy//src/per/qspi.h ****         For IS25LP*, page size is 256 bytes.
 118:../../libDaisy//src/per/qspi.h ****         \param address Address to write to
 119:../../libDaisy//src/per/qspi.h ****         \param size Buffer size
 120:../../libDaisy//src/per/qspi.h ****         \param buffer Buffer to write
 121:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 122:../../libDaisy//src/per/qspi.h ****         */
 123:../../libDaisy//src/per/qspi.h ****     Result WritePage(uint32_t address, uint32_t size, uint8_t* buffer);
 124:../../libDaisy//src/per/qspi.h **** 
 125:../../libDaisy//src/per/qspi.h ****     /** 
 126:../../libDaisy//src/per/qspi.h ****         Writes data in buffer to to the QSPI. Starting at address to address+size 
 127:../../libDaisy//src/per/qspi.h ****         \param address Address to write to
 128:../../libDaisy//src/per/qspi.h ****         \param size Buffer size
 129:../../libDaisy//src/per/qspi.h ****         \param buffer Buffer to write
 130:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 131:../../libDaisy//src/per/qspi.h ****         */
 132:../../libDaisy//src/per/qspi.h ****     Result Write(uint32_t address, uint32_t size, uint8_t* buffer);
 133:../../libDaisy//src/per/qspi.h **** 
 134:../../libDaisy//src/per/qspi.h ****     /** 
 135:../../libDaisy//src/per/qspi.h ****         Erases the area specified on the chip.
 136:../../libDaisy//src/per/qspi.h ****         Erasures will happen by 4K, 32K or 64K increments.
 137:../../libDaisy//src/per/qspi.h ****         Smallest erase possible is 4kB at a time. (on IS25LP*)
 138:../../libDaisy//src/per/qspi.h ****         \param start_addr Address to begin erasing from
 139:../../libDaisy//src/per/qspi.h ****         \param end_addr  Address to stop erasing at
 140:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 141:../../libDaisy//src/per/qspi.h ****         */
 142:../../libDaisy//src/per/qspi.h ****     Result Erase(uint32_t start_addr, uint32_t end_addr);
 143:../../libDaisy//src/per/qspi.h **** 
 144:../../libDaisy//src/per/qspi.h ****     /**  
 145:../../libDaisy//src/per/qspi.h ****          Erases a single sector of the chip.  
 146:../../libDaisy//src/per/qspi.h ****         TODO: Document the size of this function. 
 147:../../libDaisy//src/per/qspi.h ****         \param address Address of sector to erase
 148:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 149:../../libDaisy//src/per/qspi.h ****         */
 150:../../libDaisy//src/per/qspi.h ****     Result EraseSector(uint32_t address);
 151:../../libDaisy//src/per/qspi.h **** 
 152:../../libDaisy//src/per/qspi.h ****     /** Returns the current class status. Useful for debugging.
 153:../../libDaisy//src/per/qspi.h ****      *  \returns Status
 154:../../libDaisy//src/per/qspi.h ****      */
 155:../../libDaisy//src/per/qspi.h ****     Status GetStatus();
 156:../../libDaisy//src/per/qspi.h **** 
 157:../../libDaisy//src/per/qspi.h ****     /** Returns a pointer to the actual memory used 
 158:../../libDaisy//src/per/qspi.h ****      *  The memory at this address is read-only
 159:../../libDaisy//src/per/qspi.h ****      *  to write to it use the Write function.
 160:../../libDaisy//src/per/qspi.h ****      * 
 161:../../libDaisy//src/per/qspi.h ****      *  \param offset returns the pointer starting this 
 162:../../libDaisy//src/per/qspi.h ****      *                many bytes into the memory
 163:../../libDaisy//src/per/qspi.h ****     */
 164:../../libDaisy//src/per/qspi.h ****     void* GetData(uint32_t offset = 0);
 165:../../libDaisy//src/per/qspi.h **** 
 166:../../libDaisy//src/per/qspi.h ****     QSPIHandle() : pimpl_(nullptr) {}
 1853              		.loc 22 166 5 view .LVU482
 1854              	.LBE787:
 1855              	.LBE786:
 1856              	.LBE785:
 1857              	.LBE784:
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 128


 1858              	.LBE783:
 1859              	.LBE782:
 1860              	.LBE781:
 1861              		.loc 13 286 1 is_stmt 0 view .LVU483
 1862 0000 08B5     		push	{r3, lr}
 1863              		.cfi_def_cfa_offset 8
 1864              		.cfi_offset 3, -8
 1865              		.cfi_offset 14, -4
 1866              	.LBB835:
 1867              	.LBB833:
 1868              	.LBB826:
 1869              	.LBB824:
 1870              	.LBB808:
 1871              	.LBB806:
 1872              	.LBB792:
 1873              	.LBB788:
 1874              	.LBB789:
 1875              		.loc 22 166 34 view .LVU484
 1876 0002 0B48     		ldr	r0, .L90
 1877 0004 0023     		movs	r3, #0
 1878              	.LBE789:
 1879              	.LBE788:
 1880              	.LBE792:
 1881              	.LBE806:
 1882              	.LBE808:
 1883              	.LBE824:
 1884              	.LBE826:
   5:granular.cpp  **** dsp::Granulator gran;
 1885              		.loc 13 5 19 view .LVU485
 1886 0006 0B4A     		ldr	r2, .L90+4
 1887 0008 0B49     		ldr	r1, .L90+8
 1888              	.LBB827:
 1889              	.LBB825:
 1890              	.LBB809:
 1891              	.LBB807:
 1892              	.LBB793:
 1893              	.LBB791:
 1894              	.LBB790:
 1895              		.loc 22 166 34 view .LVU486
 1896 000a 0360     		str	r3, [r0]
 1897              	.LVL122:
 1898              		.loc 22 166 34 view .LVU487
 1899              	.LBE790:
 1900              	.LBE791:
 1901              	.LBE793:
 1902              	.LBB794:
 1903              	.LBI794:
  87:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 1904              		.loc 12 87 5 is_stmt 1 view .LVU488
 1905              	.LBB795:
 1906              	.LBB796:
  87:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 1907              		.loc 12 87 35 is_stmt 0 view .LVU489
 1908 000c 4361     		str	r3, [r0, #20]
 1909              	.LVL123:
  87:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 1910              		.loc 12 87 35 view .LVU490
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 129


 1911              	.LBE796:
 1912              	.LBE795:
 1913              	.LBE794:
 1914              	.LBB797:
 1915              	.LBI797:
 109:../../libDaisy//src/per/adc.h ****     ~AdcHandle() {}
 1916              		.loc 11 109 5 is_stmt 1 view .LVU491
 109:../../libDaisy//src/per/adc.h ****     ~AdcHandle() {}
 1917              		.loc 11 109 5 is_stmt 0 view .LVU492
 1918              	.LBE797:
 1919              	.LBB798:
 1920              	.LBI798:
 1921              		.file 23 "../../libDaisy//src/per/dac.h"
   1:../../libDaisy//src/per/dac.h **** #pragma once
   2:../../libDaisy//src/per/dac.h **** #ifndef DSY_DAC_H
   3:../../libDaisy//src/per/dac.h **** #define DSY_DAC_H
   4:../../libDaisy//src/per/dac.h **** 
   5:../../libDaisy//src/per/dac.h **** #include "daisy_core.h"
   6:../../libDaisy//src/per/dac.h **** 
   7:../../libDaisy//src/per/dac.h **** namespace daisy
   8:../../libDaisy//src/per/dac.h **** {
   9:../../libDaisy//src/per/dac.h **** /** @brief DAC handle for Built-in DAC Peripheral 
  10:../../libDaisy//src/per/dac.h ****  *  @ingroup per_analog
  11:../../libDaisy//src/per/dac.h ****  ** 
  12:../../libDaisy//src/per/dac.h ****  ** For now only Normal Mode is supported,
  13:../../libDaisy//src/per/dac.h ****  ** Sample and hold mode provides reduced power consumption, but requires a bit more setup.
  14:../../libDaisy//src/per/dac.h ****  **
  15:../../libDaisy//src/per/dac.h ****  ** For now connecting the DAC through other internal peripherals is also not supported.
  16:../../libDaisy//src/per/dac.h ****  **
  17:../../libDaisy//src/per/dac.h ****  ** Since the DAC channels have dedicated pins we don't need to pass in a pin config like with
  18:../../libDaisy//src/per/dac.h ****  ** other modules. However, it is still important to not try to use the DAC pins for anything else.
  19:../../libDaisy//src/per/dac.h ****  ** DAC Channel 1 is on PA4, and DAC Channel 2 is on PA5
  20:../../libDaisy//src/per/dac.h ****  ***/
  21:../../libDaisy//src/per/dac.h **** class DacHandle
  22:../../libDaisy//src/per/dac.h **** {
  23:../../libDaisy//src/per/dac.h ****   public:
  24:../../libDaisy//src/per/dac.h ****     /** Return Values for the DacHandle class */
  25:../../libDaisy//src/per/dac.h ****     enum class Result
  26:../../libDaisy//src/per/dac.h ****     {
  27:../../libDaisy//src/per/dac.h ****         OK,
  28:../../libDaisy//src/per/dac.h ****         ERR,
  29:../../libDaisy//src/per/dac.h ****     };
  30:../../libDaisy//src/per/dac.h **** 
  31:../../libDaisy//src/per/dac.h ****     /** Selects which channel(s) will be configured for use. */
  32:../../libDaisy//src/per/dac.h ****     enum class Channel
  33:../../libDaisy//src/per/dac.h ****     {
  34:../../libDaisy//src/per/dac.h ****         ONE,
  35:../../libDaisy//src/per/dac.h ****         TWO,
  36:../../libDaisy//src/per/dac.h ****         BOTH,
  37:../../libDaisy//src/per/dac.h ****     };
  38:../../libDaisy//src/per/dac.h **** 
  39:../../libDaisy//src/per/dac.h ****     /** Sets the Mode for the DAC channels.
  40:../../libDaisy//src/per/dac.h ****      **
  41:../../libDaisy//src/per/dac.h ****      ** Polling mode uses the blocking mode to transmit a single value at a time.
  42:../../libDaisy//src/per/dac.h ****      **
  43:../../libDaisy//src/per/dac.h ****      ** DMA mode uses a buffer, and periodically transmits it triggering a 
  44:../../libDaisy//src/per/dac.h ****      ** callback to fill the buffer when it is ready for more samples.
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 130


  45:../../libDaisy//src/per/dac.h ****      ***/
  46:../../libDaisy//src/per/dac.h ****     enum class Mode
  47:../../libDaisy//src/per/dac.h ****     {
  48:../../libDaisy//src/per/dac.h ****         POLLING,
  49:../../libDaisy//src/per/dac.h ****         DMA,
  50:../../libDaisy//src/per/dac.h ****     };
  51:../../libDaisy//src/per/dac.h **** 
  52:../../libDaisy//src/per/dac.h ****     /** Sets the number of bits per sample transmitted out of the DAC.
  53:../../libDaisy//src/per/dac.h ****      ** The output range will be: 0V - VDDA
  54:../../libDaisy//src/per/dac.h ****      ** The resolution will be roughly: bitdepth / (VDDA - 0V) 
  55:../../libDaisy//src/per/dac.h ****      ***/
  56:../../libDaisy//src/per/dac.h ****     enum class BitDepth
  57:../../libDaisy//src/per/dac.h ****     {
  58:../../libDaisy//src/per/dac.h ****         BITS_8,
  59:../../libDaisy//src/per/dac.h ****         BITS_12
  60:../../libDaisy//src/per/dac.h ****     };
  61:../../libDaisy//src/per/dac.h **** 
  62:../../libDaisy//src/per/dac.h ****     /** Sets whether the DAC output is buffered for higher drive ability. */
  63:../../libDaisy//src/per/dac.h ****     enum class BufferState
  64:../../libDaisy//src/per/dac.h ****     {
  65:../../libDaisy//src/per/dac.h ****         ENABLED,
  66:../../libDaisy//src/per/dac.h ****         DISABLED,
  67:../../libDaisy//src/per/dac.h ****     };
  68:../../libDaisy//src/per/dac.h **** 
  69:../../libDaisy//src/per/dac.h ****     /** Configuration structure for initializing the DAC structure. */
  70:../../libDaisy//src/per/dac.h ****     struct Config
  71:../../libDaisy//src/per/dac.h ****     {
  72:../../libDaisy//src/per/dac.h ****         /** Target Samplerate in Hz used to configure the internal 
  73:../../libDaisy//src/per/dac.h ****          ** timebase for DMA mode. Does nothing in POLLING mode.
  74:../../libDaisy//src/per/dac.h ****          ** If the value is 0 at Init time this will default to 48000Hz 
  75:../../libDaisy//src/per/dac.h ****          ** otherwise the driver will attempt meet the target.*/
  76:../../libDaisy//src/per/dac.h ****         uint32_t target_samplerate;
  77:../../libDaisy//src/per/dac.h **** 
  78:../../libDaisy//src/per/dac.h ****         Channel     chn;
  79:../../libDaisy//src/per/dac.h ****         Mode        mode;
  80:../../libDaisy//src/per/dac.h ****         BitDepth    bitdepth;
  81:../../libDaisy//src/per/dac.h ****         BufferState buff_state;
  82:../../libDaisy//src/per/dac.h ****     };
  83:../../libDaisy//src/per/dac.h **** 
  84:../../libDaisy//src/per/dac.h ****     DacHandle() : pimpl_(nullptr) {}
 1922              		.loc 23 84 5 is_stmt 1 view .LVU493
 1923              	.LBB799:
 1924              	.LBB800:
 1925              		.loc 23 84 33 is_stmt 0 view .LVU494
 1926 000e 0362     		str	r3, [r0, #32]
 1927              	.LVL124:
 1928              		.loc 23 84 33 view .LVU495
 1929              	.LBE800:
 1930              	.LBE799:
 1931              	.LBE798:
 1932              	.LBB801:
 1933              	.LBI801:
  40:../../libDaisy//src/hid/usb.h **** 
 1934              		.loc 10 40 5 is_stmt 1 view .LVU496
  40:../../libDaisy//src/hid/usb.h **** 
 1935              		.loc 10 40 5 is_stmt 0 view .LVU497
 1936              	.LBE801:
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 131


 1937              	.LBB802:
 1938              	.LBI802:
  96:../../libDaisy//src/sys/system.h ****     ~System() {}
 1939              		.loc 9 96 5 is_stmt 1 view .LVU498
  96:../../libDaisy//src/sys/system.h ****     ~System() {}
 1940              		.loc 9 96 5 is_stmt 0 view .LVU499
 1941              	.LBE802:
 1942              	.LBB803:
 1943              	.LBI803:
 1944              		.file 24 "../../libDaisy//src/per/sai.h"
   1:../../libDaisy//src/per/sai.h **** #pragma once
   2:../../libDaisy//src/per/sai.h **** #ifndef DSY_SAI_H
   3:../../libDaisy//src/per/sai.h **** #define DSY_SAI_H
   4:../../libDaisy//src/per/sai.h **** 
   5:../../libDaisy//src/per/sai.h **** #include "daisy_core.h"
   6:../../libDaisy//src/per/sai.h **** 
   7:../../libDaisy//src/per/sai.h **** namespace daisy
   8:../../libDaisy//src/per/sai.h **** {
   9:../../libDaisy//src/per/sai.h **** /** 
  10:../../libDaisy//src/per/sai.h ****  * Support for I2S Audio Protocol with different bit-depth, samplerate options
  11:../../libDaisy//src/per/sai.h ****  * Allows for master or slave, as well as freedom of selecting direction, 
  12:../../libDaisy//src/per/sai.h ****  * and other behavior for each peripheral, and block.
  13:../../libDaisy//src/per/sai.h ****  * 
  14:../../libDaisy//src/per/sai.h ****  * DMA Transfer commands must use buffers located within non-cached memory or use cache maintenance
  15:../../libDaisy//src/per/sai.h ****  * To declare an unitialized global element in the DMA memory section:
  16:../../libDaisy//src/per/sai.h ****  *    int32_t DSY_DMA_BUFFER_SECTOR my_buffer[96];
  17:../../libDaisy//src/per/sai.h ****  *
  18:../../libDaisy//src/per/sai.h ****  * Callback functions will be called once per half of the buffer. In the above example, 
  19:../../libDaisy//src/per/sai.h ****  * the callback function would be called once for every 48 samples.
  20:../../libDaisy//src/per/sai.h ****  * 
  21:../../libDaisy//src/per/sai.h ****  * Use SAI Handle like this:
  22:../../libDaisy//src/per/sai.h ****  * 
  23:../../libDaisy//src/per/sai.h ****  *  SaiHandle::Config sai_config;
  24:../../libDaisy//src/per/sai.h ****  *  sai_config.periph          = SaiHandle::Config::Peripheral::SAI_1;
  25:../../libDaisy//src/per/sai.h ****  *  sai_config.sr              = SaiHandle::Config::SampleRate::SAI_48KHZ;
  26:../../libDaisy//src/per/sai.h ****  *  sai_config.bit_depth       = SaiHandle::Config::BitDepth::SAI_24BIT;
  27:../../libDaisy//src/per/sai.h ****  *  sai_config.a_sync          = SaiHandle::Config::Sync::MASTER;
  28:../../libDaisy//src/per/sai.h ****  *  sai_config.b_sync          = SaiHandle::Config::Sync::SLAVE;
  29:../../libDaisy//src/per/sai.h ****  *  sai_config.a_dir           = SaiHandle::Config::Direction::RECEIVE;
  30:../../libDaisy//src/per/sai.h ****  *  sai_config.b_dir           = SaiHandle::Config::Direction::TRANSMIT;
  31:../../libDaisy//src/per/sai.h ****  *  sai_config.pin_config.fs   = {DSY_GPIOE, 4};
  32:../../libDaisy//src/per/sai.h ****  *  sai_config.pin_config.mclk = {DSY_GPIOE, 2};
  33:../../libDaisy//src/per/sai.h ****  *  sai_config.pin_config.sck  = {DSY_GPIOE, 5};
  34:../../libDaisy//src/per/sai.h ****  *  sai_config.pin_config.sa   = {DSY_GPIOE, 6};
  35:../../libDaisy//src/per/sai.h ****  *  sai_config.pin_config.sb   = {DSY_GPIOE, 3};
  36:../../libDaisy//src/per/sai.h ****  *  // Then Initialize
  37:../../libDaisy//src/per/sai.h ****  *  SaiHandle sai;
  38:../../libDaisy//src/per/sai.h ****  *  sai.Init(sai_config);
  39:../../libDaisy//src/per/sai.h ****  *  // Now you can use it:
  40:../../libDaisy//src/per/sai.h ****  *  sai.StartDma(. . .);
  41:../../libDaisy//src/per/sai.h ****  */
  42:../../libDaisy//src/per/sai.h **** class SaiHandle
  43:../../libDaisy//src/per/sai.h **** {
  44:../../libDaisy//src/per/sai.h ****   public:
  45:../../libDaisy//src/per/sai.h ****     /** Contains settings for initialising an SAI Interface */
  46:../../libDaisy//src/per/sai.h ****     struct Config
  47:../../libDaisy//src/per/sai.h ****     {
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 132


  48:../../libDaisy//src/per/sai.h ****         /** Specifies the internal peripheral to use (mapped to different hardware pins) */
  49:../../libDaisy//src/per/sai.h ****         enum class Peripheral
  50:../../libDaisy//src/per/sai.h ****         {
  51:../../libDaisy//src/per/sai.h ****             SAI_1,
  52:../../libDaisy//src/per/sai.h ****             SAI_2,
  53:../../libDaisy//src/per/sai.h ****         };
  54:../../libDaisy//src/per/sai.h **** 
  55:../../libDaisy//src/per/sai.h ****         /** Rate at which samples will be streaming to/from the device. */
  56:../../libDaisy//src/per/sai.h ****         enum class SampleRate
  57:../../libDaisy//src/per/sai.h ****         {
  58:../../libDaisy//src/per/sai.h ****             SAI_8KHZ,
  59:../../libDaisy//src/per/sai.h ****             SAI_16KHZ,
  60:../../libDaisy//src/per/sai.h ****             SAI_32KHZ,
  61:../../libDaisy//src/per/sai.h ****             SAI_48KHZ,
  62:../../libDaisy//src/per/sai.h ****             SAI_96KHZ,
  63:../../libDaisy//src/per/sai.h ****         };
  64:../../libDaisy//src/per/sai.h **** 
  65:../../libDaisy//src/per/sai.h ****         /** Bit Depth that the hardware expects to be transferred to/from the device. */
  66:../../libDaisy//src/per/sai.h ****         enum class BitDepth
  67:../../libDaisy//src/per/sai.h ****         {
  68:../../libDaisy//src/per/sai.h ****             SAI_16BIT,
  69:../../libDaisy//src/per/sai.h ****             SAI_24BIT,
  70:../../libDaisy//src/per/sai.h ****             SAI_32BIT,
  71:../../libDaisy//src/per/sai.h ****         };
  72:../../libDaisy//src/per/sai.h **** 
  73:../../libDaisy//src/per/sai.h ****         /** Specifies whether a particular block is the master or the slave 
  74:../../libDaisy//src/per/sai.h ****          ** If both are set to slave, no MCLK signal will be used, and it is
  75:../../libDaisy//src/per/sai.h ****          ** expected that the codec will have its own xtal.
  76:../../libDaisy//src/per/sai.h ****          */
  77:../../libDaisy//src/per/sai.h ****         enum class Sync
  78:../../libDaisy//src/per/sai.h ****         {
  79:../../libDaisy//src/per/sai.h ****             MASTER,
  80:../../libDaisy//src/per/sai.h ****             SLAVE,
  81:../../libDaisy//src/per/sai.h ****         };
  82:../../libDaisy//src/per/sai.h **** 
  83:../../libDaisy//src/per/sai.h ****         /** Specifies the direction for each peripheral block. */
  84:../../libDaisy//src/per/sai.h ****         enum class Direction
  85:../../libDaisy//src/per/sai.h ****         {
  86:../../libDaisy//src/per/sai.h ****             TRANSMIT,
  87:../../libDaisy//src/per/sai.h ****             RECEIVE,
  88:../../libDaisy//src/per/sai.h ****         };
  89:../../libDaisy//src/per/sai.h **** 
  90:../../libDaisy//src/per/sai.h ****         Peripheral periph;
  91:../../libDaisy//src/per/sai.h ****         struct
  92:../../libDaisy//src/per/sai.h ****         {
  93:../../libDaisy//src/per/sai.h ****             dsy_gpio_pin mclk, fs, sck, sa, sb;
  94:../../libDaisy//src/per/sai.h ****         } pin_config;
  95:../../libDaisy//src/per/sai.h ****         SampleRate sr;
  96:../../libDaisy//src/per/sai.h ****         BitDepth   bit_depth;
  97:../../libDaisy//src/per/sai.h ****         Sync       a_sync, b_sync;
  98:../../libDaisy//src/per/sai.h ****         Direction  a_dir, b_dir;
  99:../../libDaisy//src/per/sai.h ****     };
 100:../../libDaisy//src/per/sai.h **** 
 101:../../libDaisy//src/per/sai.h ****     /** Return values for SAI functions */
 102:../../libDaisy//src/per/sai.h ****     enum class Result
 103:../../libDaisy//src/per/sai.h ****     {
 104:../../libDaisy//src/per/sai.h ****         OK,
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 133


 105:../../libDaisy//src/per/sai.h ****         ERR,
 106:../../libDaisy//src/per/sai.h ****     };
 107:../../libDaisy//src/per/sai.h **** 
 108:../../libDaisy//src/per/sai.h ****     SaiHandle() : pimpl_(nullptr) {}
 1945              		.loc 24 108 5 is_stmt 1 view .LVU500
 1946              	.LBB804:
 1947              	.LBB805:
 1948              		.loc 24 108 33 is_stmt 0 view .LVU501
 1949 0010 C363     		str	r3, [r0, #60]
 1950              	.LVL125:
 1951              		.loc 24 108 33 view .LVU502
 1952              	.LBE805:
 1953              	.LBE804:
 1954              	.LBE803:
 1955              	.LBE807:
 1956              	.LBE809:
 1957              	.LBB810:
 1958              	.LBI810:
  20:../../libDaisy//src/hid/encoder.h ****     ~Encoder() {}
 1959              		.loc 7 20 5 is_stmt 1 view .LVU503
 1960              	.LBB811:
 1961              	.LBB812:
 1962              	.LBI812:
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 1963              		.loc 5 41 5 view .LVU504
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 1964              		.loc 5 41 5 is_stmt 0 view .LVU505
 1965              	.LBE812:
 1966              	.LBE811:
 1967              	.LBE810:
 1968              	.LBB813:
 1969              	.LBI813:
  21:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
 1970              		.loc 6 21 5 is_stmt 1 view .LVU506
  21:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
 1971              		.loc 6 21 5 is_stmt 0 view .LVU507
 1972              	.LBE813:
 1973              	.LBB814:
 1974              	.LBI814:
  21:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
 1975              		.loc 6 21 5 is_stmt 1 view .LVU508
  21:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
 1976              		.loc 6 21 5 is_stmt 0 view .LVU509
 1977              	.LBE814:
 1978              	.LBB815:
 1979              	.LBI815:
  21:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
 1980              		.loc 6 21 5 is_stmt 1 view .LVU510
  21:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
 1981              		.loc 6 21 5 is_stmt 0 view .LVU511
 1982              	.LBE815:
 1983              	.LBB816:
 1984              	.LBI816:
  21:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
 1985              		.loc 6 21 5 is_stmt 1 view .LVU512
  21:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
 1986              		.loc 6 21 5 is_stmt 0 view .LVU513
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 134


 1987              	.LBE816:
 1988              	.LBB817:
 1989              	.LBI817:
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 1990              		.loc 5 41 5 is_stmt 1 view .LVU514
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 1991              		.loc 5 41 5 is_stmt 0 view .LVU515
 1992              	.LBE817:
 1993              	.LBB818:
 1994              	.LBI818:
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 1995              		.loc 5 41 5 is_stmt 1 view .LVU516
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 1996              		.loc 5 41 5 is_stmt 0 view .LVU517
 1997              	.LBE818:
 1998              	.LBB819:
 1999              	.LBI819:
  17:../../libDaisy//src/hid/rgb_led.h ****     ~RgbLed() {}
 2000              		.loc 3 17 5 is_stmt 1 view .LVU518
 2001              	.LBB820:
 2002              	.LBB821:
 2003              	.LBI821:
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 2004              		.loc 4 24 5 view .LVU519
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 2005              		.loc 4 24 5 is_stmt 0 view .LVU520
 2006              	.LBE821:
 2007              	.LBB822:
 2008              	.LBI822:
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 2009              		.loc 4 24 5 is_stmt 1 view .LVU521
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 2010              		.loc 4 24 5 is_stmt 0 view .LVU522
 2011              	.LBE822:
 2012              	.LBB823:
 2013              	.LBI823:
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 2014              		.loc 4 24 5 is_stmt 1 view .LVU523
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 2015              		.loc 4 24 5 is_stmt 0 view .LVU524
 2016              	.LBE823:
 2017              	.LBE820:
 2018              	.LBE819:
 2019              	.LBE825:
 2020              	.LBE827:
   5:granular.cpp  **** dsp::Granulator gran;
 2021              		.loc 13 5 19 view .LVU525
 2022 0012 FFF7FEFF 		bl	__aeabi_atexit
 2023              	.LVL126:
 2024              	.LBB828:
 2025              	.LBI828:
 2026              		.file 25 "../virveldsp/src/granulator.h"
   1:../virveldsp/src/granulator.h **** #pragma once
   2:../virveldsp/src/granulator.h **** #include "daisy.h"
   3:../virveldsp/src/granulator.h **** #include "daisysp.h"
   4:../virveldsp/src/granulator.h **** 
   5:../virveldsp/src/granulator.h **** namespace dsp {
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 135


   6:../virveldsp/src/granulator.h **** 
   7:../virveldsp/src/granulator.h ****     class Grain
   8:../virveldsp/src/granulator.h ****     {
   9:../virveldsp/src/granulator.h **** 
  10:../virveldsp/src/granulator.h ****     public:
  11:../virveldsp/src/granulator.h ****         void init(float * const buffer, uint32_t size);
  12:../virveldsp/src/granulator.h ****         float play();
  13:../virveldsp/src/granulator.h ****         void setActive(const bool active) { m_active = active; }
  14:../virveldsp/src/granulator.h ****         void setRate(const float rate) { m_rate = rate; }
  15:../virveldsp/src/granulator.h ****         void setOffset(const float pos) { m_next_offset = static_cast<uint32_t>(daisysp::fmin(pos *
  16:../virveldsp/src/granulator.h ****         void setJitter(const float jitter) { m_jitter = static_cast<uint32_t>(jitter * static_cast<
  17:../virveldsp/src/granulator.h ****         void setDelay(const uint32_t delayInSamples) {m_delay = delayInSamples;}
  18:../virveldsp/src/granulator.h ****         void setDuration(const float s);
  19:../virveldsp/src/granulator.h ****         void setSize(const uint32_t size) { m_size = size;}
  20:../virveldsp/src/granulator.h ****         uint32_t getDuration() { return m_duration;}
  21:../virveldsp/src/granulator.h **** 
  22:../virveldsp/src/granulator.h ****     private:
  23:../virveldsp/src/granulator.h ****         bool m_active;
  24:../virveldsp/src/granulator.h ****         float *m_buf;
  25:../virveldsp/src/granulator.h ****         float m_position;
  26:../virveldsp/src/granulator.h ****         float m_rate;
  27:../virveldsp/src/granulator.h ****         uint32_t m_offset;
  28:../virveldsp/src/granulator.h ****         uint32_t m_next_offset;
  29:../virveldsp/src/granulator.h ****         uint32_t m_duration;
  30:../virveldsp/src/granulator.h ****         uint32_t m_size;
  31:../virveldsp/src/granulator.h ****         uint32_t m_jitter;
  32:../virveldsp/src/granulator.h ****         uint32_t m_delay;
  33:../virveldsp/src/granulator.h ****     };
  34:../virveldsp/src/granulator.h **** 
  35:../virveldsp/src/granulator.h ****     class Granulator
 2027              		.loc 25 35 11 is_stmt 1 view .LVU526
 2028              	.LBB829:
 2029 0016 094B     		ldr	r3, .L90+12
 2030 0018 4FF00C0C 		mov	ip, #12
 2031              	.LBE829:
 2032              	.LBE828:
  31:granular.cpp  **** daisy::FatFSInterface fsi;
 2033              		.loc 13 31 28 is_stmt 0 view .LVU527
 2034 001c 054A     		ldr	r2, .L90+4
 2035 001e 0849     		ldr	r1, .L90+16
 2036              	.LBB831:
 2037              	.LBB830:
 2038              		.loc 25 35 11 view .LVU528
 2039 0020 83F80CC0 		strb	ip, [r3, #12]
 2040              	.LVL127:
 2041              		.loc 25 35 11 view .LVU529
 2042              	.LBE830:
 2043              	.LBE831:
 2044              	.LBB832:
 2045              	.LBI832:
  77:../../libDaisy//src/per/sdmmc.h ****     ~SdmmcHandler() {}
 2046              		.loc 1 77 5 is_stmt 1 view .LVU530
  77:../../libDaisy//src/per/sdmmc.h ****     ~SdmmcHandler() {}
 2047              		.loc 1 77 5 is_stmt 0 view .LVU531
 2048              	.LBE832:
  31:granular.cpp  **** daisy::FatFSInterface fsi;
 2049              		.loc 13 31 28 view .LVU532
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 136


 2050 0024 0748     		ldr	r0, .L90+20
 2051              	.LBE833:
 2052              	.LBE835:
 2053              		.loc 13 286 1 view .LVU533
 2054 0026 BDE80840 		pop	{r3, lr}
 2055              		.cfi_restore 14
 2056              		.cfi_restore 3
 2057              		.cfi_def_cfa_offset 0
 2058              	.LBB836:
 2059              	.LBB834:
  31:granular.cpp  **** daisy::FatFSInterface fsi;
 2060              		.loc 13 31 28 view .LVU534
 2061 002a FFF7FEBF 		b	__aeabi_atexit
 2062              	.LVL128:
 2063              	.L91:
 2064 002e 00BF     		.align	2
 2065              	.L90:
 2066 0030 00000000 		.word	.LANCHOR7
 2067 0034 00000000 		.word	__dso_handle
 2068 0038 00000000 		.word	_ZN5daisy10TusenskonaD1Ev
 2069 003c 00000000 		.word	.LANCHOR0
 2070 0040 00000000 		.word	_ZN5daisy12SdmmcHandlerD1Ev
 2071 0044 00000000 		.word	.LANCHOR12
 2072              	.LBE834:
 2073              	.LBE836:
 2074              		.cfi_endproc
 2075              	.LFE5333:
 2077              		.section	.init_array,"aw",%init_array
 2078              		.align	2
 2079 0000 00000000 		.word	_GLOBAL__sub_I_hw(target1)
 2080              		.global	m_file_sizes
 2081              		.global	m_file_info_
 2082              		.global	SDFile
 2083              		.global	fsi
 2084              		.global	clrs
 2085              		.global	ACTUAL_DURATION
 2086              		.global	blink
 2087              		.global	record
 2088              		.global	count
 2089              		.global	buffer
 2090              		.global	volume
 2091              		.global	gran
 2092              		.global	hw
 2093              		.section	.bss.ACTUAL_DURATION,"aw",%nobits
 2094              		.align	2
 2095              		.set	.LANCHOR6,. + 0
 2098              	ACTUAL_DURATION:
 2099 0000 00000000 		.space	4
 2100              		.section	.bss.SDFile,"aw",%nobits
 2101              		.align	2
 2102              		.set	.LANCHOR4,. + 0
 2105              	SDFile:
 2106 0000 00000000 		.space	556
 2106      00000000 
 2106      00000000 
 2106      00000000 
 2106      00000000 
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 137


 2107              		.section	.bss._ZL6sdcard,"aw",%nobits
 2108              		.align	2
 2109              		.set	.LANCHOR12,. + 0
 2112              	_ZL6sdcard:
 2113 0000 00       		.space	1
 2114              		.section	.bss.count,"aw",%nobits
 2115              		.align	2
 2116              		.set	.LANCHOR9,. + 0
 2119              	count:
 2120 0000 00000000 		.space	4
 2121              		.section	.bss.fsi,"aw",%nobits
 2122              		.align	2
 2123              		.set	.LANCHOR2,. + 0
 2126              	fsi:
 2127 0000 00000000 		.space	1152
 2127      00000000 
 2127      00000000 
 2127      00000000 
 2127      00000000 
 2128              		.section	.bss.gran,"aw",%nobits
 2129              		.align	2
 2130              		.set	.LANCHOR0,. + 0
 2133              	gran:
 2134 0000 00000000 		.space	976
 2134      00000000 
 2134      00000000 
 2134      00000000 
 2134      00000000 
 2135              		.section	.bss.hw,"aw",%nobits
 2136              		.align	2
 2137              		.set	.LANCHOR7,. + 0
 2140              	hw:
 2141 0000 00000000 		.space	372
 2141      00000000 
 2141      00000000 
 2141      00000000 
 2141      00000000 
 2142              		.section	.bss.m_file_info_,"aw",%nobits
 2143              		.align	2
 2144              		.set	.LANCHOR3,. + 0
 2147              	m_file_info_:
 2148 0000 00000000 		.space	300
 2148      00000000 
 2148      00000000 
 2148      00000000 
 2148      00000000 
 2149              		.section	.bss.m_file_sizes,"aw",%nobits
 2150              		.align	2
 2151              		.set	.LANCHOR5,. + 0
 2154              	m_file_sizes:
 2155 0000 00000000 		.space	4
 2156              		.section	.bss.record,"aw",%nobits
 2157              		.set	.LANCHOR8,. + 0
 2160              	record:
 2161 0000 00       		.space	1
 2162              		.section	.bss.volume,"aw",%nobits
 2163              		.align	2
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 138


 2164              		.set	.LANCHOR1,. + 0
 2167              	volume:
 2168 0000 00000000 		.space	4
 2169              		.section	.data.blink,"aw"
 2170              		.set	.LANCHOR10,. + 0
 2173              	blink:
 2174 0000 01       		.byte	1
 2175              		.section	.data.clrs,"aw"
 2176              		.align	2
 2177              		.set	.LANCHOR11,. + 0
 2180              	clrs:
 2181 0000 0000803F 		.word	1065353216
 2182 0004 00000000 		.word	0
 2183 0008 00000000 		.word	0
 2184 000c 00000000 		.word	0
 2185 0010 0000803F 		.word	1065353216
 2186 0014 00000000 		.word	0
 2187 0018 00000000 		.word	0
 2188 001c 00000000 		.word	0
 2189 0020 0000803F 		.word	1065353216
 2190 0024 0000803F 		.word	1065353216
 2191 0028 00000000 		.word	0
 2192 002c 0000803F 		.word	1065353216
 2193              		.section	.sdram_bss,"aw"
 2194              		.align	2
 2197              	buffer:
 2198 0000 00000000 		.space	33554432
 2198      00000000 
 2198      00000000 
 2198      00000000 
 2198      00000000 
 2199              		.text
 2200              	.Letext0:
 2201              		.file 26 "/Applications/ARM/arm-none-eabi/include/machine/_default_types.h"
 2202              		.file 27 "/Applications/ARM/arm-none-eabi/include/sys/_stdint.h"
 2203              		.file 28 "/Applications/ARM/arm-none-eabi/include/stdint.h"
 2204              		.file 29 "/Applications/ARM/lib/gcc/arm-none-eabi/10.3.1/include/stddef.h"
 2205              		.file 30 "/Applications/ARM/arm-none-eabi/include/c++/10.3.1/cmath"
 2206              		.file 31 "/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h"
 2207              		.file 32 "/Applications/ARM/arm-none-eabi/include/c++/10.3.1/cstdlib"
 2208              		.file 33 "/Applications/ARM/arm-none-eabi/include/c++/10.3.1/cstdint"
 2209              		.file 34 "/Applications/ARM/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bit
 2210              		.file 35 "/Applications/ARM/arm-none-eabi/include/c++/10.3.1/type_traits"
 2211              		.file 36 "/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_pair.h"
 2212              		.file 37 "/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_iterator_base_types.h"
 2213              		.file 38 "/Applications/ARM/arm-none-eabi/include/c++/10.3.1/debug/debug.h"
 2214              		.file 39 "/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/algorithmfwd.h"
 2215              		.file 40 "/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/exception_ptr.h"
 2216              		.file 41 "/Applications/ARM/arm-none-eabi/include/c++/10.3.1/cstdarg"
 2217              		.file 42 "/Applications/ARM/arm-none-eabi/include/c++/10.3.1/cstdio"
 2218              		.file 43 "/Applications/ARM/arm-none-eabi/include/c++/10.3.1/cstring"
 2219              		.file 44 "/Applications/ARM/arm-none-eabi/include/c++/10.3.1/cwchar"
 2220              		.file 45 "/Applications/ARM/arm-none-eabi/include/c++/10.3.1/clocale"
 2221              		.file 46 "/Applications/ARM/arm-none-eabi/include/c++/10.3.1/initializer_list"
 2222              		.file 47 "/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stringfwd.h"
 2223              		.file 48 "/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_iterator.h"
 2224              		.file 49 "/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/ptr_traits.h"
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 139


 2225              		.file 50 "/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/move.h"
 2226              		.file 51 "/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_iterator_base_funcs.h"
 2227              		.file 52 "/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/predefined_ops.h"
 2228              		.file 53 "/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/alloc_traits.h"
 2229              		.file 54 "/Applications/ARM/arm-none-eabi/include/c++/10.3.1/ext/type_traits.h"
 2230              		.file 55 "/Applications/ARM/arm-none-eabi/include/sys/_types.h"
 2231              		.file 56 "/Applications/ARM/arm-none-eabi/include/sys/reent.h"
 2232              		.file 57 "/Applications/ARM/arm-none-eabi/include/sys/lock.h"
 2233              		.file 58 "/Applications/ARM/arm-none-eabi/include/math.h"
 2234              		.file 59 "/Applications/ARM/arm-none-eabi/include/stdlib.h"
 2235              		.file 60 "/Applications/ARM/arm-none-eabi/include/c++/10.3.1/math.h"
 2236              		.file 61 "/Applications/ARM/arm-none-eabi/include/c++/10.3.1/stdlib.h"
 2237              		.file 62 "../../libDaisy//src/daisy_core.h"
 2238              		.file 63 "../../libDaisy//src/per/tim.h"
 2239              		.file 64 "../../libDaisy//src/util/wav_format.h"
 2240              		.file 65 "../../libDaisy//src/hid/wavplayer.h"
 2241              		.file 66 "../../libDaisy//src/util/color.h"
 2242              		.file 67 "../../libDaisy//src/dev/max11300.h"
 2243              		.file 68 "../../libDaisy//src/per/gpio.h"
 2244              		.file 69 "../../libDaisy//src/dev/sdram.h"
 2245              		.file 70 "/Applications/ARM/lib/gcc/arm-none-eabi/10.3.1/include/stdarg.h"
 2246              		.file 71 "/Applications/ARM/arm-none-eabi/include/stdio.h"
 2247              		.file 72 "../../libDaisy//Middlewares/Third_Party/FatFs/src/integer.h"
 2248              		.file 73 "../../libDaisy//Middlewares/Third_Party/FatFs/src/ff.h"
 2249              		.file 74 "/Applications/ARM/arm-none-eabi/include/string.h"
 2250              		.file 75 "../../DaisySP//Source/Control/adenv.h"
 2251              		.file 76 "../../DaisySP//Source/Utility/dsp.h"
 2252              		.file 77 "/Applications/ARM/arm-none-eabi/include/wchar.h"
 2253              		.file 78 "/Applications/ARM/arm-none-eabi/include/locale.h"
 2254              		.file 79 "../../libDaisy//src/dev/sr_595.h"
 2255              		.file 80 "/Applications/ARM/arm-none-eabi/include/c++/10.3.1/new"
 2256              		.file 81 "<built-in>"
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 140


DEFINED SYMBOLS
                            *ABS*:0000000000000000 granular.cpp
/var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s:19     .text._ZN5daisy12SdmmcHandlerD2Ev:0000000000000000 $t
/var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s:26     .text._ZN5daisy12SdmmcHandlerD2Ev:0000000000000000 _ZN5daisy12SdmmcHandlerD2Ev
/var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s:26     .text._ZN5daisy12SdmmcHandlerD2Ev:0000000000000000 _ZN5daisy12SdmmcHandlerD1Ev
/var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s:43     .text._ZN5daisy10TusenskonaD2Ev:0000000000000000 $t
/var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s:50     .text._ZN5daisy10TusenskonaD2Ev:0000000000000000 _ZN5daisy10TusenskonaD2Ev
/var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s:50     .text._ZN5daisy10TusenskonaD2Ev:0000000000000000 _ZN5daisy10TusenskonaD1Ev
/var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s:159    .text._Z13AudioCallbackPKPKfPPfj:0000000000000000 $t
/var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s:166    .text._Z13AudioCallbackPKPKfPPfj:0000000000000000 _Z13AudioCallbackPKPKfPPfj
/var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s:259    .text._Z13AudioCallbackPKPKfPPfj:0000000000000054 $d
/var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s:265    .text._Z11parseHeaderP3FIL:0000000000000000 $t
/var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s:272    .text._Z11parseHeaderP3FIL:0000000000000000 _Z11parseHeaderP3FIL
/var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s:420    .text._Z11parseHeaderP3FIL:00000000000000a0 $d
/var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s:426    .rodata._Z12loadWavFilesv.str1.4:0000000000000000 $d
/var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s:427    .rodata._Z12loadWavFilesv.str1.4:0000000000000000 .LC0
/var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s:442    .text._Z12loadWavFilesv:0000000000000000 $t
/var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s:449    .text._Z12loadWavFilesv:0000000000000000 _Z12loadWavFilesv
/var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s:1278   .text._Z12loadWavFilesv:00000000000001a8 $d
/var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s:2197   .sdram_bss:0000000000000000 buffer
/var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s:1305   .text._Z14UpdateControlsv:0000000000000000 $t
/var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s:1312   .text._Z14UpdateControlsv:0000000000000000 _Z14UpdateControlsv
/var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s:1565   .text._Z14UpdateControlsv:00000000000000c8 $d
/var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s:1574   .text._Z10UpdateLEDsv:0000000000000000 $t
/var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s:1581   .text._Z10UpdateLEDsv:0000000000000000 _Z10UpdateLEDsv
/var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s:1683   .text._Z10UpdateLEDsv:000000000000007c $d
/var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s:1694   .text.startup.main:0000000000000000 $t
/var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s:1701   .text.startup.main:0000000000000000 main
/var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s:1814   .text.startup.main:0000000000000064 $d
/var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s:1825   .text.startup._GLOBAL__sub_I_hw:0000000000000000 $t
/var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s:1831   .text.startup._GLOBAL__sub_I_hw:0000000000000000 _GLOBAL__sub_I_hw
/var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s:2066   .text.startup._GLOBAL__sub_I_hw:0000000000000030 $d
/var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s:2078   .init_array:0000000000000000 $d
/var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s:2154   .bss.m_file_sizes:0000000000000000 m_file_sizes
/var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s:2147   .bss.m_file_info_:0000000000000000 m_file_info_
/var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s:2105   .bss.SDFile:0000000000000000 SDFile
/var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s:2126   .bss.fsi:0000000000000000 fsi
/var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s:2180   .data.clrs:0000000000000000 clrs
/var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s:2098   .bss.ACTUAL_DURATION:0000000000000000 ACTUAL_DURATION
/var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s:2173   .data.blink:0000000000000000 blink
/var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s:2160   .bss.record:0000000000000000 record
/var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s:2119   .bss.count:0000000000000000 count
/var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s:2167   .bss.volume:0000000000000000 volume
/var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s:2133   .bss.gran:0000000000000000 gran
/var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s:2140   .bss.hw:0000000000000000 hw
/var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s:2094   .bss.ACTUAL_DURATION:0000000000000000 $d
/var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s:2101   .bss.SDFile:0000000000000000 $d
/var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s:2108   .bss._ZL6sdcard:0000000000000000 $d
/var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s:2112   .bss._ZL6sdcard:0000000000000000 _ZL6sdcard
/var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s:2115   .bss.count:0000000000000000 $d
/var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s:2122   .bss.fsi:0000000000000000 $d
/var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s:2129   .bss.gran:0000000000000000 $d
/var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s:2136   .bss.hw:0000000000000000 $d
/var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s:2143   .bss.m_file_info_:0000000000000000 $d
/var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s:2150   .bss.m_file_sizes:0000000000000000 $d
/var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s:2161   .bss.record:0000000000000000 $d
/var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s:2163   .bss.volume:0000000000000000 $d
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s 			page 141


/var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s:2176   .data.clrs:0000000000000000 $d
/var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccYJOnVt.s:2194   .sdram_bss:0000000000000000 $d
                           .group:0000000000000000 _ZN5daisy12SdmmcHandlerD5Ev
                           .group:0000000000000000 _ZN5daisy10TusenskonaD5Ev

UNDEFINED SYMBOLS
_ZN3dsp10Granulator4playEv
f_read
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj
f_mount
f_opendir
f_closedir
_ZdlPvj
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj
f_readdir
strstr
strcpy
f_open
f_close
_ZN3dsp10Granulator13setNumSamplesEm
_ZN5daisy10Tusenskona21ProcessAnalogControlsEv
_ZN5daisy10Tusenskona22ProcessDigitalControlsEv
_ZN5daisy10Tusenskona12GetKnobValueENS0_4KnobE
_ZN3dsp10Granulator7setRateEf
_ZN3dsp10Granulator9setOffsetEf
_ZN3dsp10Granulator11setDurationEf
_ZN3dsp10Granulator9setJitterEf
_ZN5daisy10Tusenskona10UpdateLedsEv
_ZN5daisy10Tusenskona7DelayMsEj
_ZN5daisy6RgbLed3SetEfff
_ZN5daisy10Tusenskona4InitEb
_ZN5daisy10Tusenskona17SetAudioBlockSizeEj
_ZN5daisy10Tusenskona18SetAudioSampleRateENS_9SaiHandle6Config10SampleRateE
_ZN3dsp10Granulator4initEPfm
memset
_ZN5daisy12SdmmcHandler4InitERKNS0_6ConfigE
_ZN5daisy14FatFSInterface4InitEh
_ZN5daisy10Tusenskona8StartAdcEv
_ZN5daisy10Tusenskona10StartAudioEPFvPKPKfPPfjE
__aeabi_atexit
__dso_handle
