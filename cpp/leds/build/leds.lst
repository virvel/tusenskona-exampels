ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccV2y1P7.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 2
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"leds.cpp"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text._ZN5daisy10TusenskonaD2Ev,"axG",%progbits,_ZN5daisy10TusenskonaD5Ev,comdat
  19              		.align	1
  20              		.p2align 2,,3
  21              		.weak	_ZN5daisy10TusenskonaD2Ev
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	_ZN5daisy10TusenskonaD2Ev:
  27              	.LVL0:
  28              	.LFB2580:
  29              		.file 1 "../../tusenskona/src/tusenskona.h"
   1:../../tusenskona/src/tusenskona.h **** #ifndef TUSENSKONA_H
   2:../../tusenskona/src/tusenskona.h **** #define TUSENSKONA_H
   3:../../tusenskona/src/tusenskona.h **** 
   4:../../tusenskona/src/tusenskona.h **** #include "daisy_seed.h"
   5:../../tusenskona/src/tusenskona.h **** 
   6:../../tusenskona/src/tusenskona.h **** namespace daisy
   7:../../tusenskona/src/tusenskona.h **** {
   8:../../tusenskona/src/tusenskona.h **** 
   9:../../tusenskona/src/tusenskona.h **** class Tusenskona
  10:../../tusenskona/src/tusenskona.h **** {
  11:../../tusenskona/src/tusenskona.h ****   public:
  12:../../tusenskona/src/tusenskona.h ****     /** Switches */
  13:../../tusenskona/src/tusenskona.h ****     enum Sw
  14:../../tusenskona/src/tusenskona.h ****     {
  15:../../tusenskona/src/tusenskona.h ****         BUTTON_1,    /** & */
  16:../../tusenskona/src/tusenskona.h ****         BUTTON_2,    /** & */
  17:../../tusenskona/src/tusenskona.h ****         BUTTON_LAST, /** &  */
  18:../../tusenskona/src/tusenskona.h ****     };
  19:../../tusenskona/src/tusenskona.h **** 
  20:../../tusenskona/src/tusenskona.h ****     /** Knobs */
  21:../../tusenskona/src/tusenskona.h ****     enum Knob
  22:../../tusenskona/src/tusenskona.h ****     {
  23:../../tusenskona/src/tusenskona.h ****         KNOB_1,    /** &  */
  24:../../tusenskona/src/tusenskona.h ****         KNOB_2,    /** & */
  25:../../tusenskona/src/tusenskona.h ****         KNOB_3,    /** & */
  26:../../tusenskona/src/tusenskona.h ****         KNOB_4,    /** & */
  27:../../tusenskona/src/tusenskona.h ****         KNOB_LAST, /** & */
  28:../../tusenskona/src/tusenskona.h ****     };
  29:../../tusenskona/src/tusenskona.h **** 
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccV2y1P7.s 			page 2


  30:../../tusenskona/src/tusenskona.h ****     Tusenskona() {}
  31:../../tusenskona/src/tusenskona.h ****     ~Tusenskona() {}
  30              		.loc 1 31 5 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              	.LBB229:
  36              	.LBI229:
  37              		.file 2 "../../libDaisy//src/hid/rgb_led.h"
   1:../../libDaisy//src/hid/rgb_led.h **** #pragma once
   2:../../libDaisy//src/hid/rgb_led.h **** #ifndef DSY_RGB_LED_H
   3:../../libDaisy//src/hid/rgb_led.h **** #define DSY_RGB_LED_H
   4:../../libDaisy//src/hid/rgb_led.h **** #include "hid/led.h"
   5:../../libDaisy//src/hid/rgb_led.h **** #include "util/color.h"
   6:../../libDaisy//src/hid/rgb_led.h **** 
   7:../../libDaisy//src/hid/rgb_led.h **** namespace daisy
   8:../../libDaisy//src/hid/rgb_led.h **** {
   9:../../libDaisy//src/hid/rgb_led.h **** /** @addtogroup feedback
  10:../../libDaisy//src/hid/rgb_led.h ****     @{
  11:../../libDaisy//src/hid/rgb_led.h **** */
  12:../../libDaisy//src/hid/rgb_led.h **** 
  13:../../libDaisy//src/hid/rgb_led.h **** /** 3x LEDs configured as an RGB for ease of use. */
  14:../../libDaisy//src/hid/rgb_led.h **** class RgbLed
  15:../../libDaisy//src/hid/rgb_led.h **** {
  16:../../libDaisy//src/hid/rgb_led.h ****   public:
  17:../../libDaisy//src/hid/rgb_led.h ****     RgbLed() {}
  18:../../libDaisy//src/hid/rgb_led.h ****     ~RgbLed() {}
  38              		.loc 2 18 5 view .LVU1
  39              	.LBB230:
  40              	.LBI230:
  41              		.file 3 "../../libDaisy//src/hid/led.h"
   1:../../libDaisy//src/hid/led.h **** 
   2:../../libDaisy//src/hid/led.h **** #pragma once
   3:../../libDaisy//src/hid/led.h **** #ifndef DSY_LED_H
   4:../../libDaisy//src/hid/led.h **** #define DSY_LED_H
   5:../../libDaisy//src/hid/led.h **** #include "daisy_core.h"
   6:../../libDaisy//src/hid/led.h **** #include "per/gpio.h"
   7:../../libDaisy//src/hid/led.h **** 
   8:../../libDaisy//src/hid/led.h **** /* TODO - Get this set up to work with the dev_leddriver stuff as well
   9:../../libDaisy//src/hid/led.h **** - Setup Hardware PWM for pins that have it
  10:../../libDaisy//src/hid/led.h **** */
  11:../../libDaisy//src/hid/led.h **** 
  12:../../libDaisy//src/hid/led.h **** namespace daisy
  13:../../libDaisy//src/hid/led.h **** {
  14:../../libDaisy//src/hid/led.h **** /**
  15:../../libDaisy//src/hid/led.h ****     @brief LED Class providing simple Software PWM ability, etc \n 
  16:../../libDaisy//src/hid/led.h ****     Eventually this will work with hardware PWM, and external LED Driver devices as well.
  17:../../libDaisy//src/hid/led.h ****     @author shensley
  18:../../libDaisy//src/hid/led.h ****     @date March 2020
  19:../../libDaisy//src/hid/led.h ****     @ingroup feedback
  20:../../libDaisy//src/hid/led.h **** */
  21:../../libDaisy//src/hid/led.h **** class Led
  22:../../libDaisy//src/hid/led.h **** {
  23:../../libDaisy//src/hid/led.h ****   public:
  24:../../libDaisy//src/hid/led.h ****     Led() {}
  25:../../libDaisy//src/hid/led.h ****     ~Led() {}
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccV2y1P7.s 			page 3


  42              		.loc 3 25 5 view .LVU2
  43              		.loc 3 25 5 is_stmt 0 view .LVU3
  44              	.LBE230:
  45              	.LBB231:
  46              	.LBI231:
  47              		.loc 3 25 5 is_stmt 1 view .LVU4
  48              		.loc 3 25 5 is_stmt 0 view .LVU5
  49              	.LBE231:
  50              	.LBB232:
  51              	.LBI232:
  52              		.loc 3 25 5 is_stmt 1 view .LVU6
  53              		.loc 3 25 5 is_stmt 0 view .LVU7
  54              	.LBE232:
  55              	.LBE229:
  56              	.LBB233:
  57              	.LBI233:
  58              		.file 4 "../../libDaisy//src/hid/switch.h"
   1:../../libDaisy//src/hid/switch.h **** #pragma once
   2:../../libDaisy//src/hid/switch.h **** #ifndef DSY_SWITCH_H
   3:../../libDaisy//src/hid/switch.h **** #define DSY_SWITCH_H
   4:../../libDaisy//src/hid/switch.h **** #include "daisy_core.h"
   5:../../libDaisy//src/hid/switch.h **** #include "per/gpio.h"
   6:../../libDaisy//src/hid/switch.h **** #include "sys/system.h"
   7:../../libDaisy//src/hid/switch.h **** 
   8:../../libDaisy//src/hid/switch.h **** namespace daisy
   9:../../libDaisy//src/hid/switch.h **** {
  10:../../libDaisy//src/hid/switch.h **** /** 
  11:../../libDaisy//src/hid/switch.h ****     Generic Class for handling momentary/latching switches \n 
  12:../../libDaisy//src/hid/switch.h ****     Inspired/influenced by Mutable Instruments (pichenettes) Switch classes
  13:../../libDaisy//src/hid/switch.h ****     @author Stephen Hensley
  14:../../libDaisy//src/hid/switch.h ****     @date December 2019
  15:../../libDaisy//src/hid/switch.h ****     @ingroup controls
  16:../../libDaisy//src/hid/switch.h **** */
  17:../../libDaisy//src/hid/switch.h **** class Switch
  18:../../libDaisy//src/hid/switch.h **** {
  19:../../libDaisy//src/hid/switch.h ****   public:
  20:../../libDaisy//src/hid/switch.h ****     /** Specifies the expected behavior of the switch */
  21:../../libDaisy//src/hid/switch.h ****     enum Type
  22:../../libDaisy//src/hid/switch.h ****     {
  23:../../libDaisy//src/hid/switch.h ****         TYPE_TOGGLE,    /**< & */
  24:../../libDaisy//src/hid/switch.h ****         TYPE_MOMENTARY, /**< & */
  25:../../libDaisy//src/hid/switch.h ****     };
  26:../../libDaisy//src/hid/switch.h ****     /** Specifies whether the pressed is HIGH or LOW. */
  27:../../libDaisy//src/hid/switch.h ****     enum Polarity
  28:../../libDaisy//src/hid/switch.h ****     {
  29:../../libDaisy//src/hid/switch.h ****         POLARITY_NORMAL,   /**< & */
  30:../../libDaisy//src/hid/switch.h ****         POLARITY_INVERTED, /**< & */
  31:../../libDaisy//src/hid/switch.h ****     };
  32:../../libDaisy//src/hid/switch.h **** 
  33:../../libDaisy//src/hid/switch.h ****     /** Specifies whether to use built-in Pull Up/Down resistors to hold button at a given state wh
  34:../../libDaisy//src/hid/switch.h ****     enum Pull
  35:../../libDaisy//src/hid/switch.h ****     {
  36:../../libDaisy//src/hid/switch.h ****         PULL_UP,   /**< & */
  37:../../libDaisy//src/hid/switch.h ****         PULL_DOWN, /**< & */
  38:../../libDaisy//src/hid/switch.h ****         PULL_NONE, /**< & */
  39:../../libDaisy//src/hid/switch.h ****     };
  40:../../libDaisy//src/hid/switch.h **** 
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccV2y1P7.s 			page 4


  41:../../libDaisy//src/hid/switch.h ****     Switch() {}
  42:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
  59              		.loc 4 42 5 is_stmt 1 view .LVU8
  60              		.loc 4 42 5 is_stmt 0 view .LVU9
  61              	.LBE233:
  62              	.LBB234:
  63              	.LBI234:
  64              		.loc 4 42 5 is_stmt 1 view .LVU10
  65              		.loc 4 42 5 is_stmt 0 view .LVU11
  66              	.LBE234:
  67              	.LBB235:
  68              	.LBI235:
  69              		.file 5 "../../libDaisy//src/hid/ctrl.h"
   1:../../libDaisy//src/hid/ctrl.h **** #pragma once
   2:../../libDaisy//src/hid/ctrl.h **** #ifndef DSY_KNOB_H
   3:../../libDaisy//src/hid/ctrl.h **** #define DSY_KNOB_H /**< & */
   4:../../libDaisy//src/hid/ctrl.h **** #include <stdint.h>
   5:../../libDaisy//src/hid/ctrl.h **** 
   6:../../libDaisy//src/hid/ctrl.h **** #ifdef __cplusplus
   7:../../libDaisy//src/hid/ctrl.h **** namespace daisy
   8:../../libDaisy//src/hid/ctrl.h **** {
   9:../../libDaisy//src/hid/ctrl.h **** /**
  10:../../libDaisy//src/hid/ctrl.h ****     @brief Hardware Interface for control inputs \n 
  11:../../libDaisy//src/hid/ctrl.h ****     Primarily designed for ADC input controls such as \n 
  12:../../libDaisy//src/hid/ctrl.h ****     potentiometers, and control voltage. \n 
  13:../../libDaisy//src/hid/ctrl.h ****     @author Stephen Hensley
  14:../../libDaisy//src/hid/ctrl.h ****     @date November 2019
  15:../../libDaisy//src/hid/ctrl.h ****     @ingroup controls
  16:../../libDaisy//src/hid/ctrl.h **** */
  17:../../libDaisy//src/hid/ctrl.h **** class AnalogControl
  18:../../libDaisy//src/hid/ctrl.h **** {
  19:../../libDaisy//src/hid/ctrl.h ****   public:
  20:../../libDaisy//src/hid/ctrl.h ****     /** Constructor */
  21:../../libDaisy//src/hid/ctrl.h ****     AnalogControl() {}
  22:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
  23:../../libDaisy//src/hid/ctrl.h ****     ~AnalogControl() {}
  70              		.loc 5 23 5 is_stmt 1 view .LVU12
  71              		.loc 5 23 5 is_stmt 0 view .LVU13
  72              	.LBE235:
  73              	.LBB236:
  74              	.LBI236:
  75              		.loc 5 23 5 is_stmt 1 view .LVU14
  76              		.loc 5 23 5 is_stmt 0 view .LVU15
  77              	.LBE236:
  78              	.LBB237:
  79              	.LBI237:
  80              		.loc 5 23 5 is_stmt 1 view .LVU16
  81              		.loc 5 23 5 is_stmt 0 view .LVU17
  82              	.LBE237:
  83              	.LBB238:
  84              	.LBI238:
  85              		.loc 5 23 5 is_stmt 1 view .LVU18
  86              		.loc 5 23 5 is_stmt 0 view .LVU19
  87              	.LBE238:
  88              	.LBB239:
  89              	.LBI239:
  90              		.file 6 "../../libDaisy//src/hid/encoder.h"
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccV2y1P7.s 			page 5


   1:../../libDaisy//src/hid/encoder.h **** #pragma once
   2:../../libDaisy//src/hid/encoder.h **** #ifndef DSY_ENCODER_H
   3:../../libDaisy//src/hid/encoder.h **** #define DSY_ENCODER_H
   4:../../libDaisy//src/hid/encoder.h **** #include "daisy_core.h"
   5:../../libDaisy//src/hid/encoder.h **** #include "per/gpio.h"
   6:../../libDaisy//src/hid/encoder.h **** #include "hid/switch.h"
   7:../../libDaisy//src/hid/encoder.h **** 
   8:../../libDaisy//src/hid/encoder.h **** namespace daisy
   9:../../libDaisy//src/hid/encoder.h **** {
  10:../../libDaisy//src/hid/encoder.h **** /** 
  11:../../libDaisy//src/hid/encoder.h ****     @brief Generic Class for handling Quadrature Encoders \n 
  12:../../libDaisy//src/hid/encoder.h ****     Inspired/influenced by Mutable Instruments (pichenettes) Encoder classes
  13:../../libDaisy//src/hid/encoder.h ****     @author Stephen Hensley
  14:../../libDaisy//src/hid/encoder.h ****     @date December 2019
  15:../../libDaisy//src/hid/encoder.h ****     @ingroup controls
  16:../../libDaisy//src/hid/encoder.h **** */
  17:../../libDaisy//src/hid/encoder.h **** class Encoder
  18:../../libDaisy//src/hid/encoder.h **** {
  19:../../libDaisy//src/hid/encoder.h ****   public:
  20:../../libDaisy//src/hid/encoder.h ****     Encoder() {}
  21:../../libDaisy//src/hid/encoder.h ****     ~Encoder() {}
  91              		.loc 6 21 5 is_stmt 1 view .LVU20
  92              	.LBB240:
  93              	.LBI240:
  94              		.loc 4 42 5 view .LVU21
  95              		.loc 4 42 5 is_stmt 0 view .LVU22
  96              	.LBE240:
  97              	.LBE239:
  98              	.LBB241:
  99              	.LBI241:
 100              		.file 7 "../../libDaisy//src/daisy_seed.h"
   1:../../libDaisy//src/daisy_seed.h **** #pragma once
   2:../../libDaisy//src/daisy_seed.h **** #ifndef DSY_SEED_H
   3:../../libDaisy//src/daisy_seed.h **** #define DSY_SEED_H
   4:../../libDaisy//src/daisy_seed.h **** 
   5:../../libDaisy//src/daisy_seed.h **** #include "daisy.h"
   6:../../libDaisy//src/daisy_seed.h **** 
   7:../../libDaisy//src/daisy_seed.h **** //Uncomment this out if you're still using the rev2 hardware
   8:../../libDaisy//src/daisy_seed.h **** //#define SEED_REV2
   9:../../libDaisy//src/daisy_seed.h **** 
  10:../../libDaisy//src/daisy_seed.h **** namespace daisy
  11:../../libDaisy//src/daisy_seed.h **** {
  12:../../libDaisy//src/daisy_seed.h **** /**
  13:../../libDaisy//src/daisy_seed.h ****    @brief This is the higher-level interface for the Daisy board. \n 
  14:../../libDaisy//src/daisy_seed.h ****     All basic peripheral configuration/initialization is setup here. \n
  15:../../libDaisy//src/daisy_seed.h **** 
  16:../../libDaisy//src/daisy_seed.h ****    @ingroup boards
  17:../../libDaisy//src/daisy_seed.h **** */
  18:../../libDaisy//src/daisy_seed.h **** class DaisySeed
  19:../../libDaisy//src/daisy_seed.h **** {
  20:../../libDaisy//src/daisy_seed.h ****   public:
  21:../../libDaisy//src/daisy_seed.h ****     DaisySeed() {}
  22:../../libDaisy//src/daisy_seed.h ****     ~DaisySeed() {}
 101              		.loc 7 22 5 is_stmt 1 view .LVU23
 102              	.LBB242:
 103              	.LBI242:
 104              		.file 8 "../../libDaisy//src/sys/system.h"
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccV2y1P7.s 			page 6


   1:../../libDaisy//src/sys/system.h **** #ifndef DSY_SYSTEM_H
   2:../../libDaisy//src/sys/system.h **** #define DSY_SYSTEM_H
   3:../../libDaisy//src/sys/system.h **** 
   4:../../libDaisy//src/sys/system.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation is provided below
   5:../../libDaisy//src/sys/system.h **** 
   6:../../libDaisy//src/sys/system.h **** #include <cstdint>
   7:../../libDaisy//src/sys/system.h **** #include "per/tim.h"
   8:../../libDaisy//src/sys/system.h **** 
   9:../../libDaisy//src/sys/system.h **** namespace daisy
  10:../../libDaisy//src/sys/system.h **** {
  11:../../libDaisy//src/sys/system.h **** /** A handle for interacting with the Core System.
  12:../../libDaisy//src/sys/system.h ****  ** This includes the Clock tree, MPU, global DMA initialization,
  13:../../libDaisy//src/sys/system.h ****  ** cache handling, and any other necessary global initiailzation
  14:../../libDaisy//src/sys/system.h ****  **
  15:../../libDaisy//src/sys/system.h ****  ** @author shensley
  16:../../libDaisy//src/sys/system.h ****  ** @ingroup system
  17:../../libDaisy//src/sys/system.h ****  */
  18:../../libDaisy//src/sys/system.h **** class System
  19:../../libDaisy//src/sys/system.h **** {
  20:../../libDaisy//src/sys/system.h ****   public:
  21:../../libDaisy//src/sys/system.h ****     /** Contains settings for initializing the System */
  22:../../libDaisy//src/sys/system.h ****     struct Config
  23:../../libDaisy//src/sys/system.h ****     {
  24:../../libDaisy//src/sys/system.h ****         /** Specifies the system clock frequency that feeds APB/AHB clocks, etc. */
  25:../../libDaisy//src/sys/system.h ****         enum class SysClkFreq
  26:../../libDaisy//src/sys/system.h ****         {
  27:../../libDaisy//src/sys/system.h ****             FREQ_400MHZ,
  28:../../libDaisy//src/sys/system.h ****             FREQ_480MHZ,
  29:../../libDaisy//src/sys/system.h ****         };
  30:../../libDaisy//src/sys/system.h **** 
  31:../../libDaisy//src/sys/system.h ****         /** Method to call on the struct to set to defaults
  32:../../libDaisy//src/sys/system.h ****          ** CPU Freq set to 400MHz
  33:../../libDaisy//src/sys/system.h ****          ** Cache Enabled
  34:../../libDaisy//src/sys/system.h ****          ** */
  35:../../libDaisy//src/sys/system.h ****         void Defaults()
  36:../../libDaisy//src/sys/system.h ****         {
  37:../../libDaisy//src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_400MHZ;
  38:../../libDaisy//src/sys/system.h ****             use_dcache  = true;
  39:../../libDaisy//src/sys/system.h ****             use_icache  = true;
  40:../../libDaisy//src/sys/system.h ****             skip_clocks = false;
  41:../../libDaisy//src/sys/system.h ****         }
  42:../../libDaisy//src/sys/system.h **** 
  43:../../libDaisy//src/sys/system.h ****         /** Method to call on the struct to set to boost mode:
  44:../../libDaisy//src/sys/system.h ****          ** CPU Freq set to 480MHz
  45:../../libDaisy//src/sys/system.h ****          ** Cache Enabled
  46:../../libDaisy//src/sys/system.h ****          ** */
  47:../../libDaisy//src/sys/system.h ****         void Boost()
  48:../../libDaisy//src/sys/system.h ****         {
  49:../../libDaisy//src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_480MHZ;
  50:../../libDaisy//src/sys/system.h ****             use_dcache  = true;
  51:../../libDaisy//src/sys/system.h ****             use_icache  = true;
  52:../../libDaisy//src/sys/system.h ****             skip_clocks = false;
  53:../../libDaisy//src/sys/system.h ****         }
  54:../../libDaisy//src/sys/system.h **** 
  55:../../libDaisy//src/sys/system.h ****         SysClkFreq cpu_freq;
  56:../../libDaisy//src/sys/system.h ****         bool       use_dcache;
  57:../../libDaisy//src/sys/system.h ****         bool       use_icache;
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccV2y1P7.s 			page 7


  58:../../libDaisy//src/sys/system.h ****         bool       skip_clocks;
  59:../../libDaisy//src/sys/system.h ****     };
  60:../../libDaisy//src/sys/system.h **** 
  61:../../libDaisy//src/sys/system.h ****     /** Describes the different regions of memory available to the Daisy */
  62:../../libDaisy//src/sys/system.h ****     enum MemoryRegion
  63:../../libDaisy//src/sys/system.h ****     {
  64:../../libDaisy//src/sys/system.h ****         INTERNAL_FLASH = 0,
  65:../../libDaisy//src/sys/system.h ****         ITCMRAM,
  66:../../libDaisy//src/sys/system.h ****         DTCMRAM,
  67:../../libDaisy//src/sys/system.h ****         SRAM_D1,
  68:../../libDaisy//src/sys/system.h ****         SRAM_D2,
  69:../../libDaisy//src/sys/system.h ****         SRAM_D3,
  70:../../libDaisy//src/sys/system.h ****         SDRAM,
  71:../../libDaisy//src/sys/system.h ****         QSPI,
  72:../../libDaisy//src/sys/system.h ****         INVALID_ADDRESS,
  73:../../libDaisy//src/sys/system.h ****     };
  74:../../libDaisy//src/sys/system.h **** 
  75:../../libDaisy//src/sys/system.h ****     /** Bootloader struct for controlling bootloading parameters */
  76:../../libDaisy//src/sys/system.h ****     struct BootInfo
  77:../../libDaisy//src/sys/system.h ****     {
  78:../../libDaisy//src/sys/system.h ****         enum class Type : uint32_t
  79:../../libDaisy//src/sys/system.h ****         {
  80:../../libDaisy//src/sys/system.h ****             INVALID      = 0x00000000,
  81:../../libDaisy//src/sys/system.h ****             JUMP         = 0xDEADBEEF,
  82:../../libDaisy//src/sys/system.h ****             SKIP_TIMEOUT = 0x5AFEB007,
  83:../../libDaisy//src/sys/system.h ****             INF_TIMEOUT  = 0xB0074EFA,
  84:../../libDaisy//src/sys/system.h ****         } status;
  85:../../libDaisy//src/sys/system.h ****         uint32_t data;
  86:../../libDaisy//src/sys/system.h ****         enum class Version : uint32_t
  87:../../libDaisy//src/sys/system.h ****         {
  88:../../libDaisy//src/sys/system.h ****             LT_v6_0 = 0, // Less than v6.0
  89:../../libDaisy//src/sys/system.h ****             NONE,        // No bootloader present
  90:../../libDaisy//src/sys/system.h ****             v6_0,        // v6.0
  91:../../libDaisy//src/sys/system.h ****             v6_1,        // v6.1 or greater
  92:../../libDaisy//src/sys/system.h ****             LAST
  93:../../libDaisy//src/sys/system.h ****         } version;
  94:../../libDaisy//src/sys/system.h ****     };
  95:../../libDaisy//src/sys/system.h **** 
  96:../../libDaisy//src/sys/system.h ****     System() {}
  97:../../libDaisy//src/sys/system.h ****     ~System() {}
 105              		.loc 8 97 5 view .LVU24
 106              		.loc 8 97 5 is_stmt 0 view .LVU25
 107              	.LBE242:
 108              	.LBB243:
 109              	.LBI243:
 110              		.file 9 "../../libDaisy//src/hid/usb.h"
   1:../../libDaisy//src/hid/usb.h **** #pragma once
   2:../../libDaisy//src/hid/usb.h **** #ifndef DSY_HID_USB_H
   3:../../libDaisy//src/hid/usb.h **** #define DSY_HID_USB_H
   4:../../libDaisy//src/hid/usb.h **** #include <stdint.h>
   5:../../libDaisy//src/hid/usb.h **** #include <stdlib.h>
   6:../../libDaisy//src/hid/usb.h **** 
   7:../../libDaisy//src/hid/usb.h **** namespace daisy
   8:../../libDaisy//src/hid/usb.h **** /** @addtogroup human_interface
   9:../../libDaisy//src/hid/usb.h ****     @{
  10:../../libDaisy//src/hid/usb.h **** */
  11:../../libDaisy//src/hid/usb.h **** 
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccV2y1P7.s 			page 8


  12:../../libDaisy//src/hid/usb.h **** {
  13:../../libDaisy//src/hid/usb.h **** /** 
  14:../../libDaisy//src/hid/usb.h ****     @brief Interface for initializing and using the USB Peripherals on the daisy
  15:../../libDaisy//src/hid/usb.h ****     @author Stephen Hensley
  16:../../libDaisy//src/hid/usb.h ****     @date December 2019
  17:../../libDaisy//src/hid/usb.h **** */
  18:../../libDaisy//src/hid/usb.h **** class UsbHandle
  19:../../libDaisy//src/hid/usb.h **** {
  20:../../libDaisy//src/hid/usb.h ****   public:
  21:../../libDaisy//src/hid/usb.h ****     /** Return values for USBHandle Functions */
  22:../../libDaisy//src/hid/usb.h ****     enum class Result
  23:../../libDaisy//src/hid/usb.h ****     {
  24:../../libDaisy//src/hid/usb.h ****         OK,
  25:../../libDaisy//src/hid/usb.h ****         ERR,
  26:../../libDaisy//src/hid/usb.h ****     };
  27:../../libDaisy//src/hid/usb.h **** 
  28:../../libDaisy//src/hid/usb.h ****     /** Specified which of the two USB Peripherals to initialize. */
  29:../../libDaisy//src/hid/usb.h ****     enum UsbPeriph
  30:../../libDaisy//src/hid/usb.h ****     {
  31:../../libDaisy//src/hid/usb.h ****         FS_INTERNAL, /**< Internal pin */
  32:../../libDaisy//src/hid/usb.h ****         FS_EXTERNAL, /**< FS External D+ pin is Pin 38 (GPIO32). FS External D- pin is Pin 37 (GPIO
  33:../../libDaisy//src/hid/usb.h ****         FS_BOTH,     /**< Both */
  34:../../libDaisy//src/hid/usb.h ****     };
  35:../../libDaisy//src/hid/usb.h **** 
  36:../../libDaisy//src/hid/usb.h **** 
  37:../../libDaisy//src/hid/usb.h ****     /** Function called upon reception of a buffer */
  38:../../libDaisy//src/hid/usb.h ****     typedef void (*ReceiveCallback)(uint8_t* buff, uint32_t* len);
  39:../../libDaisy//src/hid/usb.h **** 
  40:../../libDaisy//src/hid/usb.h ****     UsbHandle() {}
  41:../../libDaisy//src/hid/usb.h **** 
  42:../../libDaisy//src/hid/usb.h ****     ~UsbHandle() {}
 111              		.loc 9 42 5 is_stmt 1 view .LVU26
 112              		.loc 9 42 5 is_stmt 0 view .LVU27
 113              	.LBE243:
 114              	.LBB244:
 115              	.LBI244:
 116              		.file 10 "../../libDaisy//src/per/adc.h"
   1:../../libDaisy//src/per/adc.h **** #pragma once
   2:../../libDaisy//src/per/adc.h **** #ifndef DSY_ADC_H
   3:../../libDaisy//src/per/adc.h **** #define DSY_ADC_H /**< Macro */
   4:../../libDaisy//src/per/adc.h **** #include <stdint.h>
   5:../../libDaisy//src/per/adc.h **** #include <stdlib.h>
   6:../../libDaisy//src/per/adc.h **** #include "daisy_core.h"
   7:../../libDaisy//src/per/adc.h **** #include "per/gpio.h"
   8:../../libDaisy//src/per/adc.h **** 
   9:../../libDaisy//src/per/adc.h **** #define DSY_ADC_MAX_CHANNELS 16 /**< Maximum number of ADC channels */
  10:../../libDaisy//src/per/adc.h **** 
  11:../../libDaisy//src/per/adc.h **** namespace daisy
  12:../../libDaisy//src/per/adc.h **** {
  13:../../libDaisy//src/per/adc.h **** /** @addtogroup per_analog
  14:../../libDaisy//src/per/adc.h ****     @{
  15:../../libDaisy//src/per/adc.h **** */
  16:../../libDaisy//src/per/adc.h **** 
  17:../../libDaisy//src/per/adc.h **** /* While there may not be many configuration options here,
  18:../../libDaisy//src/per/adc.h **** using a struct like this allows us to add more configuration
  19:../../libDaisy//src/per/adc.h **** later without breaking existing functionality.
  20:../../libDaisy//src/per/adc.h **** */
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccV2y1P7.s 			page 9


  21:../../libDaisy//src/per/adc.h **** 
  22:../../libDaisy//src/per/adc.h **** /** @brief   Configuration Structure for an ADC Channel 
  23:../../libDaisy//src/per/adc.h ****  *  @details This can be used to configure a a single input, 
  24:../../libDaisy//src/per/adc.h ****  *           or a multiplexed input, allowing up to 8 inputs on 
  25:../../libDaisy//src/per/adc.h ****  *           one channel.
  26:../../libDaisy//src/per/adc.h ****  *  @note    Sharing data lines to multiple muxes _is_ possible, but
  27:../../libDaisy//src/per/adc.h ****  *           each channel sharing data lines must be set to the maximum
  28:../../libDaisy//src/per/adc.h ****  *           number of channels, even if some multiplexers have fewer
  29:../../libDaisy//src/per/adc.h ****  *           inputs connected.
  30:../../libDaisy//src/per/adc.h **** */
  31:../../libDaisy//src/per/adc.h **** struct AdcChannelConfig
  32:../../libDaisy//src/per/adc.h **** {
  33:../../libDaisy//src/per/adc.h ****     /** Which pin to use for multiplexing */
  34:../../libDaisy//src/per/adc.h ****     enum MuxPin
  35:../../libDaisy//src/per/adc.h ****     {
  36:../../libDaisy//src/per/adc.h ****         MUX_SEL_0,    /**< & */
  37:../../libDaisy//src/per/adc.h ****         MUX_SEL_1,    /**< & */
  38:../../libDaisy//src/per/adc.h ****         MUX_SEL_2,    /**< & */
  39:../../libDaisy//src/per/adc.h ****         MUX_SEL_LAST, /**< & */
  40:../../libDaisy//src/per/adc.h ****     };
  41:../../libDaisy//src/per/adc.h **** 
  42:../../libDaisy//src/per/adc.h ****     /** \brief per channel conversion speed added to fixed time based on bitdepth, etc. */
  43:../../libDaisy//src/per/adc.h ****     enum ConversionSpeed
  44:../../libDaisy//src/per/adc.h ****     {
  45:../../libDaisy//src/per/adc.h ****         SPEED_1CYCLES_5,
  46:../../libDaisy//src/per/adc.h ****         SPEED_2CYCLES_5,
  47:../../libDaisy//src/per/adc.h ****         SPEED_8CYCLES_5,
  48:../../libDaisy//src/per/adc.h ****         SPEED_16CYCLES_5,
  49:../../libDaisy//src/per/adc.h ****         SPEED_32CYCLES_5,
  50:../../libDaisy//src/per/adc.h ****         SPEED_64CYCLES_5,
  51:../../libDaisy//src/per/adc.h ****         SPEED_387CYCLES_5,
  52:../../libDaisy//src/per/adc.h ****         SPEED_810CYCLES_5,
  53:../../libDaisy//src/per/adc.h ****     };
  54:../../libDaisy//src/per/adc.h **** 
  55:../../libDaisy//src/per/adc.h ****     /** Initializes a single ADC pin as an ADC. 
  56:../../libDaisy//src/per/adc.h ****     \param pin Pin to init.
  57:../../libDaisy//src/per/adc.h ****     \param speed conversion speed for this pin defaults to 8.5 cycles
  58:../../libDaisy//src/per/adc.h ****      */
  59:../../libDaisy//src/per/adc.h ****     void InitSingle(dsy_gpio_pin pin, ConversionSpeed speed = SPEED_8CYCLES_5);
  60:../../libDaisy//src/per/adc.h **** 
  61:../../libDaisy//src/per/adc.h ****     /** 
  62:../../libDaisy//src/per/adc.h ****     Initializes a single ADC pin as a Multiplexed ADC.
  63:../../libDaisy//src/per/adc.h ****     Requires a CD405X Multiplexer connected to the pin.
  64:../../libDaisy//src/per/adc.h ****     You only need to supply the mux pins that are required,
  65:../../libDaisy//src/per/adc.h ****     e.g. a 4052 mux would only require mux_0 and mux_1.
  66:../../libDaisy//src/per/adc.h ****     Internal Callbacks handle the pin addressing.
  67:../../libDaisy//src/per/adc.h ****     \param adc_pin &
  68:../../libDaisy//src/per/adc.h ****     \param mux_channels must be 1-8
  69:../../libDaisy//src/per/adc.h ****     \param mux_0 First mux pin
  70:../../libDaisy//src/per/adc.h ****     \param mux_1 Second mux pin
  71:../../libDaisy//src/per/adc.h ****     \param mux_2 Third mux pin
  72:../../libDaisy//src/per/adc.h ****     \param speed conversion speed for this pin defaults to 8.5 cycles
  73:../../libDaisy//src/per/adc.h ****     */
  74:../../libDaisy//src/per/adc.h ****     void InitMux(dsy_gpio_pin    adc_pin,
  75:../../libDaisy//src/per/adc.h ****                  size_t          mux_channels,
  76:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin    mux_0,
  77:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin    mux_1 = {DSY_GPIOX, 0},
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccV2y1P7.s 			page 10


  78:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin    mux_2 = {DSY_GPIOX, 0},
  79:../../libDaisy//src/per/adc.h ****                  ConversionSpeed speed = SPEED_8CYCLES_5);
  80:../../libDaisy//src/per/adc.h **** 
  81:../../libDaisy//src/per/adc.h ****     dsy_gpio        pin_;                   /**< & */
  82:../../libDaisy//src/per/adc.h ****     dsy_gpio        mux_pin_[MUX_SEL_LAST]; /**< & */
  83:../../libDaisy//src/per/adc.h ****     uint8_t         mux_channels_;          /**< & */
  84:../../libDaisy//src/per/adc.h ****     ConversionSpeed speed_;
  85:../../libDaisy//src/per/adc.h **** };
  86:../../libDaisy//src/per/adc.h **** 
  87:../../libDaisy//src/per/adc.h **** /**
  88:../../libDaisy//src/per/adc.h ****    @brief Handler for analog to digital conversion
  89:../../libDaisy//src/per/adc.h **** */
  90:../../libDaisy//src/per/adc.h **** class AdcHandle
  91:../../libDaisy//src/per/adc.h **** {
  92:../../libDaisy//src/per/adc.h ****   public:
  93:../../libDaisy//src/per/adc.h ****     /** Supported oversampling amounts */
  94:../../libDaisy//src/per/adc.h ****     enum OverSampling
  95:../../libDaisy//src/per/adc.h ****     {
  96:../../libDaisy//src/per/adc.h ****         OVS_NONE, /**< & */
  97:../../libDaisy//src/per/adc.h ****         OVS_4,    /**< & */
  98:../../libDaisy//src/per/adc.h ****         OVS_8,    /**< & */
  99:../../libDaisy//src/per/adc.h ****         OVS_16,   /**< & */
 100:../../libDaisy//src/per/adc.h ****         OVS_32,   /**< & */
 101:../../libDaisy//src/per/adc.h ****         OVS_64,   /**< & */
 102:../../libDaisy//src/per/adc.h ****         OVS_128,  /**< & */
 103:../../libDaisy//src/per/adc.h ****         OVS_256,  /**< & */
 104:../../libDaisy//src/per/adc.h ****         OVS_512,  /**< & */
 105:../../libDaisy//src/per/adc.h ****         OVS_1024, /**< & */
 106:../../libDaisy//src/per/adc.h ****         OVS_LAST, /**< & */
 107:../../libDaisy//src/per/adc.h ****     };
 108:../../libDaisy//src/per/adc.h **** 
 109:../../libDaisy//src/per/adc.h ****     AdcHandle() {}
 110:../../libDaisy//src/per/adc.h ****     ~AdcHandle() {}
 117              		.loc 10 110 5 is_stmt 1 view .LVU28
 118              		.loc 10 110 5 is_stmt 0 view .LVU29
 119              	.LBE244:
 120              	.LBB245:
 121              	.LBI245:
 122              		.file 11 "../../libDaisy//src/hid/audio.h"
   1:../../libDaisy//src/hid/audio.h **** #ifndef DSY_AUDIO_H
   2:../../libDaisy//src/hid/audio.h **** #define DSY_AUDIO_H /**< & */
   3:../../libDaisy//src/hid/audio.h **** 
   4:../../libDaisy//src/hid/audio.h **** #include "per/sai.h"
   5:../../libDaisy//src/hid/audio.h **** 
   6:../../libDaisy//src/hid/audio.h **** namespace daisy
   7:../../libDaisy//src/hid/audio.h **** {
   8:../../libDaisy//src/hid/audio.h **** /** @brief Audio Engine Handle
   9:../../libDaisy//src/hid/audio.h ****  *  @ingroup audio 
  10:../../libDaisy//src/hid/audio.h ****  *  @details This class allows for higher level access to an audio engine.
  11:../../libDaisy//src/hid/audio.h ****  *           If you're using a SOM like the DaisySeed or DaisyPatchSM (or any 
  12:../../libDaisy//src/hid/audio.h ****  *            board that includes one of those objects) then the intialization
  13:../../libDaisy//src/hid/audio.h ****  *            is already taken  care of.
  14:../../libDaisy//src/hid/audio.h ****  *           If you're setting up your own custom hardware, or need to make changes
  15:../../libDaisy//src/hid/audio.h ****  *           you will have to take the following steps:
  16:../../libDaisy//src/hid/audio.h ****  *             1. Create and Initialize an SaiHandle or two depending on your requirements
  17:../../libDaisy//src/hid/audio.h ****  *             2. Initialize the Audio Handle with the desired settings and the Initialized SaiHand
  18:../../libDaisy//src/hid/audio.h ****  *             3. If the connected codec requires special configuration or initialization, do so
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccV2y1P7.s 			page 11


  19:../../libDaisy//src/hid/audio.h ****  *             4. Write a callback method using either the AudioCallback or the InterleavingAudioCa
  20:../../libDaisy//src/hid/audio.h ****  *             5. Start the Audio using one of the StartAudio function
  21:../../libDaisy//src/hid/audio.h ****  */
  22:../../libDaisy//src/hid/audio.h **** class AudioHandle
  23:../../libDaisy//src/hid/audio.h **** {
  24:../../libDaisy//src/hid/audio.h ****   public:
  25:../../libDaisy//src/hid/audio.h ****     /** Manually configurable details about the Audio Engine */
  26:../../libDaisy//src/hid/audio.h ****     /** TODO: Figure out how to get samplerate in here. */
  27:../../libDaisy//src/hid/audio.h ****     struct Config
  28:../../libDaisy//src/hid/audio.h ****     {
  29:../../libDaisy//src/hid/audio.h ****         /** number of samples to process per callback */
  30:../../libDaisy//src/hid/audio.h ****         size_t blocksize = 48;
  31:../../libDaisy//src/hid/audio.h **** 
  32:../../libDaisy//src/hid/audio.h ****         /**< Sample rate of audio */
  33:../../libDaisy//src/hid/audio.h ****         SaiHandle::Config::SampleRate samplerate
  34:../../libDaisy//src/hid/audio.h ****             = SaiHandle::Config::SampleRate::SAI_48KHZ;
  35:../../libDaisy//src/hid/audio.h **** 
  36:../../libDaisy//src/hid/audio.h ****         /** factor for adjustment before and after callback for hardware that may have extra headro
  37:../../libDaisy//src/hid/audio.h ****         float postgain = 1.f;
  38:../../libDaisy//src/hid/audio.h **** 
  39:../../libDaisy//src/hid/audio.h ****         /** factor for additional one-sided compensation to audio path for hardware that may
  40:../../libDaisy//src/hid/audio.h ****          *  have unequal input/output ranges
  41:../../libDaisy//src/hid/audio.h ****          */
  42:../../libDaisy//src/hid/audio.h ****         float output_compensation = 1.f;
  43:../../libDaisy//src/hid/audio.h ****     };
  44:../../libDaisy//src/hid/audio.h **** 
  45:../../libDaisy//src/hid/audio.h ****     enum class Result
  46:../../libDaisy//src/hid/audio.h ****     {
  47:../../libDaisy//src/hid/audio.h ****         OK,
  48:../../libDaisy//src/hid/audio.h ****         ERR,
  49:../../libDaisy//src/hid/audio.h ****     };
  50:../../libDaisy//src/hid/audio.h **** 
  51:../../libDaisy//src/hid/audio.h ****     /** Non-Interleaving input buffer
  52:../../libDaisy//src/hid/audio.h ****      * Buffer arranged by float[chn][sample] 
  53:../../libDaisy//src/hid/audio.h ****      * const so that the user can't modify the input
  54:../../libDaisy//src/hid/audio.h ****      */
  55:../../libDaisy//src/hid/audio.h ****     typedef const float* const* InputBuffer;
  56:../../libDaisy//src/hid/audio.h **** 
  57:../../libDaisy//src/hid/audio.h ****     /** Non-Interleaving output buffer
  58:../../libDaisy//src/hid/audio.h ****      * Arranged by float[chn][sample] 
  59:../../libDaisy//src/hid/audio.h ****      */
  60:../../libDaisy//src/hid/audio.h ****     typedef float** OutputBuffer;
  61:../../libDaisy//src/hid/audio.h **** 
  62:../../libDaisy//src/hid/audio.h ****     /** Type for a Non-Interleaving audio callback 
  63:../../libDaisy//src/hid/audio.h ****      * Non-Interleaving audio callbacks in daisy will be of this type
  64:../../libDaisy//src/hid/audio.h ****      */
  65:../../libDaisy//src/hid/audio.h ****     typedef void (*AudioCallback)(InputBuffer  in,
  66:../../libDaisy//src/hid/audio.h ****                                   OutputBuffer out,
  67:../../libDaisy//src/hid/audio.h ****                                   size_t       size);
  68:../../libDaisy//src/hid/audio.h **** 
  69:../../libDaisy//src/hid/audio.h ****     /** Interleaving Input buffer
  70:../../libDaisy//src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }]
  71:../../libDaisy//src/hid/audio.h ****      ** this is const, as the user shouldn't modify it
  72:../../libDaisy//src/hid/audio.h ****     */
  73:../../libDaisy//src/hid/audio.h ****     typedef const float* InterleavingInputBuffer;
  74:../../libDaisy//src/hid/audio.h **** 
  75:../../libDaisy//src/hid/audio.h ****     /** Interleaving Output buffer 
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccV2y1P7.s 			page 12


  76:../../libDaisy//src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }
  77:../../libDaisy//src/hid/audio.h ****     */
  78:../../libDaisy//src/hid/audio.h ****     typedef float* InterleavingOutputBuffer;
  79:../../libDaisy//src/hid/audio.h **** 
  80:../../libDaisy//src/hid/audio.h ****     /** Interleaving Audio Callback 
  81:../../libDaisy//src/hid/audio.h ****      * Interleaving audio callbacks in daisy must be of this type
  82:../../libDaisy//src/hid/audio.h ****      */
  83:../../libDaisy//src/hid/audio.h ****     typedef void (*InterleavingAudioCallback)(InterleavingInputBuffer  in,
  84:../../libDaisy//src/hid/audio.h ****                                               InterleavingOutputBuffer out,
  85:../../libDaisy//src/hid/audio.h ****                                               size_t                   size);
  86:../../libDaisy//src/hid/audio.h **** 
  87:../../libDaisy//src/hid/audio.h ****     AudioHandle() : pimpl_(nullptr) {}
  88:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 123              		.loc 11 88 5 is_stmt 1 view .LVU30
 124              		.loc 11 88 5 is_stmt 0 view .LVU31
 125              	.LBE245:
 126              	.LBE241:
 127              		.loc 1 31 20 view .LVU32
 128 0000 7047     		bx	lr
 129              		.cfi_endproc
 130              	.LFE2580:
 132              		.weak	_ZN5daisy10TusenskonaD1Ev
 133              		.thumb_set _ZN5daisy10TusenskonaD1Ev,_ZN5daisy10TusenskonaD2Ev
 134 0002 00BF     		.section	.text._Z14UpdateControlsv,"ax",%progbits
 135              		.align	1
 136              		.p2align 2,,3
 137              		.global	_Z14UpdateControlsv
 138              		.syntax unified
 139              		.thumb
 140              		.thumb_func
 142              	_Z14UpdateControlsv:
 143              	.LFB4747:
 144              		.file 12 "leds.cpp"
   1:leds.cpp      **** #include "../../tusenskona/src/tusenskona.h"
   2:leds.cpp      **** #include "daisysp.h"
   3:leds.cpp      **** 
   4:leds.cpp      **** using namespace daisy;
   5:leds.cpp      **** using namespace daisysp;
   6:leds.cpp      **** 
   7:leds.cpp      **** 
   8:leds.cpp      **** Tusenskona hw;
   9:leds.cpp      **** 
  10:leds.cpp      **** void UpdateControls()
  11:leds.cpp      **** {
 145              		.loc 12 11 1 is_stmt 1 view -0
 146              		.cfi_startproc
 147              		@ args = 0, pretend = 0, frame = 0
 148              		@ frame_needed = 0, uses_anonymous_args = 0
  12:leds.cpp      ****     hw.ProcessAllControls();
 149              		.loc 12 12 5 view .LVU34
 150              	.LVL1:
 151              	.LBB246:
 152              	.LBI246:
  32:../../tusenskona/src/tusenskona.h **** 
  33:../../tusenskona/src/tusenskona.h ****     /** Init related stuff. */
  34:../../tusenskona/src/tusenskona.h ****     void Init(bool boost = false);
  35:../../tusenskona/src/tusenskona.h **** 
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccV2y1P7.s 			page 13


  36:../../tusenskona/src/tusenskona.h ****     /** Wait for a bit
  37:../../tusenskona/src/tusenskona.h ****     \param del Time to wait in ms.
  38:../../tusenskona/src/tusenskona.h ****     */
  39:../../tusenskona/src/tusenskona.h ****     void DelayMs(size_t del);
  40:../../tusenskona/src/tusenskona.h **** 
  41:../../tusenskona/src/tusenskona.h ****     /** Starts the callback
  42:../../tusenskona/src/tusenskona.h ****     \param cb Interleaved callback function
  43:../../tusenskona/src/tusenskona.h ****     */
  44:../../tusenskona/src/tusenskona.h ****     void StartAudio(AudioHandle::InterleavingAudioCallback cb);
  45:../../tusenskona/src/tusenskona.h **** 
  46:../../tusenskona/src/tusenskona.h ****     /** Starts the callback
  47:../../tusenskona/src/tusenskona.h ****     \param cb multichannel callback function
  48:../../tusenskona/src/tusenskona.h ****     */
  49:../../tusenskona/src/tusenskona.h ****     void StartAudio(AudioHandle::AudioCallback cb);
  50:../../tusenskona/src/tusenskona.h **** 
  51:../../tusenskona/src/tusenskona.h ****     /**
  52:../../tusenskona/src/tusenskona.h ****        Switch callback functions
  53:../../tusenskona/src/tusenskona.h ****        \param cb New interleaved callback function.
  54:../../tusenskona/src/tusenskona.h ****     */
  55:../../tusenskona/src/tusenskona.h ****     void ChangeAudioCallback(AudioHandle::InterleavingAudioCallback cb);
  56:../../tusenskona/src/tusenskona.h **** 
  57:../../tusenskona/src/tusenskona.h ****     /**
  58:../../tusenskona/src/tusenskona.h ****        Switch callback functions
  59:../../tusenskona/src/tusenskona.h ****        \param cb New multichannel callback function.
  60:../../tusenskona/src/tusenskona.h ****     */
  61:../../tusenskona/src/tusenskona.h ****     void ChangeAudioCallback(AudioHandle::AudioCallback cb);
  62:../../tusenskona/src/tusenskona.h **** 
  63:../../tusenskona/src/tusenskona.h ****     /** Stops the audio if it is running. */
  64:../../tusenskona/src/tusenskona.h ****     void StopAudio();
  65:../../tusenskona/src/tusenskona.h **** 
  66:../../tusenskona/src/tusenskona.h ****     /** Updates the Audio Sample Rate, and reinitializes.
  67:../../tusenskona/src/tusenskona.h ****      ** Audio must be stopped for this to work.
  68:../../tusenskona/src/tusenskona.h ****      */
  69:../../tusenskona/src/tusenskona.h ****     void SetAudioSampleRate(SaiHandle::Config::SampleRate samplerate);
  70:../../tusenskona/src/tusenskona.h **** 
  71:../../tusenskona/src/tusenskona.h ****     /** Returns the audio sample rate in Hz as a floating point number.
  72:../../tusenskona/src/tusenskona.h ****      */
  73:../../tusenskona/src/tusenskona.h ****     float AudioSampleRate();
  74:../../tusenskona/src/tusenskona.h **** 
  75:../../tusenskona/src/tusenskona.h ****     /** Sets the number of samples processed per channel by the audio callback.
  76:../../tusenskona/src/tusenskona.h ****      */
  77:../../tusenskona/src/tusenskona.h ****     void SetAudioBlockSize(size_t blocksize);
  78:../../tusenskona/src/tusenskona.h **** 
  79:../../tusenskona/src/tusenskona.h ****     /** Returns the number of samples per channel in a block of audio. */
  80:../../tusenskona/src/tusenskona.h ****     size_t AudioBlockSize();
  81:../../tusenskona/src/tusenskona.h **** 
  82:../../tusenskona/src/tusenskona.h ****     /** Returns the rate in Hz that the Audio callback is called */
  83:../../tusenskona/src/tusenskona.h ****     float AudioCallbackRate();
  84:../../tusenskona/src/tusenskona.h **** 
  85:../../tusenskona/src/tusenskona.h ****     /**
  86:../../tusenskona/src/tusenskona.h ****        Start analog to digital conversion.
  87:../../tusenskona/src/tusenskona.h ****      */
  88:../../tusenskona/src/tusenskona.h ****     void StartAdc();
  89:../../tusenskona/src/tusenskona.h **** 
  90:../../tusenskona/src/tusenskona.h ****     /** Stops Transfering data from the ADC */
  91:../../tusenskona/src/tusenskona.h ****     void StopAdc();
  92:../../tusenskona/src/tusenskona.h **** 
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccV2y1P7.s 			page 14


  93:../../tusenskona/src/tusenskona.h ****     /** Call at same rate as analog reads for smooth reading.*/
  94:../../tusenskona/src/tusenskona.h ****     void ProcessAnalogControls();
  95:../../tusenskona/src/tusenskona.h **** 
  96:../../tusenskona/src/tusenskona.h ****     /** Process Analog and Digital Controls */
  97:../../tusenskona/src/tusenskona.h ****     inline void ProcessAllControls()
 153              		.loc 1 97 17 view .LVU35
 154              	.LBB247:
  98:../../tusenskona/src/tusenskona.h ****     {
  99:../../tusenskona/src/tusenskona.h ****         ProcessAnalogControls();
 155              		.loc 1 99 9 view .LVU36
 156              	.LBE247:
 157              	.LBE246:
  11:leds.cpp      ****     hw.ProcessAllControls();
 158              		.loc 12 11 1 is_stmt 0 view .LVU37
 159 0000 10B5     		push	{r4, lr}
 160              		.cfi_def_cfa_offset 8
 161              		.cfi_offset 4, -8
 162              		.cfi_offset 14, -4
 163              	.LBB250:
 164              	.LBB248:
 165              		.loc 1 99 30 view .LVU38
 166 0002 184C     		ldr	r4, .L5
 167              	.LBE248:
 168              	.LBE250:
  11:leds.cpp      ****     hw.ProcessAllControls();
 169              		.loc 12 11 1 view .LVU39
 170 0004 2DED048B 		vpush.64	{d8, d9}
 171              		.cfi_def_cfa_offset 24
 172              		.cfi_offset 80, -24
 173              		.cfi_offset 81, -20
 174              		.cfi_offset 82, -16
 175              		.cfi_offset 83, -12
 176              	.LBB251:
 177              	.LBB249:
 178              		.loc 1 99 30 view .LVU40
 179 0008 2046     		mov	r0, r4
 180 000a FFF7FEFF 		bl	_ZN5daisy10Tusenskona21ProcessAnalogControlsEv
 181              	.LVL2:
 100:../../tusenskona/src/tusenskona.h ****         ProcessDigitalControls();
 182              		.loc 1 100 9 is_stmt 1 view .LVU41
 183              		.loc 1 100 31 is_stmt 0 view .LVU42
 184 000e 2046     		mov	r0, r4
 185 0010 FFF7FEFF 		bl	_ZN5daisy10Tusenskona22ProcessDigitalControlsEv
 186              	.LVL3:
 187              		.loc 1 100 31 view .LVU43
 188              	.LBE249:
 189              	.LBE251:
  13:leds.cpp      ****     
  14:leds.cpp      ****     //knobs
  15:leds.cpp      ****     float ctrl = hw.GetKnobValue((Tusenskona::Knob)0);
 190              		.loc 12 15 5 is_stmt 1 view .LVU44
 191              		.loc 12 15 33 is_stmt 0 view .LVU45
 192 0014 2046     		mov	r0, r4
 193 0016 0021     		movs	r1, #0
 194 0018 FFF7FEFF 		bl	_ZN5daisy10Tusenskona12GetKnobValueENS0_4KnobE
 195              	.LVL4:
  16:leds.cpp      ****     float ctrl1 = hw.GetKnobValue((Tusenskona::Knob)1);
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccV2y1P7.s 			page 15


 196              		.loc 12 16 34 view .LVU46
 197 001c 2046     		mov	r0, r4
 198 001e 0121     		movs	r1, #1
  15:leds.cpp      ****     float ctrl1 = hw.GetKnobValue((Tusenskona::Knob)1);
 199              		.loc 12 15 33 view .LVU47
 200 0020 B0EE408A 		vmov.f32	s16, s0
 201              	.LVL5:
 202              		.loc 12 16 5 is_stmt 1 view .LVU48
 203              		.loc 12 16 34 is_stmt 0 view .LVU49
 204 0024 FFF7FEFF 		bl	_ZN5daisy10Tusenskona12GetKnobValueENS0_4KnobE
 205              	.LVL6:
  17:leds.cpp      ****     float ctrl2 = hw.GetKnobValue((Tusenskona::Knob)2);
 206              		.loc 12 17 34 view .LVU50
 207 0028 2046     		mov	r0, r4
 208 002a 0221     		movs	r1, #2
  16:leds.cpp      ****     float ctrl1 = hw.GetKnobValue((Tusenskona::Knob)1);
 209              		.loc 12 16 34 view .LVU51
 210 002c F0EE408A 		vmov.f32	s17, s0
 211              	.LVL7:
 212              		.loc 12 17 5 is_stmt 1 view .LVU52
 213              		.loc 12 17 34 is_stmt 0 view .LVU53
 214 0030 FFF7FEFF 		bl	_ZN5daisy10Tusenskona12GetKnobValueENS0_4KnobE
 215              	.LVL8:
 216              		.loc 12 17 34 view .LVU54
 217 0034 B0EE409A 		vmov.f32	s18, s0
 218              	.LVL9:
  18:leds.cpp      ****     float ctrl3 = hw.GetKnobValue((Tusenskona::Knob)3);
 219              		.loc 12 18 5 is_stmt 1 view .LVU55
 220              		.loc 12 18 34 is_stmt 0 view .LVU56
 221 0038 2046     		mov	r0, r4
 222 003a 0321     		movs	r1, #3
 223 003c FFF7FEFF 		bl	_ZN5daisy10Tusenskona12GetKnobValueENS0_4KnobE
 224              	.LVL10:
  19:leds.cpp      ****  
  20:leds.cpp      ****     hw.led.Set(ctrl*ctrl3, ctrl1*ctrl3, ctrl2*ctrl3);
 225              		.loc 12 20 15 view .LVU57
 226 0040 04F59070 		add	r0, r4, #288
 227              	.LVL11:
 228              		.loc 12 20 5 is_stmt 1 view .LVU58
 229              		.loc 12 20 15 is_stmt 0 view .LVU59
 230 0044 29EE001A 		vmul.f32	s2, s18, s0
 231 0048 68EE800A 		vmul.f32	s1, s17, s0
 232 004c 28EE000A 		vmul.f32	s0, s16, s0
 233              	.LVL12:
 234              		.loc 12 20 15 view .LVU60
 235 0050 FFF7FEFF 		bl	_ZN5daisy6RgbLed3SetEfff
 236              	.LVL13:
  21:leds.cpp      ****     hw.UpdateLeds();
 237              		.loc 12 21 5 is_stmt 1 view .LVU61
 238              		.loc 12 21 18 is_stmt 0 view .LVU62
 239 0054 2046     		mov	r0, r4
  22:leds.cpp      **** 
  23:leds.cpp      **** }
 240              		.loc 12 23 1 view .LVU63
 241 0056 BDEC048B 		vldm	sp!, {d8-d9}
 242              		.cfi_restore 82
 243              		.cfi_restore 83
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccV2y1P7.s 			page 16


 244              		.cfi_restore 80
 245              		.cfi_restore 81
 246              		.cfi_def_cfa_offset 8
 247              	.LVL14:
 248              		.loc 12 23 1 view .LVU64
 249 005a BDE81040 		pop	{r4, lr}
 250              		.cfi_restore 14
 251              		.cfi_restore 4
 252              		.cfi_def_cfa_offset 0
  21:leds.cpp      ****     hw.UpdateLeds();
 253              		.loc 12 21 18 view .LVU65
 254 005e FFF7FEBF 		b	_ZN5daisy10Tusenskona10UpdateLedsEv
 255              	.LVL15:
 256              	.L6:
 257 0062 00BF     		.align	2
 258              	.L5:
 259 0064 00000000 		.word	.LANCHOR0
 260              		.cfi_endproc
 261              	.LFE4747:
 263              		.section	.text.startup.main,"ax",%progbits
 264              		.align	1
 265              		.p2align 2,,3
 266              		.global	main
 267              		.syntax unified
 268              		.thumb
 269              		.thumb_func
 271              	main:
 272              	.LFB4748:
  24:leds.cpp      **** 
  25:leds.cpp      **** int main(void)
  26:leds.cpp      **** {
 273              		.loc 12 26 1 is_stmt 1 view -0
 274              		.cfi_startproc
 275              		@ Volatile: function does not return.
 276              		@ args = 0, pretend = 0, frame = 0
 277              		@ frame_needed = 0, uses_anonymous_args = 0
  27:leds.cpp      ****     hw.Init();
 278              		.loc 12 27 5 view .LVU67
  26:leds.cpp      ****     hw.Init();
 279              		.loc 12 26 1 is_stmt 0 view .LVU68
 280 0000 08B5     		push	{r3, lr}
 281              		.cfi_def_cfa_offset 8
 282              		.cfi_offset 3, -8
 283              		.cfi_offset 14, -4
 284              		.loc 12 27 12 view .LVU69
 285 0002 0021     		movs	r1, #0
 286 0004 0848     		ldr	r0, .L10
 287 0006 FFF7FEFF 		bl	_ZN5daisy10Tusenskona4InitEb
 288              	.LVL16:
  28:leds.cpp      ****     hw.SetAudioBlockSize(48); 
 289              		.loc 12 28 5 is_stmt 1 view .LVU70
 290              		.loc 12 28 25 is_stmt 0 view .LVU71
 291 000a 3021     		movs	r1, #48
 292 000c 0648     		ldr	r0, .L10
 293 000e FFF7FEFF 		bl	_ZN5daisy10Tusenskona17SetAudioBlockSizeEj
 294              	.LVL17:
  29:leds.cpp      ****     hw.SetAudioSampleRate(SaiHandle::Config::SampleRate::SAI_48KHZ);
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccV2y1P7.s 			page 17


 295              		.loc 12 29 5 is_stmt 1 view .LVU72
 296              		.loc 12 29 26 is_stmt 0 view .LVU73
 297 0012 0548     		ldr	r0, .L10
 298 0014 0321     		movs	r1, #3
 299 0016 FFF7FEFF 		bl	_ZN5daisy10Tusenskona18SetAudioSampleRateENS_9SaiHandle6Config10SampleRateE
 300              	.LVL18:
  30:leds.cpp      **** 
  31:leds.cpp      ****     hw.StartAdc();
 301              		.loc 12 31 5 is_stmt 1 view .LVU74
 302              		.loc 12 31 16 is_stmt 0 view .LVU75
 303 001a 0348     		ldr	r0, .L10
 304 001c FFF7FEFF 		bl	_ZN5daisy10Tusenskona8StartAdcEv
 305              	.LVL19:
 306              	.L8:
  32:leds.cpp      **** 
  33:leds.cpp      ****     while(1) {
 307              		.loc 12 33 5 is_stmt 1 discriminator 1 view .LVU76
  34:leds.cpp      ****         UpdateControls();
 308              		.loc 12 34 9 discriminator 1 view .LVU77
 309              		.loc 12 34 23 is_stmt 0 discriminator 1 view .LVU78
 310 0020 FFF7FEFF 		bl	_Z14UpdateControlsv
 311              	.LVL20:
  33:leds.cpp      ****         UpdateControls();
 312              		.loc 12 33 5 is_stmt 1 discriminator 1 view .LVU79
 313 0024 FCE7     		b	.L8
 314              	.L11:
 315 0026 00BF     		.align	2
 316              	.L10:
 317 0028 00000000 		.word	.LANCHOR0
 318              		.cfi_endproc
 319              	.LFE4748:
 321              		.section	.text.startup._GLOBAL__sub_I_hw,"ax",%progbits
 322              		.align	1
 323              		.p2align 2,,3
 324              		.syntax unified
 325              		.thumb
 326              		.thumb_func
 328              	_GLOBAL__sub_I_hw:
 329              	.LFB5311:
  35:leds.cpp      ****     }
  36:leds.cpp      **** }
 330              		.loc 12 36 1 view -0
 331              		.cfi_startproc
 332              		@ args = 0, pretend = 0, frame = 0
 333              		@ frame_needed = 0, uses_anonymous_args = 0
 334              		@ link register save eliminated.
 335              	.LBB299:
 336              	.LBI299:
 337              		.loc 12 36 1 view .LVU81
 338              	.LVL21:
 339              	.LBB300:
 340              	.LBB301:
 341              	.LBI301:
  30:../../tusenskona/src/tusenskona.h ****     ~Tusenskona() {}
 342              		.loc 1 30 5 view .LVU82
 343              	.LBB302:
 344              	.LBB303:
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccV2y1P7.s 			page 18


 345              	.LBI303:
  21:../../libDaisy//src/daisy_seed.h ****     ~DaisySeed() {}
 346              		.loc 7 21 5 view .LVU83
 347              	.LBB304:
 348              	.LBB305:
 349              	.LBI305:
 350              		.file 13 "../../libDaisy//src/per/qspi.h"
   1:../../libDaisy//src/per/qspi.h **** #ifndef DSY_QSPI
   2:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI /**< Macro */
   3:../../libDaisy//src/per/qspi.h **** 
   4:../../libDaisy//src/per/qspi.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation
   5:../../libDaisy//src/per/qspi.h **** 
   6:../../libDaisy//src/per/qspi.h **** #include <cstdint>
   7:../../libDaisy//src/per/qspi.h **** #include "daisy_core.h" // Added for dsy_gpio_pin typedef
   8:../../libDaisy//src/per/qspi.h **** 
   9:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_TEXT       \
  10:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  11:../../libDaisy//src/per/qspi.h ****         ".qspiflash_text"))) /**< used for reading memory in memory_mapped mode. */
  12:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_DATA       \
  13:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  14:../../libDaisy//src/per/qspi.h ****         ".qspiflash_data"))) /**< used for reading memory in memory_mapped mode. */
  15:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_BSS        \
  16:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  17:../../libDaisy//src/per/qspi.h ****         ".qspiflash_bss"))) /**< used for reading memory in memory_mapped mode. */
  18:../../libDaisy//src/per/qspi.h **** 
  19:../../libDaisy//src/per/qspi.h **** namespace daisy
  20:../../libDaisy//src/per/qspi.h **** {
  21:../../libDaisy//src/per/qspi.h **** /** @addtogroup serial
  22:../../libDaisy//src/per/qspi.h **** @{
  23:../../libDaisy//src/per/qspi.h **** */
  24:../../libDaisy//src/per/qspi.h **** 
  25:../../libDaisy//src/per/qspi.h **** /** 
  26:../../libDaisy//src/per/qspi.h ****  Driver for QSPI peripheral to interface with external flash memory. \n 
  27:../../libDaisy//src/per/qspi.h ****     Currently supported QSPI Devices: \n 
  28:../../libDaisy//src/per/qspi.h ****     * IS25LP080D
  29:../../libDaisy//src/per/qspi.h **** */
  30:../../libDaisy//src/per/qspi.h **** class QSPIHandle
  31:../../libDaisy//src/per/qspi.h **** {
  32:../../libDaisy//src/per/qspi.h ****   public:
  33:../../libDaisy//src/per/qspi.h ****     enum Result
  34:../../libDaisy//src/per/qspi.h ****     {
  35:../../libDaisy//src/per/qspi.h ****         OK = 0,
  36:../../libDaisy//src/per/qspi.h ****         ERR
  37:../../libDaisy//src/per/qspi.h ****     };
  38:../../libDaisy//src/per/qspi.h **** 
  39:../../libDaisy//src/per/qspi.h ****     /** Indicates the current status of the module. 
  40:../../libDaisy//src/per/qspi.h ****          *  Warnings are indicated by a leading W.
  41:../../libDaisy//src/per/qspi.h ****          *  Errors are indicated by a leading E and cause an immediate exit.
  42:../../libDaisy//src/per/qspi.h ****          * 
  43:../../libDaisy//src/per/qspi.h ****          *  \param GOOD - No errors have been reported.
  44:../../libDaisy//src/per/qspi.h ****          *  \param E_HAL_ERROR - HAL code did not return HAL_OK.
  45:../../libDaisy//src/per/qspi.h ****          *  \param E_SWITCHING_MODES - An error was encountered while switching QSPI peripheral mod
  46:../../libDaisy//src/per/qspi.h ****          *  \param E_INVALID_MODE - QSPI should not be written to while the program is executing fr
  47:../../libDaisy//src/per/qspi.h ****          */
  48:../../libDaisy//src/per/qspi.h ****     enum Status
  49:../../libDaisy//src/per/qspi.h ****     {
  50:../../libDaisy//src/per/qspi.h ****         GOOD = 0,
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccV2y1P7.s 			page 19


  51:../../libDaisy//src/per/qspi.h ****         E_HAL_ERROR,
  52:../../libDaisy//src/per/qspi.h ****         E_SWITCHING_MODES,
  53:../../libDaisy//src/per/qspi.h ****         E_INVALID_MODE,
  54:../../libDaisy//src/per/qspi.h ****     };
  55:../../libDaisy//src/per/qspi.h **** 
  56:../../libDaisy//src/per/qspi.h ****     /** Configuration structure for interfacing with QSPI Driver */
  57:../../libDaisy//src/per/qspi.h ****     struct Config
  58:../../libDaisy//src/per/qspi.h ****     {
  59:../../libDaisy//src/per/qspi.h ****         /** Flash Devices supported. (Both of these are more-or-less the same, just different sizes
  60:../../libDaisy//src/per/qspi.h ****         enum Device
  61:../../libDaisy//src/per/qspi.h ****         {
  62:../../libDaisy//src/per/qspi.h ****             IS25LP080D,  /**< & */
  63:../../libDaisy//src/per/qspi.h ****             IS25LP064A,  /**< & */
  64:../../libDaisy//src/per/qspi.h ****             DEVICE_LAST, /**< & */
  65:../../libDaisy//src/per/qspi.h ****         };
  66:../../libDaisy//src/per/qspi.h **** 
  67:../../libDaisy//src/per/qspi.h ****         /** 
  68:../../libDaisy//src/per/qspi.h ****         Modes of operation.
  69:../../libDaisy//src/per/qspi.h ****         Memory Mapped mode: QSPI configured so that the QSPI can be
  70:../../libDaisy//src/per/qspi.h ****         read from starting address 0x90000000. Writing is not
  71:../../libDaisy//src/per/qspi.h ****         possible in this mode. \n 
  72:../../libDaisy//src/per/qspi.h ****         Indirect Polling mode: Device driver enabled. 
  73:../../libDaisy//src/per/qspi.h ****         */
  74:../../libDaisy//src/per/qspi.h ****         enum Mode
  75:../../libDaisy//src/per/qspi.h ****         {
  76:../../libDaisy//src/per/qspi.h ****             MEMORY_MAPPED,    /**< & */
  77:../../libDaisy//src/per/qspi.h ****             INDIRECT_POLLING, /**< & */
  78:../../libDaisy//src/per/qspi.h ****             MODE_LAST,
  79:../../libDaisy//src/per/qspi.h ****         };
  80:../../libDaisy//src/per/qspi.h **** 
  81:../../libDaisy//src/per/qspi.h ****         //SCK,  CE# (active low)
  82:../../libDaisy//src/per/qspi.h ****         struct
  83:../../libDaisy//src/per/qspi.h ****         {
  84:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io0; /**< & */
  85:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io1; /**< & */
  86:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io2; /**< & */
  87:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io3; /**< & */
  88:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin clk; /**< & */
  89:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin ncs; /**< & */
  90:../../libDaisy//src/per/qspi.h ****         } pin_config;
  91:../../libDaisy//src/per/qspi.h **** 
  92:../../libDaisy//src/per/qspi.h ****         Device device;
  93:../../libDaisy//src/per/qspi.h ****         Mode   mode;
  94:../../libDaisy//src/per/qspi.h ****     };
  95:../../libDaisy//src/per/qspi.h **** 
  96:../../libDaisy//src/per/qspi.h ****     /** 
  97:../../libDaisy//src/per/qspi.h ****         Initializes QSPI peripheral, and Resets, and prepares memory for access.
  98:../../libDaisy//src/per/qspi.h ****         \param config should be populated with the mode, device and pin_config before calling this 
  99:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 100:../../libDaisy//src/per/qspi.h ****         */
 101:../../libDaisy//src/per/qspi.h ****     Result Init(const Config& config);
 102:../../libDaisy//src/per/qspi.h **** 
 103:../../libDaisy//src/per/qspi.h ****     /** Returns the current config. */
 104:../../libDaisy//src/per/qspi.h ****     const Config& GetConfig() const;
 105:../../libDaisy//src/per/qspi.h **** 
 106:../../libDaisy//src/per/qspi.h ****     // Couldn't this just be called before anything else in init? That
 107:../../libDaisy//src/per/qspi.h ****     // would make manually calling it unnecessary.
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccV2y1P7.s 			page 20


 108:../../libDaisy//src/per/qspi.h ****     /** 
 109:../../libDaisy//src/per/qspi.h ****         Deinitializes the peripheral
 110:../../libDaisy//src/per/qspi.h ****         This should be called before reinitializing QSPI in a different mode.
 111:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 112:../../libDaisy//src/per/qspi.h ****         */
 113:../../libDaisy//src/per/qspi.h ****     Result DeInit();
 114:../../libDaisy//src/per/qspi.h **** 
 115:../../libDaisy//src/per/qspi.h ****     /** 
 116:../../libDaisy//src/per/qspi.h ****         Writes a single page to to the specified address on the QSPI chip.
 117:../../libDaisy//src/per/qspi.h ****         For IS25LP*, page size is 256 bytes.
 118:../../libDaisy//src/per/qspi.h ****         \param address Address to write to
 119:../../libDaisy//src/per/qspi.h ****         \param size Buffer size
 120:../../libDaisy//src/per/qspi.h ****         \param buffer Buffer to write
 121:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 122:../../libDaisy//src/per/qspi.h ****         */
 123:../../libDaisy//src/per/qspi.h ****     Result WritePage(uint32_t address, uint32_t size, uint8_t* buffer);
 124:../../libDaisy//src/per/qspi.h **** 
 125:../../libDaisy//src/per/qspi.h ****     /** 
 126:../../libDaisy//src/per/qspi.h ****         Writes data in buffer to to the QSPI. Starting at address to address+size 
 127:../../libDaisy//src/per/qspi.h ****         \param address Address to write to
 128:../../libDaisy//src/per/qspi.h ****         \param size Buffer size
 129:../../libDaisy//src/per/qspi.h ****         \param buffer Buffer to write
 130:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 131:../../libDaisy//src/per/qspi.h ****         */
 132:../../libDaisy//src/per/qspi.h ****     Result Write(uint32_t address, uint32_t size, uint8_t* buffer);
 133:../../libDaisy//src/per/qspi.h **** 
 134:../../libDaisy//src/per/qspi.h ****     /** 
 135:../../libDaisy//src/per/qspi.h ****         Erases the area specified on the chip.
 136:../../libDaisy//src/per/qspi.h ****         Erasures will happen by 4K, 32K or 64K increments.
 137:../../libDaisy//src/per/qspi.h ****         Smallest erase possible is 4kB at a time. (on IS25LP*)
 138:../../libDaisy//src/per/qspi.h ****         \param start_addr Address to begin erasing from
 139:../../libDaisy//src/per/qspi.h ****         \param end_addr  Address to stop erasing at
 140:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 141:../../libDaisy//src/per/qspi.h ****         */
 142:../../libDaisy//src/per/qspi.h ****     Result Erase(uint32_t start_addr, uint32_t end_addr);
 143:../../libDaisy//src/per/qspi.h **** 
 144:../../libDaisy//src/per/qspi.h ****     /**  
 145:../../libDaisy//src/per/qspi.h ****          Erases a single sector of the chip.  
 146:../../libDaisy//src/per/qspi.h ****         TODO: Document the size of this function. 
 147:../../libDaisy//src/per/qspi.h ****         \param address Address of sector to erase
 148:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 149:../../libDaisy//src/per/qspi.h ****         */
 150:../../libDaisy//src/per/qspi.h ****     Result EraseSector(uint32_t address);
 151:../../libDaisy//src/per/qspi.h **** 
 152:../../libDaisy//src/per/qspi.h ****     /** Returns the current class status. Useful for debugging.
 153:../../libDaisy//src/per/qspi.h ****      *  \returns Status
 154:../../libDaisy//src/per/qspi.h ****      */
 155:../../libDaisy//src/per/qspi.h ****     Status GetStatus();
 156:../../libDaisy//src/per/qspi.h **** 
 157:../../libDaisy//src/per/qspi.h ****     /** Returns a pointer to the actual memory used 
 158:../../libDaisy//src/per/qspi.h ****      *  The memory at this address is read-only
 159:../../libDaisy//src/per/qspi.h ****      *  to write to it use the Write function.
 160:../../libDaisy//src/per/qspi.h ****      * 
 161:../../libDaisy//src/per/qspi.h ****      *  \param offset returns the pointer starting this 
 162:../../libDaisy//src/per/qspi.h ****      *                many bytes into the memory
 163:../../libDaisy//src/per/qspi.h ****     */
 164:../../libDaisy//src/per/qspi.h ****     void* GetData(uint32_t offset = 0);
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccV2y1P7.s 			page 21


 165:../../libDaisy//src/per/qspi.h **** 
 166:../../libDaisy//src/per/qspi.h ****     QSPIHandle() : pimpl_(nullptr) {}
 351              		.loc 13 166 5 view .LVU84
 352              	.LBB306:
 353              	.LBB307:
 354              		.loc 13 166 34 is_stmt 0 view .LVU85
 355 0000 0448     		ldr	r0, .L13
 356 0002 0023     		movs	r3, #0
 357              	.LBE307:
 358              	.LBE306:
 359              	.LBE305:
 360              	.LBE304:
 361              	.LBE303:
 362              	.LBE302:
 363              	.LBE301:
   8:leds.cpp      **** 
 364              		.loc 12 8 12 view .LVU86
 365 0004 044A     		ldr	r2, .L13+4
 366 0006 0549     		ldr	r1, .L13+8
 367              	.LBB340:
 368              	.LBB339:
 369              	.LBB324:
 370              	.LBB323:
 371              	.LBB310:
 372              	.LBB309:
 373              	.LBB308:
 374              		.loc 13 166 34 view .LVU87
 375 0008 0360     		str	r3, [r0]
 376              	.LVL22:
 377              		.loc 13 166 34 view .LVU88
 378              	.LBE308:
 379              	.LBE309:
 380              	.LBE310:
 381              	.LBB311:
 382              	.LBI311:
  87:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 383              		.loc 11 87 5 is_stmt 1 view .LVU89
 384              	.LBB312:
 385              	.LBB313:
  87:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 386              		.loc 11 87 35 is_stmt 0 view .LVU90
 387 000a 4361     		str	r3, [r0, #20]
 388              	.LVL23:
  87:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 389              		.loc 11 87 35 view .LVU91
 390              	.LBE313:
 391              	.LBE312:
 392              	.LBE311:
 393              	.LBB314:
 394              	.LBI314:
 109:../../libDaisy//src/per/adc.h ****     ~AdcHandle() {}
 395              		.loc 10 109 5 is_stmt 1 view .LVU92
 109:../../libDaisy//src/per/adc.h ****     ~AdcHandle() {}
 396              		.loc 10 109 5 is_stmt 0 view .LVU93
 397              	.LBE314:
 398              	.LBB315:
 399              	.LBI315:
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccV2y1P7.s 			page 22


 400              		.file 14 "../../libDaisy//src/per/dac.h"
   1:../../libDaisy//src/per/dac.h **** #pragma once
   2:../../libDaisy//src/per/dac.h **** #ifndef DSY_DAC_H
   3:../../libDaisy//src/per/dac.h **** #define DSY_DAC_H
   4:../../libDaisy//src/per/dac.h **** 
   5:../../libDaisy//src/per/dac.h **** #include "daisy_core.h"
   6:../../libDaisy//src/per/dac.h **** 
   7:../../libDaisy//src/per/dac.h **** namespace daisy
   8:../../libDaisy//src/per/dac.h **** {
   9:../../libDaisy//src/per/dac.h **** /** @brief DAC handle for Built-in DAC Peripheral 
  10:../../libDaisy//src/per/dac.h ****  *  @ingroup per_analog
  11:../../libDaisy//src/per/dac.h ****  ** 
  12:../../libDaisy//src/per/dac.h ****  ** For now only Normal Mode is supported,
  13:../../libDaisy//src/per/dac.h ****  ** Sample and hold mode provides reduced power consumption, but requires a bit more setup.
  14:../../libDaisy//src/per/dac.h ****  **
  15:../../libDaisy//src/per/dac.h ****  ** For now connecting the DAC through other internal peripherals is also not supported.
  16:../../libDaisy//src/per/dac.h ****  **
  17:../../libDaisy//src/per/dac.h ****  ** Since the DAC channels have dedicated pins we don't need to pass in a pin config like with
  18:../../libDaisy//src/per/dac.h ****  ** other modules. However, it is still important to not try to use the DAC pins for anything else.
  19:../../libDaisy//src/per/dac.h ****  ** DAC Channel 1 is on PA4, and DAC Channel 2 is on PA5
  20:../../libDaisy//src/per/dac.h ****  ***/
  21:../../libDaisy//src/per/dac.h **** class DacHandle
  22:../../libDaisy//src/per/dac.h **** {
  23:../../libDaisy//src/per/dac.h ****   public:
  24:../../libDaisy//src/per/dac.h ****     /** Return Values for the DacHandle class */
  25:../../libDaisy//src/per/dac.h ****     enum class Result
  26:../../libDaisy//src/per/dac.h ****     {
  27:../../libDaisy//src/per/dac.h ****         OK,
  28:../../libDaisy//src/per/dac.h ****         ERR,
  29:../../libDaisy//src/per/dac.h ****     };
  30:../../libDaisy//src/per/dac.h **** 
  31:../../libDaisy//src/per/dac.h ****     /** Selects which channel(s) will be configured for use. */
  32:../../libDaisy//src/per/dac.h ****     enum class Channel
  33:../../libDaisy//src/per/dac.h ****     {
  34:../../libDaisy//src/per/dac.h ****         ONE,
  35:../../libDaisy//src/per/dac.h ****         TWO,
  36:../../libDaisy//src/per/dac.h ****         BOTH,
  37:../../libDaisy//src/per/dac.h ****     };
  38:../../libDaisy//src/per/dac.h **** 
  39:../../libDaisy//src/per/dac.h ****     /** Sets the Mode for the DAC channels.
  40:../../libDaisy//src/per/dac.h ****      **
  41:../../libDaisy//src/per/dac.h ****      ** Polling mode uses the blocking mode to transmit a single value at a time.
  42:../../libDaisy//src/per/dac.h ****      **
  43:../../libDaisy//src/per/dac.h ****      ** DMA mode uses a buffer, and periodically transmits it triggering a 
  44:../../libDaisy//src/per/dac.h ****      ** callback to fill the buffer when it is ready for more samples.
  45:../../libDaisy//src/per/dac.h ****      ***/
  46:../../libDaisy//src/per/dac.h ****     enum class Mode
  47:../../libDaisy//src/per/dac.h ****     {
  48:../../libDaisy//src/per/dac.h ****         POLLING,
  49:../../libDaisy//src/per/dac.h ****         DMA,
  50:../../libDaisy//src/per/dac.h ****     };
  51:../../libDaisy//src/per/dac.h **** 
  52:../../libDaisy//src/per/dac.h ****     /** Sets the number of bits per sample transmitted out of the DAC.
  53:../../libDaisy//src/per/dac.h ****      ** The output range will be: 0V - VDDA
  54:../../libDaisy//src/per/dac.h ****      ** The resolution will be roughly: bitdepth / (VDDA - 0V) 
  55:../../libDaisy//src/per/dac.h ****      ***/
  56:../../libDaisy//src/per/dac.h ****     enum class BitDepth
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccV2y1P7.s 			page 23


  57:../../libDaisy//src/per/dac.h ****     {
  58:../../libDaisy//src/per/dac.h ****         BITS_8,
  59:../../libDaisy//src/per/dac.h ****         BITS_12
  60:../../libDaisy//src/per/dac.h ****     };
  61:../../libDaisy//src/per/dac.h **** 
  62:../../libDaisy//src/per/dac.h ****     /** Sets whether the DAC output is buffered for higher drive ability. */
  63:../../libDaisy//src/per/dac.h ****     enum class BufferState
  64:../../libDaisy//src/per/dac.h ****     {
  65:../../libDaisy//src/per/dac.h ****         ENABLED,
  66:../../libDaisy//src/per/dac.h ****         DISABLED,
  67:../../libDaisy//src/per/dac.h ****     };
  68:../../libDaisy//src/per/dac.h **** 
  69:../../libDaisy//src/per/dac.h ****     /** Configuration structure for initializing the DAC structure. */
  70:../../libDaisy//src/per/dac.h ****     struct Config
  71:../../libDaisy//src/per/dac.h ****     {
  72:../../libDaisy//src/per/dac.h ****         /** Target Samplerate in Hz used to configure the internal 
  73:../../libDaisy//src/per/dac.h ****          ** timebase for DMA mode. Does nothing in POLLING mode.
  74:../../libDaisy//src/per/dac.h ****          ** If the value is 0 at Init time this will default to 48000Hz 
  75:../../libDaisy//src/per/dac.h ****          ** otherwise the driver will attempt meet the target.*/
  76:../../libDaisy//src/per/dac.h ****         uint32_t target_samplerate;
  77:../../libDaisy//src/per/dac.h **** 
  78:../../libDaisy//src/per/dac.h ****         Channel     chn;
  79:../../libDaisy//src/per/dac.h ****         Mode        mode;
  80:../../libDaisy//src/per/dac.h ****         BitDepth    bitdepth;
  81:../../libDaisy//src/per/dac.h ****         BufferState buff_state;
  82:../../libDaisy//src/per/dac.h ****     };
  83:../../libDaisy//src/per/dac.h **** 
  84:../../libDaisy//src/per/dac.h ****     DacHandle() : pimpl_(nullptr) {}
 401              		.loc 14 84 5 is_stmt 1 view .LVU94
 402              	.LBB316:
 403              	.LBB317:
 404              		.loc 14 84 33 is_stmt 0 view .LVU95
 405 000c 0362     		str	r3, [r0, #32]
 406              	.LVL24:
 407              		.loc 14 84 33 view .LVU96
 408              	.LBE317:
 409              	.LBE316:
 410              	.LBE315:
 411              	.LBB318:
 412              	.LBI318:
  40:../../libDaisy//src/hid/usb.h **** 
 413              		.loc 9 40 5 is_stmt 1 view .LVU97
  40:../../libDaisy//src/hid/usb.h **** 
 414              		.loc 9 40 5 is_stmt 0 view .LVU98
 415              	.LBE318:
 416              	.LBB319:
 417              	.LBI319:
  96:../../libDaisy//src/sys/system.h ****     ~System() {}
 418              		.loc 8 96 5 is_stmt 1 view .LVU99
  96:../../libDaisy//src/sys/system.h ****     ~System() {}
 419              		.loc 8 96 5 is_stmt 0 view .LVU100
 420              	.LBE319:
 421              	.LBB320:
 422              	.LBI320:
 423              		.file 15 "../../libDaisy//src/per/sai.h"
   1:../../libDaisy//src/per/sai.h **** #pragma once
   2:../../libDaisy//src/per/sai.h **** #ifndef DSY_SAI_H
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccV2y1P7.s 			page 24


   3:../../libDaisy//src/per/sai.h **** #define DSY_SAI_H
   4:../../libDaisy//src/per/sai.h **** 
   5:../../libDaisy//src/per/sai.h **** #include "daisy_core.h"
   6:../../libDaisy//src/per/sai.h **** 
   7:../../libDaisy//src/per/sai.h **** namespace daisy
   8:../../libDaisy//src/per/sai.h **** {
   9:../../libDaisy//src/per/sai.h **** /** 
  10:../../libDaisy//src/per/sai.h ****  * Support for I2S Audio Protocol with different bit-depth, samplerate options
  11:../../libDaisy//src/per/sai.h ****  * Allows for master or slave, as well as freedom of selecting direction, 
  12:../../libDaisy//src/per/sai.h ****  * and other behavior for each peripheral, and block.
  13:../../libDaisy//src/per/sai.h ****  * 
  14:../../libDaisy//src/per/sai.h ****  * DMA Transfer commands must use buffers located within non-cached memory or use cache maintenance
  15:../../libDaisy//src/per/sai.h ****  * To declare an unitialized global element in the DMA memory section:
  16:../../libDaisy//src/per/sai.h ****  *    int32_t DSY_DMA_BUFFER_SECTOR my_buffer[96];
  17:../../libDaisy//src/per/sai.h ****  *
  18:../../libDaisy//src/per/sai.h ****  * Callback functions will be called once per half of the buffer. In the above example, 
  19:../../libDaisy//src/per/sai.h ****  * the callback function would be called once for every 48 samples.
  20:../../libDaisy//src/per/sai.h ****  * 
  21:../../libDaisy//src/per/sai.h ****  * Use SAI Handle like this:
  22:../../libDaisy//src/per/sai.h ****  * 
  23:../../libDaisy//src/per/sai.h ****  *  SaiHandle::Config sai_config;
  24:../../libDaisy//src/per/sai.h ****  *  sai_config.periph          = SaiHandle::Config::Peripheral::SAI_1;
  25:../../libDaisy//src/per/sai.h ****  *  sai_config.sr              = SaiHandle::Config::SampleRate::SAI_48KHZ;
  26:../../libDaisy//src/per/sai.h ****  *  sai_config.bit_depth       = SaiHandle::Config::BitDepth::SAI_24BIT;
  27:../../libDaisy//src/per/sai.h ****  *  sai_config.a_sync          = SaiHandle::Config::Sync::MASTER;
  28:../../libDaisy//src/per/sai.h ****  *  sai_config.b_sync          = SaiHandle::Config::Sync::SLAVE;
  29:../../libDaisy//src/per/sai.h ****  *  sai_config.a_dir           = SaiHandle::Config::Direction::RECEIVE;
  30:../../libDaisy//src/per/sai.h ****  *  sai_config.b_dir           = SaiHandle::Config::Direction::TRANSMIT;
  31:../../libDaisy//src/per/sai.h ****  *  sai_config.pin_config.fs   = {DSY_GPIOE, 4};
  32:../../libDaisy//src/per/sai.h ****  *  sai_config.pin_config.mclk = {DSY_GPIOE, 2};
  33:../../libDaisy//src/per/sai.h ****  *  sai_config.pin_config.sck  = {DSY_GPIOE, 5};
  34:../../libDaisy//src/per/sai.h ****  *  sai_config.pin_config.sa   = {DSY_GPIOE, 6};
  35:../../libDaisy//src/per/sai.h ****  *  sai_config.pin_config.sb   = {DSY_GPIOE, 3};
  36:../../libDaisy//src/per/sai.h ****  *  // Then Initialize
  37:../../libDaisy//src/per/sai.h ****  *  SaiHandle sai;
  38:../../libDaisy//src/per/sai.h ****  *  sai.Init(sai_config);
  39:../../libDaisy//src/per/sai.h ****  *  // Now you can use it:
  40:../../libDaisy//src/per/sai.h ****  *  sai.StartDma(. . .);
  41:../../libDaisy//src/per/sai.h ****  */
  42:../../libDaisy//src/per/sai.h **** class SaiHandle
  43:../../libDaisy//src/per/sai.h **** {
  44:../../libDaisy//src/per/sai.h ****   public:
  45:../../libDaisy//src/per/sai.h ****     /** Contains settings for initialising an SAI Interface */
  46:../../libDaisy//src/per/sai.h ****     struct Config
  47:../../libDaisy//src/per/sai.h ****     {
  48:../../libDaisy//src/per/sai.h ****         /** Specifies the internal peripheral to use (mapped to different hardware pins) */
  49:../../libDaisy//src/per/sai.h ****         enum class Peripheral
  50:../../libDaisy//src/per/sai.h ****         {
  51:../../libDaisy//src/per/sai.h ****             SAI_1,
  52:../../libDaisy//src/per/sai.h ****             SAI_2,
  53:../../libDaisy//src/per/sai.h ****         };
  54:../../libDaisy//src/per/sai.h **** 
  55:../../libDaisy//src/per/sai.h ****         /** Rate at which samples will be streaming to/from the device. */
  56:../../libDaisy//src/per/sai.h ****         enum class SampleRate
  57:../../libDaisy//src/per/sai.h ****         {
  58:../../libDaisy//src/per/sai.h ****             SAI_8KHZ,
  59:../../libDaisy//src/per/sai.h ****             SAI_16KHZ,
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccV2y1P7.s 			page 25


  60:../../libDaisy//src/per/sai.h ****             SAI_32KHZ,
  61:../../libDaisy//src/per/sai.h ****             SAI_48KHZ,
  62:../../libDaisy//src/per/sai.h ****             SAI_96KHZ,
  63:../../libDaisy//src/per/sai.h ****         };
  64:../../libDaisy//src/per/sai.h **** 
  65:../../libDaisy//src/per/sai.h ****         /** Bit Depth that the hardware expects to be transferred to/from the device. */
  66:../../libDaisy//src/per/sai.h ****         enum class BitDepth
  67:../../libDaisy//src/per/sai.h ****         {
  68:../../libDaisy//src/per/sai.h ****             SAI_16BIT,
  69:../../libDaisy//src/per/sai.h ****             SAI_24BIT,
  70:../../libDaisy//src/per/sai.h ****             SAI_32BIT,
  71:../../libDaisy//src/per/sai.h ****         };
  72:../../libDaisy//src/per/sai.h **** 
  73:../../libDaisy//src/per/sai.h ****         /** Specifies whether a particular block is the master or the slave 
  74:../../libDaisy//src/per/sai.h ****          ** If both are set to slave, no MCLK signal will be used, and it is
  75:../../libDaisy//src/per/sai.h ****          ** expected that the codec will have its own xtal.
  76:../../libDaisy//src/per/sai.h ****          */
  77:../../libDaisy//src/per/sai.h ****         enum class Sync
  78:../../libDaisy//src/per/sai.h ****         {
  79:../../libDaisy//src/per/sai.h ****             MASTER,
  80:../../libDaisy//src/per/sai.h ****             SLAVE,
  81:../../libDaisy//src/per/sai.h ****         };
  82:../../libDaisy//src/per/sai.h **** 
  83:../../libDaisy//src/per/sai.h ****         /** Specifies the direction for each peripheral block. */
  84:../../libDaisy//src/per/sai.h ****         enum class Direction
  85:../../libDaisy//src/per/sai.h ****         {
  86:../../libDaisy//src/per/sai.h ****             TRANSMIT,
  87:../../libDaisy//src/per/sai.h ****             RECEIVE,
  88:../../libDaisy//src/per/sai.h ****         };
  89:../../libDaisy//src/per/sai.h **** 
  90:../../libDaisy//src/per/sai.h ****         Peripheral periph;
  91:../../libDaisy//src/per/sai.h ****         struct
  92:../../libDaisy//src/per/sai.h ****         {
  93:../../libDaisy//src/per/sai.h ****             dsy_gpio_pin mclk, fs, sck, sa, sb;
  94:../../libDaisy//src/per/sai.h ****         } pin_config;
  95:../../libDaisy//src/per/sai.h ****         SampleRate sr;
  96:../../libDaisy//src/per/sai.h ****         BitDepth   bit_depth;
  97:../../libDaisy//src/per/sai.h ****         Sync       a_sync, b_sync;
  98:../../libDaisy//src/per/sai.h ****         Direction  a_dir, b_dir;
  99:../../libDaisy//src/per/sai.h ****     };
 100:../../libDaisy//src/per/sai.h **** 
 101:../../libDaisy//src/per/sai.h ****     /** Return values for SAI functions */
 102:../../libDaisy//src/per/sai.h ****     enum class Result
 103:../../libDaisy//src/per/sai.h ****     {
 104:../../libDaisy//src/per/sai.h ****         OK,
 105:../../libDaisy//src/per/sai.h ****         ERR,
 106:../../libDaisy//src/per/sai.h ****     };
 107:../../libDaisy//src/per/sai.h **** 
 108:../../libDaisy//src/per/sai.h ****     SaiHandle() : pimpl_(nullptr) {}
 424              		.loc 15 108 5 is_stmt 1 view .LVU101
 425              	.LBB321:
 426              	.LBB322:
 427              		.loc 15 108 33 is_stmt 0 view .LVU102
 428 000e C363     		str	r3, [r0, #60]
 429              	.LVL25:
 430              		.loc 15 108 33 view .LVU103
 431              	.LBE322:
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccV2y1P7.s 			page 26


 432              	.LBE321:
 433              	.LBE320:
 434              	.LBE323:
 435              	.LBE324:
 436              	.LBB325:
 437              	.LBI325:
  20:../../libDaisy//src/hid/encoder.h ****     ~Encoder() {}
 438              		.loc 6 20 5 is_stmt 1 view .LVU104
 439              	.LBB326:
 440              	.LBB327:
 441              	.LBI327:
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 442              		.loc 4 41 5 view .LVU105
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 443              		.loc 4 41 5 is_stmt 0 view .LVU106
 444              	.LBE327:
 445              	.LBE326:
 446              	.LBE325:
 447              	.LBB328:
 448              	.LBI328:
  21:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
 449              		.loc 5 21 5 is_stmt 1 view .LVU107
  21:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
 450              		.loc 5 21 5 is_stmt 0 view .LVU108
 451              	.LBE328:
 452              	.LBB329:
 453              	.LBI329:
  21:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
 454              		.loc 5 21 5 is_stmt 1 view .LVU109
  21:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
 455              		.loc 5 21 5 is_stmt 0 view .LVU110
 456              	.LBE329:
 457              	.LBB330:
 458              	.LBI330:
  21:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
 459              		.loc 5 21 5 is_stmt 1 view .LVU111
  21:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
 460              		.loc 5 21 5 is_stmt 0 view .LVU112
 461              	.LBE330:
 462              	.LBB331:
 463              	.LBI331:
  21:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
 464              		.loc 5 21 5 is_stmt 1 view .LVU113
  21:../../libDaisy//src/hid/ctrl.h ****     /** destructor */
 465              		.loc 5 21 5 is_stmt 0 view .LVU114
 466              	.LBE331:
 467              	.LBB332:
 468              	.LBI332:
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 469              		.loc 4 41 5 is_stmt 1 view .LVU115
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 470              		.loc 4 41 5 is_stmt 0 view .LVU116
 471              	.LBE332:
 472              	.LBB333:
 473              	.LBI333:
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 474              		.loc 4 41 5 is_stmt 1 view .LVU117
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccV2y1P7.s 			page 27


  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 475              		.loc 4 41 5 is_stmt 0 view .LVU118
 476              	.LBE333:
 477              	.LBB334:
 478              	.LBI334:
  17:../../libDaisy//src/hid/rgb_led.h ****     ~RgbLed() {}
 479              		.loc 2 17 5 is_stmt 1 view .LVU119
 480              	.LBB335:
 481              	.LBB336:
 482              	.LBI336:
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 483              		.loc 3 24 5 view .LVU120
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 484              		.loc 3 24 5 is_stmt 0 view .LVU121
 485              	.LBE336:
 486              	.LBB337:
 487              	.LBI337:
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 488              		.loc 3 24 5 is_stmt 1 view .LVU122
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 489              		.loc 3 24 5 is_stmt 0 view .LVU123
 490              	.LBE337:
 491              	.LBB338:
 492              	.LBI338:
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 493              		.loc 3 24 5 is_stmt 1 view .LVU124
  24:../../libDaisy//src/hid/led.h ****     ~Led() {}
 494              		.loc 3 24 5 is_stmt 0 view .LVU125
 495              	.LBE338:
 496              	.LBE335:
 497              	.LBE334:
 498              	.LBE339:
 499              	.LBE340:
   8:leds.cpp      **** 
 500              		.loc 12 8 12 view .LVU126
 501 0010 FFF7FEBF 		b	__aeabi_atexit
 502              	.LVL26:
 503              	.L14:
 504              		.align	2
 505              	.L13:
 506 0014 00000000 		.word	.LANCHOR0
 507 0018 00000000 		.word	__dso_handle
 508 001c 00000000 		.word	_ZN5daisy10TusenskonaD1Ev
 509              	.LBE300:
 510              	.LBE299:
 511              		.cfi_endproc
 512              	.LFE5311:
 514              		.section	.init_array,"aw",%init_array
 515              		.align	2
 516 0000 00000000 		.word	_GLOBAL__sub_I_hw(target1)
 517              		.global	hw
 518              		.section	.bss.hw,"aw",%nobits
 519              		.align	2
 520              		.set	.LANCHOR0,. + 0
 523              	hw:
 524 0000 00000000 		.space	372
 524      00000000 
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccV2y1P7.s 			page 28


 524      00000000 
 524      00000000 
 524      00000000 
 525              		.text
 526              	.Letext0:
 527              		.file 16 "/Applications/ARM/arm-none-eabi/include/machine/_default_types.h"
 528              		.file 17 "/Applications/ARM/arm-none-eabi/include/sys/_stdint.h"
 529              		.file 18 "/Applications/ARM/arm-none-eabi/include/stdint.h"
 530              		.file 19 "/Applications/ARM/lib/gcc/arm-none-eabi/10.3.1/include/stddef.h"
 531              		.file 20 "/Applications/ARM/arm-none-eabi/include/c++/10.3.1/cmath"
 532              		.file 21 "/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h"
 533              		.file 22 "/Applications/ARM/arm-none-eabi/include/c++/10.3.1/cstdlib"
 534              		.file 23 "/Applications/ARM/arm-none-eabi/include/c++/10.3.1/cstdint"
 535              		.file 24 "/Applications/ARM/arm-none-eabi/include/c++/10.3.1/type_traits"
 536              		.file 25 "/Applications/ARM/arm-none-eabi/include/c++/10.3.1/debug/debug.h"
 537              		.file 26 "/Applications/ARM/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v7e-m+dp/hard/bit
 538              		.file 27 "/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/algorithmfwd.h"
 539              		.file 28 "/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_pair.h"
 540              		.file 29 "/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/exception_ptr.h"
 541              		.file 30 "/Applications/ARM/arm-none-eabi/include/c++/10.3.1/cstdarg"
 542              		.file 31 "/Applications/ARM/arm-none-eabi/include/c++/10.3.1/cstdio"
 543              		.file 32 "/Applications/ARM/arm-none-eabi/include/c++/10.3.1/cstring"
 544              		.file 33 "/Applications/ARM/arm-none-eabi/include/c++/10.3.1/cwchar"
 545              		.file 34 "/Applications/ARM/arm-none-eabi/include/c++/10.3.1/clocale"
 546              		.file 35 "/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h"
 547              		.file 36 "/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/stl_iterator.h"
 548              		.file 37 "/Applications/ARM/arm-none-eabi/include/c++/10.3.1/bits/predefined_ops.h"
 549              		.file 38 "/Applications/ARM/arm-none-eabi/include/sys/_types.h"
 550              		.file 39 "/Applications/ARM/arm-none-eabi/include/sys/reent.h"
 551              		.file 40 "/Applications/ARM/arm-none-eabi/include/sys/lock.h"
 552              		.file 41 "/Applications/ARM/arm-none-eabi/include/math.h"
 553              		.file 42 "/Applications/ARM/arm-none-eabi/include/stdlib.h"
 554              		.file 43 "/Applications/ARM/arm-none-eabi/include/c++/10.3.1/math.h"
 555              		.file 44 "/Applications/ARM/arm-none-eabi/include/c++/10.3.1/stdlib.h"
 556              		.file 45 "../../libDaisy//src/daisy_core.h"
 557              		.file 46 "../../libDaisy//src/per/tim.h"
 558              		.file 47 "../../libDaisy//src/util/wav_format.h"
 559              		.file 48 "../../libDaisy//src/util/color.h"
 560              		.file 49 "../../libDaisy//src/dev/max11300.h"
 561              		.file 50 "../../libDaisy//src/per/gpio.h"
 562              		.file 51 "../../libDaisy//src/dev/sdram.h"
 563              		.file 52 "/Applications/ARM/lib/gcc/arm-none-eabi/10.3.1/include/stdarg.h"
 564              		.file 53 "/Applications/ARM/arm-none-eabi/include/stdio.h"
 565              		.file 54 "/Applications/ARM/arm-none-eabi/include/string.h"
 566              		.file 55 "../../DaisySP//Source/Control/adenv.h"
 567              		.file 56 "../../DaisySP//Source/Utility/dsp.h"
 568              		.file 57 "/Applications/ARM/arm-none-eabi/include/wchar.h"
 569              		.file 58 "/Applications/ARM/arm-none-eabi/include/locale.h"
 570              		.file 59 "<built-in>"
 571              		.file 60 "../../libDaisy//src/dev/sr_595.h"
ARM GAS  /var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccV2y1P7.s 			page 29


DEFINED SYMBOLS
                            *ABS*:0000000000000000 leds.cpp
/var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccV2y1P7.s:19     .text._ZN5daisy10TusenskonaD2Ev:0000000000000000 $t
/var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccV2y1P7.s:26     .text._ZN5daisy10TusenskonaD2Ev:0000000000000000 _ZN5daisy10TusenskonaD2Ev
/var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccV2y1P7.s:26     .text._ZN5daisy10TusenskonaD2Ev:0000000000000000 _ZN5daisy10TusenskonaD1Ev
/var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccV2y1P7.s:135    .text._Z14UpdateControlsv:0000000000000000 $t
/var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccV2y1P7.s:142    .text._Z14UpdateControlsv:0000000000000000 _Z14UpdateControlsv
/var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccV2y1P7.s:259    .text._Z14UpdateControlsv:0000000000000064 $d
/var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccV2y1P7.s:264    .text.startup.main:0000000000000000 $t
/var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccV2y1P7.s:271    .text.startup.main:0000000000000000 main
/var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccV2y1P7.s:317    .text.startup.main:0000000000000028 $d
/var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccV2y1P7.s:322    .text.startup._GLOBAL__sub_I_hw:0000000000000000 $t
/var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccV2y1P7.s:328    .text.startup._GLOBAL__sub_I_hw:0000000000000000 _GLOBAL__sub_I_hw
/var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccV2y1P7.s:506    .text.startup._GLOBAL__sub_I_hw:0000000000000014 $d
/var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccV2y1P7.s:515    .init_array:0000000000000000 $d
/var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccV2y1P7.s:523    .bss.hw:0000000000000000 hw
/var/folders/z2/7_lhr9dn53s9tj4s0rwtyswm0000gn/T//ccV2y1P7.s:519    .bss.hw:0000000000000000 $d
                           .group:0000000000000000 _ZN5daisy10TusenskonaD5Ev

UNDEFINED SYMBOLS
_ZN5daisy10Tusenskona21ProcessAnalogControlsEv
_ZN5daisy10Tusenskona22ProcessDigitalControlsEv
_ZN5daisy10Tusenskona12GetKnobValueENS0_4KnobE
_ZN5daisy6RgbLed3SetEfff
_ZN5daisy10Tusenskona10UpdateLedsEv
_ZN5daisy10Tusenskona4InitEb
_ZN5daisy10Tusenskona17SetAudioBlockSizeEj
_ZN5daisy10Tusenskona18SetAudioSampleRateENS_9SaiHandle6Config10SampleRateE
_ZN5daisy10Tusenskona8StartAdcEv
__aeabi_atexit
__dso_handle
